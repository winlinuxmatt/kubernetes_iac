{
  "version": 4,
  "terraform_version": "1.9.5",
  "serial": 19,
  "lineage": "bd179e92-6357-096f-1712-bb871eeb3fae",
  "outputs": {
    "kubeconfig": {
      "value": "apiVersion: v1\nkind: Config\nclusters:\n- name: kubernetes_cluster\n  cluster:\n    server: https://10.0.0.70:6443\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpakNDQVRDZ0F3SUJBZ0lSQUtJa3N3WXE4aFBjUDMwNElqV3RJQ013Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlOREE1TVRVd01UUXhNamxhRncwek5EQTVNVE13TVRReApNamxhTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVM2bXM5NmUyblUyZ3d0b2hZVWxsdUFtZ1JTUk9hdnUxS0F2WlpqNTFQTk5jSjhnKy96ekVFcTBlYWQKc2gyREhweWdwU1p1UDZVSlhkVXZKWElWOThXR28yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGQTRqK2ZWY0szOVhobkF0TmplZWRDUitVTDg2TUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUhWMi9xUmsKM3VMSld2ZG1ldnpMTGhQTmdQTWdZWTZ6TGVyaFozSkwvMHBYQWlFQTRKRXB6a245SjFkL1VsRVRSMXRCR2xSWQpMSENHbUlYS3BESmhpcHZhRVM4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\nusers:\n- name: admin@kubernetes_cluster\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJoakNDQVN1Z0F3SUJBZ0lSQUlROE15RXBTUVNKVXFvYWZyRE84dmd3Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlOREE1TVRVd01UUTFOVFphRncweU5UQTVNVFV3TVRRMgpNRFphTUNreEZ6QVZCZ05WQkFvVERuTjVjM1JsYlRwdFlYTjBaWEp6TVE0d0RBWURWUVFERXdWaFpHMXBiakJaCk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQlBsM3RZQ2tzSHZOdE4vbmpteVF1TEJwRUVYVit1NFQKYUdVNE9qUFgyY252T1VjNldJS3RaUE02OEhNTmhnSlVkNXd0cjZZSHFEQThkY3NXYzIzV3RtcWpTREJHTUE0RwpBMVVkRHdFQi93UUVBd0lGb0RBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFqQWZCZ05WSFNNRUdEQVdnQlFPCkkvbjFYQ3QvVjRad0xUWTNublFrZmxDL09qQUtCZ2dxaGtqT1BRUURBZ05KQURCR0FpRUErSE1GS1RHcTRZUTgKZ29NR3JIQzJQWkp5MzRHeTFHWEZIT2lSZG9RZUdyOENJUUNtZGYvMFNIbkV4dkZPdEpJaWw2T1g1UTg2VjlmcgpFSGZmSWgzS1NhZklWUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\n    client-key-data: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUR1WTNKb3dkMUhKZXRsc2Y3a0E4Y1lTeFdTalNycDJlTXhsVkJ6VFUyQ3JvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFK1hlMWdLU3dlODIwMytlT2JKQzRzR2tRUmRYNjdoTm9aVGc2TTlmWnllODVSenBZZ3Exawo4enJ3Y3cyR0FsUjNuQzJ2cGdlb01EeDF5eFp6YmRhMmFnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\ncontexts:\n- context:\n    cluster: kubernetes_cluster\n    namespace: default\n    user: admin@kubernetes_cluster\n  name: admin@kubernetes_cluster\ncurrent-context: admin@kubernetes_cluster\n",
      "type": "string",
      "sensitive": true
    },
    "talosconfig": {
      "value": "context: kubernetes_cluster\ncontexts:\n    kubernetes_cluster:\n        endpoints:\n            - 10.0.0.70\n        ca: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEJtZXVha3B3aFlIOHNWU1NtVHJJdlpNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5EQTVNVFV3TVRReE1qbGFGdzB6TkRBNU1UTXdNVFF4TWpsYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBVTdHUi83d3k2TWhvUmxCYmF2OUwrNWJ5MkVVTEVSeFBuNVBWCnBaTlFQRUtqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVNUV3K0o4d21XZk1PTkNRZgpib21NdXV6dEtRZ3dCUVlESzJWd0EwRUFkT3FNT3UwdkJSbENHaXo3cVZqL1NnaTFSN1p2T3hLOU9xZFhwQjhlCjkyM1o0SHZ0cGx1a2hMVEcxYUY2cjJHcE5aNDh6WlVkcHVvT213a25YRXBqQ3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJLRENCMjZBREFnRUNBaEFUSW5vM3ErWkR2eTlpcENoeFp3RFhNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5EQTVNVFV3TVRReE1qbGFGdzB5TlRBNU1UVXdNVFF4TWpsYU1CTXhFVEFQQmdOVgpCQW9UQ0c5ek9tRmtiV2x1TUNvd0JRWURLMlZ3QXlFQVFCVlpUVThKT2xrMllESklHSjREQ1NLdmtGZ2o3NXkrCnVXVjJZTHFqWXlTalNEQkdNQTRHQTFVZER3RUIvd1FFQXdJSGdEQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0QKQWpBZkJnTlZIU01FR0RBV2dCVGtURDRuekNaWjh3NDBKQjl1aVl5NjdPMHBDREFGQmdNclpYQURRUURmWjN3OQpsWFRTNE1CczlKeVJFTTRMNGE3dzZtSFNOTzAwL1huWktqclU2T2JHTmIxTzJjTy9Oc2FKOUtzU244OWkySDJ1CjZiTjZkZmE1bkhMUjYrRUQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\n        key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJTWp2NDJ3Z1ZPYlFKemhyUG8zUFFkM1ZuQ1IyL0V3VHh4cFVnb3lSR1IyNQotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K\n",
      "type": "string",
      "sensitive": true
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "talos_client_configuration",
      "name": "talosconfig",
      "provider": "provider[\"registry.terraform.io/siderolabs/talos\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "client_configuration": {
              "ca_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEJtZXVha3B3aFlIOHNWU1NtVHJJdlpNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5EQTVNVFV3TVRReE1qbGFGdzB6TkRBNU1UTXdNVFF4TWpsYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBVTdHUi83d3k2TWhvUmxCYmF2OUwrNWJ5MkVVTEVSeFBuNVBWCnBaTlFQRUtqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVNUV3K0o4d21XZk1PTkNRZgpib21NdXV6dEtRZ3dCUVlESzJWd0EwRUFkT3FNT3UwdkJSbENHaXo3cVZqL1NnaTFSN1p2T3hLOU9xZFhwQjhlCjkyM1o0SHZ0cGx1a2hMVEcxYUY2cjJHcE5aNDh6WlVkcHVvT213a25YRXBqQ3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
              "client_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJLRENCMjZBREFnRUNBaEFUSW5vM3ErWkR2eTlpcENoeFp3RFhNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5EQTVNVFV3TVRReE1qbGFGdzB5TlRBNU1UVXdNVFF4TWpsYU1CTXhFVEFQQmdOVgpCQW9UQ0c5ek9tRmtiV2x1TUNvd0JRWURLMlZ3QXlFQVFCVlpUVThKT2xrMllESklHSjREQ1NLdmtGZ2o3NXkrCnVXVjJZTHFqWXlTalNEQkdNQTRHQTFVZER3RUIvd1FFQXdJSGdEQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0QKQWpBZkJnTlZIU01FR0RBV2dCVGtURDRuekNaWjh3NDBKQjl1aVl5NjdPMHBDREFGQmdNclpYQURRUURmWjN3OQpsWFRTNE1CczlKeVJFTTRMNGE3dzZtSFNOTzAwL1huWktqclU2T2JHTmIxTzJjTy9Oc2FKOUtzU244OWkySDJ1CjZiTjZkZmE1bkhMUjYrRUQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
              "client_key": "LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJTWp2NDJ3Z1ZPYlFKemhyUG8zUFFkM1ZuQ1IyL0V3VHh4cFVnb3lSR1IyNQotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K"
            },
            "cluster_name": "kubernetes_cluster",
            "endpoints": [
              "10.0.0.70"
            ],
            "id": "kubernetes_cluster",
            "nodes": null,
            "talos_config": "context: kubernetes_cluster\ncontexts:\n    kubernetes_cluster:\n        endpoints:\n            - 10.0.0.70\n        ca: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEJtZXVha3B3aFlIOHNWU1NtVHJJdlpNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5EQTVNVFV3TVRReE1qbGFGdzB6TkRBNU1UTXdNVFF4TWpsYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBVTdHUi83d3k2TWhvUmxCYmF2OUwrNWJ5MkVVTEVSeFBuNVBWCnBaTlFQRUtqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVNUV3K0o4d21XZk1PTkNRZgpib21NdXV6dEtRZ3dCUVlESzJWd0EwRUFkT3FNT3UwdkJSbENHaXo3cVZqL1NnaTFSN1p2T3hLOU9xZFhwQjhlCjkyM1o0SHZ0cGx1a2hMVEcxYUY2cjJHcE5aNDh6WlVkcHVvT213a25YRXBqQ3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJLRENCMjZBREFnRUNBaEFUSW5vM3ErWkR2eTlpcENoeFp3RFhNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5EQTVNVFV3TVRReE1qbGFGdzB5TlRBNU1UVXdNVFF4TWpsYU1CTXhFVEFQQmdOVgpCQW9UQ0c5ek9tRmtiV2x1TUNvd0JRWURLMlZ3QXlFQVFCVlpUVThKT2xrMllESklHSjREQ1NLdmtGZ2o3NXkrCnVXVjJZTHFqWXlTalNEQkdNQTRHQTFVZER3RUIvd1FFQXdJSGdEQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0QKQWpBZkJnTlZIU01FR0RBV2dCVGtURDRuekNaWjh3NDBKQjl1aVl5NjdPMHBDREFGQmdNclpYQURRUURmWjN3OQpsWFRTNE1CczlKeVJFTTRMNGE3dzZtSFNOTzAwL1huWktqclU2T2JHTmIxTzJjTy9Oc2FKOUtzU244OWkySDJ1CjZiTjZkZmE1bkhMUjYrRUQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\n        key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJTWp2NDJ3Z1ZPYlFKemhyUG8zUFFkM1ZuQ1IyL0V3VHh4cFVnb3lSR1IyNQotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K\n"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "talos_config"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "client_configuration"
              },
              {
                "type": "get_attr",
                "value": "client_key"
              }
            ]
          ]
        }
      ]
    },
    {
      "mode": "data",
      "type": "talos_cluster_health",
      "name": "health",
      "provider": "provider[\"registry.terraform.io/siderolabs/talos\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "client_configuration": {
              "ca_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEJtZXVha3B3aFlIOHNWU1NtVHJJdlpNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5EQTVNVFV3TVRReE1qbGFGdzB6TkRBNU1UTXdNVFF4TWpsYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBVTdHUi83d3k2TWhvUmxCYmF2OUwrNWJ5MkVVTEVSeFBuNVBWCnBaTlFQRUtqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVNUV3K0o4d21XZk1PTkNRZgpib21NdXV6dEtRZ3dCUVlESzJWd0EwRUFkT3FNT3UwdkJSbENHaXo3cVZqL1NnaTFSN1p2T3hLOU9xZFhwQjhlCjkyM1o0SHZ0cGx1a2hMVEcxYUY2cjJHcE5aNDh6WlVkcHVvT213a25YRXBqQ3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
              "client_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJLRENCMjZBREFnRUNBaEFUSW5vM3ErWkR2eTlpcENoeFp3RFhNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5EQTVNVFV3TVRReE1qbGFGdzB5TlRBNU1UVXdNVFF4TWpsYU1CTXhFVEFQQmdOVgpCQW9UQ0c5ek9tRmtiV2x1TUNvd0JRWURLMlZ3QXlFQVFCVlpUVThKT2xrMllESklHSjREQ1NLdmtGZ2o3NXkrCnVXVjJZTHFqWXlTalNEQkdNQTRHQTFVZER3RUIvd1FFQXdJSGdEQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0QKQWpBZkJnTlZIU01FR0RBV2dCVGtURDRuekNaWjh3NDBKQjl1aVl5NjdPMHBDREFGQmdNclpYQURRUURmWjN3OQpsWFRTNE1CczlKeVJFTTRMNGE3dzZtSFNOTzAwL1huWktqclU2T2JHTmIxTzJjTy9Oc2FKOUtzU244OWkySDJ1CjZiTjZkZmE1bkhMUjYrRUQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
              "client_key": "LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJTWp2NDJ3Z1ZPYlFKemhyUG8zUFFkM1ZuQ1IyL0V3VHh4cFVnb3lSR1IyNQotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K"
            },
            "control_plane_nodes": [
              "10.0.0.70"
            ],
            "endpoints": [
              "10.0.0.70"
            ],
            "id": "cluster_health",
            "timeouts": null,
            "worker_nodes": [
              "10.0.0.73"
            ]
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "client_configuration"
              },
              {
                "type": "get_attr",
                "value": "client_key"
              }
            ]
          ]
        }
      ]
    },
    {
      "mode": "data",
      "type": "talos_cluster_kubeconfig",
      "name": "kubeconfig",
      "provider": "provider[\"registry.terraform.io/siderolabs/talos\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "client_configuration": {
              "ca_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEJtZXVha3B3aFlIOHNWU1NtVHJJdlpNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5EQTVNVFV3TVRReE1qbGFGdzB6TkRBNU1UTXdNVFF4TWpsYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBVTdHUi83d3k2TWhvUmxCYmF2OUwrNWJ5MkVVTEVSeFBuNVBWCnBaTlFQRUtqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVNUV3K0o4d21XZk1PTkNRZgpib21NdXV6dEtRZ3dCUVlESzJWd0EwRUFkT3FNT3UwdkJSbENHaXo3cVZqL1NnaTFSN1p2T3hLOU9xZFhwQjhlCjkyM1o0SHZ0cGx1a2hMVEcxYUY2cjJHcE5aNDh6WlVkcHVvT213a25YRXBqQ3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
              "client_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJLRENCMjZBREFnRUNBaEFUSW5vM3ErWkR2eTlpcENoeFp3RFhNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5EQTVNVFV3TVRReE1qbGFGdzB5TlRBNU1UVXdNVFF4TWpsYU1CTXhFVEFQQmdOVgpCQW9UQ0c5ek9tRmtiV2x1TUNvd0JRWURLMlZ3QXlFQVFCVlpUVThKT2xrMllESklHSjREQ1NLdmtGZ2o3NXkrCnVXVjJZTHFqWXlTalNEQkdNQTRHQTFVZER3RUIvd1FFQXdJSGdEQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0QKQWpBZkJnTlZIU01FR0RBV2dCVGtURDRuekNaWjh3NDBKQjl1aVl5NjdPMHBDREFGQmdNclpYQURRUURmWjN3OQpsWFRTNE1CczlKeVJFTTRMNGE3dzZtSFNOTzAwL1huWktqclU2T2JHTmIxTzJjTy9Oc2FKOUtzU244OWkySDJ1CjZiTjZkZmE1bkhMUjYrRUQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
              "client_key": "LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJTWp2NDJ3Z1ZPYlFKemhyUG8zUFFkM1ZuQ1IyL0V3VHh4cFVnb3lSR1IyNQotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K"
            },
            "endpoint": "10.0.0.70",
            "id": "kubernetes_cluster",
            "kubeconfig_raw": "apiVersion: v1\nkind: Config\nclusters:\n- name: kubernetes_cluster\n  cluster:\n    server: https://10.0.0.70:6443\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpakNDQVRDZ0F3SUJBZ0lSQUtJa3N3WXE4aFBjUDMwNElqV3RJQ013Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlOREE1TVRVd01UUXhNamxhRncwek5EQTVNVE13TVRReApNamxhTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVM2bXM5NmUyblUyZ3d0b2hZVWxsdUFtZ1JTUk9hdnUxS0F2WlpqNTFQTk5jSjhnKy96ekVFcTBlYWQKc2gyREhweWdwU1p1UDZVSlhkVXZKWElWOThXR28yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGQTRqK2ZWY0szOVhobkF0TmplZWRDUitVTDg2TUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUhWMi9xUmsKM3VMSld2ZG1ldnpMTGhQTmdQTWdZWTZ6TGVyaFozSkwvMHBYQWlFQTRKRXB6a245SjFkL1VsRVRSMXRCR2xSWQpMSENHbUlYS3BESmhpcHZhRVM4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\nusers:\n- name: admin@kubernetes_cluster\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJoakNDQVN1Z0F3SUJBZ0lSQUlROE15RXBTUVNKVXFvYWZyRE84dmd3Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlOREE1TVRVd01UUTFOVFphRncweU5UQTVNVFV3TVRRMgpNRFphTUNreEZ6QVZCZ05WQkFvVERuTjVjM1JsYlRwdFlYTjBaWEp6TVE0d0RBWURWUVFERXdWaFpHMXBiakJaCk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQlBsM3RZQ2tzSHZOdE4vbmpteVF1TEJwRUVYVit1NFQKYUdVNE9qUFgyY252T1VjNldJS3RaUE02OEhNTmhnSlVkNXd0cjZZSHFEQThkY3NXYzIzV3RtcWpTREJHTUE0RwpBMVVkRHdFQi93UUVBd0lGb0RBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFqQWZCZ05WSFNNRUdEQVdnQlFPCkkvbjFYQ3QvVjRad0xUWTNublFrZmxDL09qQUtCZ2dxaGtqT1BRUURBZ05KQURCR0FpRUErSE1GS1RHcTRZUTgKZ29NR3JIQzJQWkp5MzRHeTFHWEZIT2lSZG9RZUdyOENJUUNtZGYvMFNIbkV4dkZPdEpJaWw2T1g1UTg2VjlmcgpFSGZmSWgzS1NhZklWUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\n    client-key-data: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUR1WTNKb3dkMUhKZXRsc2Y3a0E4Y1lTeFdTalNycDJlTXhsVkJ6VFUyQ3JvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFK1hlMWdLU3dlODIwMytlT2JKQzRzR2tRUmRYNjdoTm9aVGc2TTlmWnllODVSenBZZ3Exawo4enJ3Y3cyR0FsUjNuQzJ2cGdlb01EeDF5eFp6YmRhMmFnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\ncontexts:\n- context:\n    cluster: kubernetes_cluster\n    namespace: default\n    user: admin@kubernetes_cluster\n  name: admin@kubernetes_cluster\ncurrent-context: admin@kubernetes_cluster\n",
            "kubernetes_client_configuration": {
              "ca_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpakNDQVRDZ0F3SUJBZ0lSQUtJa3N3WXE4aFBjUDMwNElqV3RJQ013Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlOREE1TVRVd01UUXhNamxhRncwek5EQTVNVE13TVRReApNamxhTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVM2bXM5NmUyblUyZ3d0b2hZVWxsdUFtZ1JTUk9hdnUxS0F2WlpqNTFQTk5jSjhnKy96ekVFcTBlYWQKc2gyREhweWdwU1p1UDZVSlhkVXZKWElWOThXR28yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGQTRqK2ZWY0szOVhobkF0TmplZWRDUitVTDg2TUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUhWMi9xUmsKM3VMSld2ZG1ldnpMTGhQTmdQTWdZWTZ6TGVyaFozSkwvMHBYQWlFQTRKRXB6a245SjFkL1VsRVRSMXRCR2xSWQpMSENHbUlYS3BESmhpcHZhRVM4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
              "client_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJoakNDQVN1Z0F3SUJBZ0lSQUlROE15RXBTUVNKVXFvYWZyRE84dmd3Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlOREE1TVRVd01UUTFOVFphRncweU5UQTVNVFV3TVRRMgpNRFphTUNreEZ6QVZCZ05WQkFvVERuTjVjM1JsYlRwdFlYTjBaWEp6TVE0d0RBWURWUVFERXdWaFpHMXBiakJaCk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQlBsM3RZQ2tzSHZOdE4vbmpteVF1TEJwRUVYVit1NFQKYUdVNE9qUFgyY252T1VjNldJS3RaUE02OEhNTmhnSlVkNXd0cjZZSHFEQThkY3NXYzIzV3RtcWpTREJHTUE0RwpBMVVkRHdFQi93UUVBd0lGb0RBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFqQWZCZ05WSFNNRUdEQVdnQlFPCkkvbjFYQ3QvVjRad0xUWTNublFrZmxDL09qQUtCZ2dxaGtqT1BRUURBZ05KQURCR0FpRUErSE1GS1RHcTRZUTgKZ29NR3JIQzJQWkp5MzRHeTFHWEZIT2lSZG9RZUdyOENJUUNtZGYvMFNIbkV4dkZPdEpJaWw2T1g1UTg2VjlmcgpFSGZmSWgzS1NhZklWUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
              "client_key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUR1WTNKb3dkMUhKZXRsc2Y3a0E4Y1lTeFdTalNycDJlTXhsVkJ6VFUyQ3JvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFK1hlMWdLU3dlODIwMytlT2JKQzRzR2tRUmRYNjdoTm9aVGc2TTlmWnllODVSenBZZ3Exawo4enJ3Y3cyR0FsUjNuQzJ2cGdlb01EeDF5eFp6YmRhMmFnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=",
              "host": "https://10.0.0.70:6443"
            },
            "node": "10.0.0.70",
            "timeouts": null,
            "wait": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "client_configuration"
              },
              {
                "type": "get_attr",
                "value": "client_key"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "kubeconfig_raw"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "kubernetes_client_configuration"
              },
              {
                "type": "get_attr",
                "value": "client_key"
              }
            ]
          ]
        }
      ]
    },
    {
      "mode": "data",
      "type": "talos_machine_configuration",
      "name": "machineconfig_cp",
      "provider": "provider[\"registry.terraform.io/siderolabs/talos\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cluster_endpoint": "https://10.0.0.70:6443",
            "cluster_name": "kubernetes_cluster",
            "config_patches": null,
            "docs": true,
            "examples": true,
            "id": "kubernetes_cluster",
            "kubernetes_version": "1.30.0",
            "machine_configuration": "version: v1alpha1 # Indicates the schema used to decode the contents.\ndebug: false # Enable verbose logging to the console.\npersist: true\n# Provides machine specific configuration options.\nmachine:\n    type: controlplane # Defines the role of the machine within the cluster.\n    token: rpuf27.nts20g6mps3x2vqa # The `token` is used by a machine to join the PKI of the cluster.\n    # The root certificate authority of the PKI.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEJtZXVha3B3aFlIOHNWU1NtVHJJdlpNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5EQTVNVFV3TVRReE1qbGFGdzB6TkRBNU1UTXdNVFF4TWpsYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBVTdHUi83d3k2TWhvUmxCYmF2OUwrNWJ5MkVVTEVSeFBuNVBWCnBaTlFQRUtqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVNUV3K0o4d21XZk1PTkNRZgpib21NdXV6dEtRZ3dCUVlESzJWd0EwRUFkT3FNT3UwdkJSbENHaXo3cVZqL1NnaTFSN1p2T3hLOU9xZFhwQjhlCjkyM1o0SHZ0cGx1a2hMVEcxYUY2cjJHcE5aNDh6WlVkcHVvT213a25YRXBqQ3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJQWRmUWxRNnhXRDYzMWhpMm9TZ2FpVU5HSzlmU29sRXI3ZDRKbjJtQXA0NQotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K\n    # Extra certificate subject alternative names for the machine's certificate.\n    certSANs: []\n    #   # Uncomment this to enable SANs.\n    #   - 10.0.0.10\n    #   - 172.16.0.10\n    #   - 192.168.0.10\n\n    # Used to provide additional options to the kubelet.\n    kubelet:\n        image: ghcr.io/siderolabs/kubelet:v1.30.0 # The `image` field is an optional reference to an alternative kubelet image.\n        defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.\n        disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.\n        \n        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.\n        # clusterDNS:\n        #     - 10.96.0.10\n        #     - 169.254.2.53\n\n        # # The `extraArgs` field is used to provide additional flags to the kubelet.\n        # extraArgs:\n        #     key: value\n\n        # # The `extraMounts` field is used to add additional mounts to the kubelet container.\n        # extraMounts:\n        #     - destination: /var/lib/example # Destination is the absolute path where the mount will be placed in the container.\n        #       type: bind # Type specifies the mount kind.\n        #       source: /var/lib/example # Source specifies the source path of the mount.\n        #       # Options are fstab style mount options.\n        #       options:\n        #         - bind\n        #         - rshared\n        #         - rw\n\n        # # The `extraConfig` field is used to provide kubelet configuration overrides.\n        # extraConfig:\n        #     serverTLSBootstrap: true\n\n        # # The `KubeletCredentialProviderConfig` field is used to provide kubelet credential configuration.\n        # credentialProviderConfig:\n        #     apiVersion: kubelet.config.k8s.io/v1\n        #     kind: CredentialProviderConfig\n        #     providers:\n        #         - apiVersion: credentialprovider.kubelet.k8s.io/v1\n        #           defaultCacheDuration: 12h\n        #           matchImages:\n        #             - '*.dkr.ecr.*.amazonaws.com'\n        #             - '*.dkr.ecr.*.amazonaws.com.cn'\n        #             - '*.dkr.ecr-fips.*.amazonaws.com'\n        #             - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'\n        #             - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'\n        #           name: ecr-credential-provider\n\n        # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.\n        # nodeIP:\n        #     # The `validSubnets` field configures the networks to pick kubelet node IP from.\n        #     validSubnets:\n        #         - 10.0.0.0/8\n        #         - '!10.0.0.3/32'\n        #         - fdc7::/16\n    # Provides machine specific network configuration options.\n    network: {}\n    # # `interfaces` is used to define the network interface configuration.\n    # interfaces:\n    #     - interface: enp0s1 # The interface name.\n    #       # Assigns static IP addresses to the interface.\n    #       addresses:\n    #         - 192.168.2.0/24\n    #       # A list of routes associated with the interface.\n    #       routes:\n    #         - network: 0.0.0.0/0 # The route's network (destination).\n    #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).\n    #           metric: 1024 # The optional metric for the route.\n    #       mtu: 1500 # The interface's MTU.\n    #       \n    #       # # Picks a network device using the selector.\n\n    #       # # select a device with bus prefix 00:*.\n    #       # deviceSelector:\n    #       #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n    #       # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.\n    #       # deviceSelector:\n    #       #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.\n    #       #     driver: virtio # Kernel driver, supports matching by wildcard.\n    #       # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.\n    #       # deviceSelector:\n    #       #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n    #       #     - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.\n    #       #       driver: virtio # Kernel driver, supports matching by wildcard.\n\n    #       # # Bond specific options.\n    #       # bond:\n    #       #     # The interfaces that make up the bond.\n    #       #     interfaces:\n    #       #         - enp2s0\n    #       #         - enp2s1\n    #       #     # Picks a network device using the selector.\n    #       #     deviceSelectors:\n    #       #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n    #       #         - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.\n    #       #           driver: virtio # Kernel driver, supports matching by wildcard.\n    #       #     mode: 802.3ad # A bond option.\n    #       #     lacpRate: fast # A bond option.\n\n    #       # # Bridge specific options.\n    #       # bridge:\n    #       #     # The interfaces that make up the bridge.\n    #       #     interfaces:\n    #       #         - enxda4042ca9a51\n    #       #         - enxae2a6774c259\n    #       #     # A bridge option.\n    #       #     stp:\n    #       #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.\n\n    #       # # Indicates if DHCP should be used to configure the interface.\n    #       # dhcp: true\n\n    #       # # DHCP specific options.\n    #       # dhcpOptions:\n    #       #     routeMetric: 1024 # The priority of all routes received via DHCP.\n\n    #       # # Wireguard specific configuration.\n\n    #       # # wireguard server example\n    #       # wireguard:\n    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n    #       #     listenPort: 51111 # Specifies a device's listening port.\n    #       #     # Specifies a list of peer configurations to apply to a device.\n    #       #     peers:\n    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n    #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.\n    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n    #       #           allowedIPs:\n    #       #             - 192.168.1.0/24\n    #       # # wireguard peer example\n    #       # wireguard:\n    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n    #       #     # Specifies a list of peer configurations to apply to a device.\n    #       #     peers:\n    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n    #       #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.\n    #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.\n    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n    #       #           allowedIPs:\n    #       #             - 192.168.1.0/24\n\n    #       # # Virtual (shared) IP address configuration.\n\n    #       # # layer2 vip example\n    #       # vip:\n    #       #     ip: 172.16.199.55 # Specifies the IP address to be used.\n\n    # # Used to statically set the nameservers for the machine.\n    # nameservers:\n    #     - 8.8.8.8\n    #     - 1.1.1.1\n\n    # # Allows for extra entries to be added to the `/etc/hosts` file\n    # extraHostEntries:\n    #     - ip: 192.168.1.100 # The IP of the host.\n    #       # The host alias.\n    #       aliases:\n    #         - example\n    #         - example.domain.tld\n\n    # # Configures KubeSpan feature.\n    # kubespan:\n    #     enabled: true # Enable the KubeSpan feature.\n\n    # Used to provide instructions for installations.\n    install:\n        disk: /dev/sda # The disk used for installations.\n        image: ghcr.io/siderolabs/installer:v1.7.0 # Allows for supplying the image used to perform the installation.\n        wipe: false # Indicates if the installation disk should be wiped at installation time.\n        \n        # # Look up disk using disk attributes like model, size, serial and others.\n        # diskSelector:\n        #     size: 4GB # Disk size.\n        #     model: WDC* # Disk model `/sys/block/\u003cdev\u003e/device/model`.\n        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.\n\n        # # Allows for supplying extra kernel args via the bootloader.\n        # extraKernelArgs:\n        #     - talos.platform=metal\n        #     - reboot=k\n\n        # # Allows for supplying additional system extension images to install on top of base Talos image.\n        # extensions:\n        #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0 # System extension image.\n    # Used to configure the machine's container image registry mirrors.\n    registries: {}\n    # # Specifies mirror configuration for each registry host namespace.\n    # mirrors:\n    #     ghcr.io:\n    #         # List of endpoints (URLs) for registry mirrors to use.\n    #         endpoints:\n    #             - https://registry.insecure\n    #             - https://ghcr.io/v2/\n\n    # # Specifies TLS \u0026 auth configuration for HTTPS image registries.\n    # config:\n    #     registry.insecure:\n    #         # The TLS configuration for the registry.\n    #         tls:\n    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).\n    #             \n    #             # # Enable mutual TLS authentication with the registry.\n    #             # clientIdentity:\n    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t\n    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==\n    #         \n    #         # # The auth configuration for this registry.\n    #         # auth:\n    #         #     username: username # Optional registry authentication.\n    #         #     password: password # Optional registry authentication.\n\n    # Features describe individual Talos features that can be switched on or off.\n    features:\n        rbac: true # Enable role-based access control (RBAC).\n        stableHostname: true # Enable stable default hostname.\n        apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.\n        diskQuotaSupport: true # Enable XFS project quota support for EPHEMERAL partition and user disks.\n        # KubePrism - local proxy/load balancer on defined port that will distribute\n        kubePrism:\n            enabled: true # Enable KubePrism support - will start local load balancing proxy.\n            port: 7445 # KubePrism port.\n        # Configures host DNS caching resolver.\n        hostDNS:\n            enabled: true # Enable host DNS caching resolver.\n        \n        # # Configure Talos API access from Kubernetes pods.\n        # kubernetesTalosAPIAccess:\n        #     enabled: true # Enable Talos API access from Kubernetes pods.\n        #     # The list of Talos API roles which can be granted for access from Kubernetes pods.\n        #     allowedRoles:\n        #         - os:reader\n        #     # The list of Kubernetes namespaces Talos API access is available from.\n        #     allowedKubernetesNamespaces:\n        #         - kube-system\n    \n    # # Provides machine specific control plane configuration options.\n\n    # # ControlPlane definition example.\n    # controlPlane:\n    #     # Controller manager machine specific configuration options.\n    #     controllerManager:\n    #         disabled: false # Disable kube-controller-manager on the node.\n    #     # Scheduler machine specific configuration options.\n    #     scheduler:\n    #         disabled: true # Disable kube-scheduler on the node.\n\n    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.\n\n    # # nginx static pod.\n    # pods:\n    #     - apiVersion: v1\n    #       kind: pod\n    #       metadata:\n    #         name: nginx\n    #       spec:\n    #         containers:\n    #             - image: nginx\n    #               name: nginx\n\n    # # Used to partition, format and mount additional disks.\n\n    # # MachineDisks list example.\n    # disks:\n    #     - device: /dev/sdb # The name of the disk to use.\n    #       # A list of partitions to create on the disk.\n    #       partitions:\n    #         - mountpoint: /var/mnt/extra # Where to mount the partition.\n    #           \n    #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.\n\n    #           # # Human readable representation.\n    #           # size: 100 MB\n    #           # # Precise value in bytes.\n    #           # size: 1073741824\n\n    # # Allows the addition of user specified files.\n\n    # # MachineFiles usage example.\n    # files:\n    #     - content: '...' # The contents of the file.\n    #       permissions: 0o666 # The file's permissions in octal.\n    #       path: /tmp/file.txt # The path of the file.\n    #       op: append # The operation to use\n\n    # # The `env` field allows for the addition of environment variables.\n\n    # # Environment variables definition examples.\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: info\n    #     GRPC_GO_LOG_VERBOSITY_LEVEL: \"99\"\n    #     https_proxy: http://SERVER:PORT/\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: error\n    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/\n    # env:\n    #     https_proxy: http://DOMAIN\\USERNAME:PASSWORD@SERVER:PORT/\n\n    # # Used to configure the machine's time settings.\n\n    # # Example configuration for cloudflare ntp server.\n    # time:\n    #     disabled: false # Indicates if the time service is disabled for the machine.\n    #     # description: |\n    #     servers:\n    #         - time.cloudflare.com\n    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.\n\n    # # Used to configure the machine's sysctls.\n\n    # # MachineSysctls usage example.\n    # sysctls:\n    #     kernel.domainname: talos.dev\n    #     net.ipv4.ip_forward: \"0\"\n    #     net/ipv6/conf/eth0.100/disable_ipv6: \"1\"\n\n    # # Used to configure the machine's sysfs.\n\n    # # MachineSysfs usage example.\n    # sysfs:\n    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance\n\n    # # Machine system disk encryption configuration.\n    # systemDiskEncryption:\n    #     # Ephemeral partition encryption.\n    #     ephemeral:\n    #         provider: luks2 # Encryption provider to use for the encryption.\n    #         # Defines the encryption keys generation and storage method.\n    #         keys:\n    #             - # Deterministically generated key from the node UUID and PartitionLabel.\n    #               nodeID: {}\n    #               slot: 0 # Key slot number for LUKS2 encryption.\n    #               \n    #               # # KMS managed encryption key.\n    #               # kms:\n    #               #     endpoint: https://192.168.88.21:4443 # KMS endpoint to Seal/Unseal the key.\n    #         \n    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.\n    #         # cipher: aes-xts-plain64\n\n    #         # # Defines the encryption sector size.\n    #         # blockSize: 4096\n\n    #         # # Additional --perf parameters for the LUKS2 encryption.\n    #         # options:\n    #         #     - no_read_workqueue\n    #         #     - no_write_workqueue\n\n    # # Configures the udev system.\n    # udev:\n    #     # List of udev rules to apply to the udev system\n    #     rules:\n    #         - SUBSYSTEM==\"drm\", KERNEL==\"renderD*\", GROUP=\"44\", MODE=\"0660\"\n\n    # # Configures the logging system.\n    # logging:\n    #     # Logging destination.\n    #     destinations:\n    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are \"tcp\" and \"udp\".\n    #           format: json_lines # Logs format.\n\n    # # Configures the kernel.\n    # kernel:\n    #     # Kernel modules to load.\n    #     modules:\n    #         - name: brtfs # Module name.\n\n    # # Configures the seccomp profiles for the machine.\n    # seccompProfiles:\n    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.\n    #       # The `value` field is used to provide the seccomp profile.\n    #       value:\n    #         defaultAction: SCMP_ACT_LOG\n\n    # # Configures the node labels for the machine.\n\n    # # node labels example.\n    # nodeLabels:\n    #     exampleLabel: exampleLabelValue\n\n    # # Configures the node taints for the machine. Effect is optional.\n\n    # # node taints example.\n    # nodeTaints:\n    #     exampleTaint: exampleTaintValue:NoSchedule\n# Provides cluster specific configuration options.\ncluster:\n    id: 8slduxY_GAi_6kXZVBT1HimFxw7qI8ZI8rscA9QEsa8= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).\n    secret: jB9mqchMnYCyAOcV0MM6RY+2S3qPgGgqpzd7gg6Br4o= # Shared secret of cluster (base64 encoded random 32 bytes).\n    # Provides control plane specific configuration options.\n    controlPlane:\n        endpoint: https://10.0.0.70:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.\n    clusterName: kubernetes_cluster # Configures the cluster's name.\n    # Provides cluster specific network configuration options.\n    network:\n        dnsDomain: cluster.local # The domain used by Kubernetes DNS.\n        # The pod subnet CIDR.\n        podSubnets:\n            - 10.244.0.0/16\n        # The service subnet CIDR.\n        serviceSubnets:\n            - 10.96.0.0/12\n        \n        # # The CNI used.\n        # cni:\n        #     name: custom # Name of CNI to use.\n        #     # URLs containing manifests to apply for the CNI.\n        #     urls:\n        #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml\n    token: uionez.ajblvmwkqhy7fre4 # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.\n    secretboxEncryptionSecret: 4N5U1/Bhntbei1Sz0lyh3SmYW00G+KamspvrAtyOw5s= # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).\n    # The base64 encoded root certificate authority used by Kubernetes.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpakNDQVRDZ0F3SUJBZ0lSQUtJa3N3WXE4aFBjUDMwNElqV3RJQ013Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlOREE1TVRVd01UUXhNamxhRncwek5EQTVNVE13TVRReApNamxhTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVM2bXM5NmUyblUyZ3d0b2hZVWxsdUFtZ1JTUk9hdnUxS0F2WlpqNTFQTk5jSjhnKy96ekVFcTBlYWQKc2gyREhweWdwU1p1UDZVSlhkVXZKWElWOThXR28yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGQTRqK2ZWY0szOVhobkF0TmplZWRDUitVTDg2TUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUhWMi9xUmsKM3VMSld2ZG1ldnpMTGhQTmdQTWdZWTZ6TGVyaFozSkwvMHBYQWlFQTRKRXB6a245SjFkL1VsRVRSMXRCR2xSWQpMSENHbUlYS3BESmhpcHZhRVM4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU42NkxyTlhFaEdRaFdpaWlycEJXQzVqNWJPa1NxSjJnWDVxYnY1MzhOTlZvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFdXByUGVudHAxTm9NTGFJV0ZKWmJnSm9FVWtUbXI3dFNnTDJXWStkVHpUWENmSVB2ODh4QgpLdEhtbmJJZGd4NmNvS1VtYmorbENWM1ZMeVZ5RmZmRmhnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.\n    aggregatorCA:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJYekNDQVFXZ0F3SUJBZ0lRYzBMSkluSkJhVGNuWVhRWjhPUzNXVEFLQmdncWhrak9QUVFEQWpBQU1CNFgKRFRJME1Ea3hOVEF4TkRFeU9Wb1hEVE0wTURreE16QXhOREV5T1Zvd0FEQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5QXdFSEEwSUFCRml6Q0VubXg0N1ZnWTM0U0pKYlIxZloyNkNTWDQybVB5YmVsVVNCb1RuNW1NVWFTeEF3CmJKbTRCMmZmOHl0S2ZJMmEwcnN6a1lLL1BVdTcvYm84bE5HallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZApCZ05WSFE0RUZnUVVPTkZySFk2djFnSGlRdU10aVJzWnVFaTF0U3d3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUlnCktTanpPQkpWQndiVmtXdkErNHE3VzJ1Mjg5NUNDUmpkK0swWG5pcGNwZG9DSVFDc1BXejRmSmEveW0ybDhkcjkKR2RmdG5pNzg2MWRvVUJtQXRxcVRhOHB1cEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUZPKzk1Z3dWdVhzUXlWSHBOTU1HazNLdzZjUFNqakxjUW5yVkhad1lnbHNvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFV0xNSVNlYkhqdFdCamZoSWtsdEhWOW5ib0pKZmphWS9KdDZWUklHaE9mbVl4UnBMRURCcwptYmdIWjkvekswcDhqWnJTdXpPUmdyODlTN3Y5dWp5VTBRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n    # The base64 encoded private key for service account token generation.\n    serviceAccount:\n        key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBeEY2YXpMNGIyLzJHdU1uNkhOQXZIZ3FablMzeHAvSkQ3ZDNxcXE3b05KeGQyUTMzCjVySlNmcFhJZlIrMklUcVNYSjB2elh6ZzVTSnFneG5tZE9vQkR2VGQrS1B0SVNHdUdHcWZmSXJVaGUzV0t1QWYKdFZxQVBOYklNRlRNUjNqNHdpaExMZTR2TXhhV0xlOExLZ2padkRBaWFRRE1vQmRkYkp2TW4vK21DZ05PbHZsMApzSjNEQklxM3czSTY0dzN1Wm8ycDdjUE11WjNsVk5qakw3NWNxRlM5RXNOdVd0dXgzUGNERVBZNjZtR0sxZmRyCkRKTzNGZDd2TGhLVFlLVEQyM0JEWnRwVVNQdUlneUMvTHg5NlBDR0hFNzF2RFN0WGw5R0lpd2pYMmd5SjZGQysKZGFKdFQ2cHJJVlJRSUVnZ1BYakdxY0w4K2UreXVoY0VoMzJXQjhuVloramllNTA0RkIvNDNGT1V5SlVSRU5rTwpSWXdYSWEzbDlSOGJCcytXNUczN0ZiemVOV1p4akZEbTVoVjJXOHljSElwYnhvZnRvTnBZaUJJRWhmTHdDRmxxCkFyTGpuWTdVUHcwRGI3OTlJTFg0eERHMlZZak55aEVVaDNsTkgzNGRhU2puekxsNzQxTnN0dHBjbDEyVG4xTUgKS1U5TzZSWHFHUXBjcW0zOGhWUHlwVVZoSkF4dXN5Yml2WGxGMEJldGdZTkF3VEtNVjV5NGFoZ1h5STFOM3FHZQpsMHZLUS9POVIvY3QvL3p3ZGZSSExBSDNWWHlGdDJMNnRYZ21yRGlsRHlMek4xTEswZFZTV1pZeVZ2dzZnR2QxCk4yUDR6VkQ2cGlISGkxZ2tjQjZHVGtTSUZYak5VMjV2MFBSMXJEY1drRDRvclZDWS9UWlcrUjloSDZFQ0F3RUEKQVFLQ0FnQTFCRTNMQlhERUhsam5QekRWNHFjMTl5cXVNeDlSZHFrOGFYUFlEVTBJRjBlSE9LdzdqdDJTNjZHcgpsb28zd25hTnBxcW5VaFh1QnpLMm5xR0g0ejNSNmU2Y0dMWUhBZTdkREx4dWhaVUhhOFVzNGtIdFZyZlV0VEJyClRCbXpHa2dmTTMzSXNzdnZnU09lMXpFdWNpRkhHNy9PbGJhcGFtV0EwemVWNHhIVEZqMTdxWElGMVRJMzRiUG4KZ3NtL1Q1MlQ5cDl3WURLLzBvOStMdWgzbFcreXl0NFpXTVpNcFpBSjFtN3ZmMnM4cUlVeGE1RnRYZHhLZlZ3YQpGazNRQSt3VkxPUWx1c0NTeThaNWtMZk5ZelEvVTlZQ1VGelJNMmg4eHNlVXNoaUUrR21yWFZGdXRTSEtKbnF5CkR1OXJKODM4aXNVb1JFckV1Q0NLK1hmeGxNaVNiR0xkWHNXYnlrd2laVnF2VkhDOTUycEVGUUdhUEgwZ2YrNWcKRjNtWmwwWDVRZ0hSYkZhdUlFTFBEUHdoM2RvUGlPcWN1bjNqdHJOa0orczRXTUZRSFptQ0tJc1NtK2tIc0tCaApwZjZwdng3Sm1xSVN0L25zbjRObE9yakVvaEZMK3E4ZGd4R08yOTVtUnB2RWs1R0NPQ0hQczVwQU1zbHNpbXVECmtwMGhNYXdLUzhMT25JVG9qRlpDVUIwZlRWZVZ2UHdKY1hHTU5XdVFkR0hUQVRKSFRiU3pxYTZ6Q0NNbG93dmkKUWtoU3VtS1ZwYmNJYW9pcFJEWFBxekFEb1F5Vm51ekU3d29tZHc3N1ZPRXhCTTVtN2NzQXBiNStHWDNFR3pSZQpyaHd4TzA5YktxOEVNYm4zT2RZVUdrVUJuaGFuTmZwMUNuS0NENTk1N1JqS09jYjlXUUtDQVFFQTBWSS8vb2JqCm9UNXRzdVNNcE5QNjhQdHJwSkxXUUxpSW1YSVQ4ZnErUjQrRERlZ1pNTHUzVnBzSGhGWW9OOExyZ1hSNGtad0YKSDBWNDBSZ0xXOVlOSjhKUHB6L3U0dlU2Tm45ZHpSTnNpRFN6TXlNcjhHR2NWb3dqbDh5eWdGbEtkaTVyU2JRNgpQQ1NZTFdBOG13TDRwekgyR0FyY3FHdkV2STBsUTFiT1BuQUtLRkxCS3RBTVltVmtGM0FYTGZGMVBVYXVhU3gzClZQOXNkUGZJUHpzQkZCK3BLQnZ4Nk5PeE1EY1dnZUYzSXlxSG5qU245aHg3eDd3dUxsTVB0RXhOVnFzV0JiTkwKanR2clJCTHVMVW82SjYxY2lCVXFJWHdvSHBVbWRPTy9vbG4xQVRXOGtEL1I3bWZZd2QwSk10NTYxVHdtWnhTZgp5QU9OS00ydzA5N2c4d0tDQVFFQThDajIvVVNjTG5ENVA5WVBLczFpdUFUdGFXbE5kMnQ5UWJtejVKMjFBRXR1ClZzeUk0dkU4YTZzZnlRU2VsZ2JRTEs3SFNYajVaR01oZWtIbXRMWHdkaFVLMFF6elk2Z1VGK09sM2V6eTlQUDcKSWs2c2dvdFJVcW8zTHN4bUU0UmVYUDJhQ2V6TGdLYUU2NEtGVDQyZkp0UG5leU5keTlERzhkdGdGWnFZaFZzcwpqWjIzSlh1VHlINmk2WnQxVThRZTFMUld4UlF0aGRHV0hMSGF4M1ArVHRpMkNJbWIvOFJKQUk3VGgwS1EyeFhTCjVuUjJwN0RIb3lZLzlBdG9oVFBqMmpkREtraklXOVFEWEc1cDU3YldlN0JTQStmRC9qcGJvR2ZZSUhwY2RQNXgKbUFmNzZ6cnBEemx3WGlQSU5BOFdIWFBSdk0rR01qNk1YNDk4RGN5Q0d3S0NBUUJINmk0NlVEV2NqRW84RC9HUwpINUl6Z08yMm1Rd3JLRHNtSE45bFgzUklPYklZOFFqV2lXZXZ4WXVMbDk0eGFqSm5RNUM0MWhXY2JNM1phSjFlCmErZ1JKTjBnNVFJNXoyNjBrb1d6azF6U1h1akNSTzh2b3htSFVwWlg3T2ZXMk5hUVM5cG9kQmNkMnFTOTBqYUEKTzBFYWtEdXdmdXJZb2szeFNiem5xY2NxQkd3NDlsV1BVL010U3hCY1RSSnBvbTlaSWhPQjV0a0l4c2lJVnlqaApNSEJxYllZOFZYMkRORmZIN09VNnNpK3dVVWhPdm1DR1dicmRJSFh0VEhRMHlaSTRtSWIwWm1rcko3dG9vK2hZCmZ3d0QzYmZRdVJURWRGZUVTbEh3RHQ4ajlDd013bDJLWWFMS2Vic3F2N29OVkFwM2dEYmhhMkNKNDA1NEdsTUsKTjZTcEFvSUJBRUtwTEQyS29NdG5RbGdNdzdMK3hXc011eFZxVEQxY2thei9yY1pFWEN4VHc3SEdIaXpZQnd4Zgp1SGZrbDF4UFVkTkZSRDNKblhmVzZFRDJMK0p6S2VhczJvN0NTSUNkODgzWnUzMkpPcnJ4U2dEdzA0Tjh4anJxCjBseGtFZVZTOVpwY0xqaVpDTGVTQVEwWjhvVHRhNEtzaVBFdUZPZnc4SGZMaTdVVGIwaDgwVFlSMC9kTWdPM0MKOE5kazlrRWxDK1hBbE9FcFE2V0VVbVZ1bktxR01NMlQ2NXNkRHpjRU5iczQ2Yy8ra3hTc3p4aDJ0VVRBbGZsYwpNWjQ4MkdzNHh3TVlHY1dQNUVWUTZRbnIvK3Q0WGJxQmE1SjM3M2dPbk1ZK2JNZy9EcERPMjVyMmhGOTd2NXNoCk4yWjZDaVVoRnVOZjlaU3lDYTdDbTlZZWpyR0oxWWNDZ2dFQkFKcXlPbC9hR2EwbXlteE9pY0pXMkFsWnkzRjkKWWJyNXViOTRFMWVvZ2lrVEprZkZDOHE2ZmUyUjYycnlVSmE4WERqNW9lMmo2SWNQUEU5ZzR6TVg0MFg3VTU2bQp2MzBWWHgwQTUvS2NENG1WekVwb2RUQVR6bm95eVRtY2hIRWs5VVF5TzNXd2w1Nnhyc1AraW0zMVlVVVVKRldpClM5WXpsUFFLY2RzODRscWNjK0I2OHVYaldxOHR5V29oRFcxTUZVamY1SFhzRGJQUkVOQTdMOUNYWVowN25oWU0KS2pTYWxyZHgwaXJocFdJMkdhZzhCZjFtT1hYaGUxSFBMajdqMlQxZHVlZ0ltMzNNU2VUK0M2bkJ0dTZvb2FsUQo4ZE1UK3Axdm9HNmFyRVNpeDdaNGkvWnVJYTFJeXQ0d0RmQmgwM0tEK2xYbDU2Z3krMlhsQThXajlpYz0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K\n    # API server specific configuration options.\n    apiServer:\n        image: registry.k8s.io/kube-apiserver:v1.30.0 # The container image used in the API server manifest.\n        # Extra certificate subject alternative names for the API server's certificate.\n        certSANs:\n            - 10.0.0.70\n        disablePodSecurityPolicy: true # Disable PodSecurityPolicy in the API server and default manifests.\n        # Configure the API server admission plugins.\n        admissionControl:\n            - name: PodSecurity # Name is the name of the admission controller.\n              # Configuration is an embedded configuration object to be used as the plugin's\n              configuration:\n                apiVersion: pod-security.admission.config.k8s.io/v1alpha1\n                defaults:\n                    audit: restricted\n                    audit-version: latest\n                    enforce: baseline\n                    enforce-version: latest\n                    warn: restricted\n                    warn-version: latest\n                exemptions:\n                    namespaces:\n                        - kube-system\n                    runtimeClasses: []\n                    usernames: []\n                kind: PodSecurityConfiguration\n        # Configure the API server audit policy.\n        auditPolicy:\n            apiVersion: audit.k8s.io/v1\n            kind: Policy\n            rules:\n                - level: Metadata\n    # Controller manager server specific configuration options.\n    controllerManager:\n        image: registry.k8s.io/kube-controller-manager:v1.30.0 # The container image used in the controller manager manifest.\n    # Kube-proxy server-specific configuration options\n    proxy:\n        image: registry.k8s.io/kube-proxy:v1.30.0 # The container image used in the kube-proxy manifest.\n        \n        # # Disable kube-proxy deployment on cluster bootstrap.\n        # disabled: false\n    # Scheduler server specific configuration options.\n    scheduler:\n        image: registry.k8s.io/kube-scheduler:v1.30.0 # The container image used in the scheduler manifest.\n    # Configures cluster member discovery.\n    discovery:\n        enabled: true # Enable the cluster membership discovery feature.\n        # Configure registries used for cluster member discovery.\n        registries:\n            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information\n            kubernetes:\n                disabled: true # Disable Kubernetes discovery registry.\n            # Service registry is using an external service to push and pull information about cluster members.\n            service: {}\n            # # External service endpoint.\n            # endpoint: https://discovery.talos.dev/\n    # Etcd specific configuration options.\n    etcd:\n        # The `ca` is the root certificate authority of the PKI.\n        ca:\n            crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmakNDQVNTZ0F3SUJBZ0lSQUtrNUFQdlB4TzVITDhJT1RaZ25yK013Q2dZSUtvWkl6ajBFQXdJd0R6RU4KTUFzR0ExVUVDaE1FWlhSalpEQWVGdzB5TkRBNU1UVXdNVFF4TWpsYUZ3MHpOREE1TVRNd01UUXhNamxhTUE4eApEVEFMQmdOVkJBb1RCR1YwWTJRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFRV2IxYmxmUnhFCmZpSnZXeiszQnBmTlBhd1poZEFlSnpRVmQrMGgyb3ZtazFuU2wzdGhQNWQ4WnlsZE8yMUk0ZFdiMWtZZnhxSmgKdm5XVDY2VGN6N09XbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSApBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkdnc3NmNi81a2p5CmloaCs0MS80VFYwcFMxNkZNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJRmxWM0lQWHdkY0N6WTJITzdIeldKR04KaUxTcStRNU5kRFFtanM2ZXlya2ZBaUVBeWpkQTNjdWNTZ1o2L2RHdmRPTE9RcHQ0L3ZNWUdCTWtxL1JvQ1lmUApMck09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\n            key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUVKbzZWTFVGU1BwVWtySXg2THVadjdBWjk5U0JvQ2tiOHg4K3JGSDI1UGpvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFRm05VzVYMGNSSDRpYjFzL3R3YVh6VDJzR1lYUUhpYzBGWGZ0SWRxTDVwTlowcGQ3WVQrWApmR2NwWFR0dFNPSFZtOVpHSDhhaVliNTFrK3VrM00remxnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n        \n        # # The container image used to create the etcd service.\n        # image: gcr.io/etcd-development/etcd:v3.5.13\n\n        # # The `advertisedSubnets` field configures the networks to pick etcd advertised IP from.\n        # advertisedSubnets:\n        #     - 10.0.0.0/8\n    # A list of urls that point to additional manifests.\n    extraManifests: []\n    #   - https://www.example.com/manifest1.yaml\n    #   - https://www.example.com/manifest2.yaml\n\n    # A list of inline Kubernetes manifests.\n    inlineManifests: []\n    #   - name: namespace-ci # Name of the manifest.\n    #     contents: |- # Manifest contents as a string.\n    #       apiVersion: v1\n    #       kind: Namespace\n    #       metadata:\n    #       \tname: ci\n\n    \n    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).\n\n    # # Decryption secret example (do not use in production!).\n    # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=\n\n    # # Core DNS specific configuration options.\n    # coreDNS:\n    #     image: registry.k8s.io/coredns/coredns:v1.11.1 # The `image` field is an override to the default coredns image.\n\n    # # External cloud provider configuration.\n    # externalCloudProvider:\n    #     enabled: true # Enable external cloud provider.\n    #     # A list of urls that point to additional manifests for an external cloud provider.\n    #     manifests:\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml\n\n    # # A map of key value pairs that will be added while fetching the extraManifests.\n    # extraManifestHeaders:\n    #     Token: \"1234567\"\n    #     X-ExtraInfo: info\n\n    # # Settings for admin kubeconfig generation.\n    # adminKubeconfig:\n    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).\n\n    # # Allows running workload on control-plane nodes.\n    # allowSchedulingOnControlPlanes: true\n",
            "machine_secrets": {
              "certs": {
                "etcd": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmakNDQVNTZ0F3SUJBZ0lSQUtrNUFQdlB4TzVITDhJT1RaZ25yK013Q2dZSUtvWkl6ajBFQXdJd0R6RU4KTUFzR0ExVUVDaE1FWlhSalpEQWVGdzB5TkRBNU1UVXdNVFF4TWpsYUZ3MHpOREE1TVRNd01UUXhNamxhTUE4eApEVEFMQmdOVkJBb1RCR1YwWTJRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFRV2IxYmxmUnhFCmZpSnZXeiszQnBmTlBhd1poZEFlSnpRVmQrMGgyb3ZtazFuU2wzdGhQNWQ4WnlsZE8yMUk0ZFdiMWtZZnhxSmgKdm5XVDY2VGN6N09XbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSApBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkdnc3NmNi81a2p5CmloaCs0MS80VFYwcFMxNkZNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJRmxWM0lQWHdkY0N6WTJITzdIeldKR04KaUxTcStRNU5kRFFtanM2ZXlya2ZBaUVBeWpkQTNjdWNTZ1o2L2RHdmRPTE9RcHQ0L3ZNWUdCTWtxL1JvQ1lmUApMck09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                  "key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUVKbzZWTFVGU1BwVWtySXg2THVadjdBWjk5U0JvQ2tiOHg4K3JGSDI1UGpvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFRm05VzVYMGNSSDRpYjFzL3R3YVh6VDJzR1lYUUhpYzBGWGZ0SWRxTDVwTlowcGQ3WVQrWApmR2NwWFR0dFNPSFZtOVpHSDhhaVliNTFrK3VrM00remxnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
                },
                "k8s": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpakNDQVRDZ0F3SUJBZ0lSQUtJa3N3WXE4aFBjUDMwNElqV3RJQ013Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlOREE1TVRVd01UUXhNamxhRncwek5EQTVNVE13TVRReApNamxhTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVM2bXM5NmUyblUyZ3d0b2hZVWxsdUFtZ1JTUk9hdnUxS0F2WlpqNTFQTk5jSjhnKy96ekVFcTBlYWQKc2gyREhweWdwU1p1UDZVSlhkVXZKWElWOThXR28yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGQTRqK2ZWY0szOVhobkF0TmplZWRDUitVTDg2TUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUhWMi9xUmsKM3VMSld2ZG1ldnpMTGhQTmdQTWdZWTZ6TGVyaFozSkwvMHBYQWlFQTRKRXB6a245SjFkL1VsRVRSMXRCR2xSWQpMSENHbUlYS3BESmhpcHZhRVM4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                  "key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU42NkxyTlhFaEdRaFdpaWlycEJXQzVqNWJPa1NxSjJnWDVxYnY1MzhOTlZvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFdXByUGVudHAxTm9NTGFJV0ZKWmJnSm9FVWtUbXI3dFNnTDJXWStkVHpUWENmSVB2ODh4QgpLdEhtbmJJZGd4NmNvS1VtYmorbENWM1ZMeVZ5RmZmRmhnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
                },
                "k8s_aggregator": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJYekNDQVFXZ0F3SUJBZ0lRYzBMSkluSkJhVGNuWVhRWjhPUzNXVEFLQmdncWhrak9QUVFEQWpBQU1CNFgKRFRJME1Ea3hOVEF4TkRFeU9Wb1hEVE0wTURreE16QXhOREV5T1Zvd0FEQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5QXdFSEEwSUFCRml6Q0VubXg0N1ZnWTM0U0pKYlIxZloyNkNTWDQybVB5YmVsVVNCb1RuNW1NVWFTeEF3CmJKbTRCMmZmOHl0S2ZJMmEwcnN6a1lLL1BVdTcvYm84bE5HallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZApCZ05WSFE0RUZnUVVPTkZySFk2djFnSGlRdU10aVJzWnVFaTF0U3d3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUlnCktTanpPQkpWQndiVmtXdkErNHE3VzJ1Mjg5NUNDUmpkK0swWG5pcGNwZG9DSVFDc1BXejRmSmEveW0ybDhkcjkKR2RmdG5pNzg2MWRvVUJtQXRxcVRhOHB1cEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                  "key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUZPKzk1Z3dWdVhzUXlWSHBOTU1HazNLdzZjUFNqakxjUW5yVkhad1lnbHNvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFV0xNSVNlYkhqdFdCamZoSWtsdEhWOW5ib0pKZmphWS9KdDZWUklHaE9mbVl4UnBMRURCcwptYmdIWjkvekswcDhqWnJTdXpPUmdyODlTN3Y5dWp5VTBRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
                },
                "k8s_serviceaccount": {
                  "key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBeEY2YXpMNGIyLzJHdU1uNkhOQXZIZ3FablMzeHAvSkQ3ZDNxcXE3b05KeGQyUTMzCjVySlNmcFhJZlIrMklUcVNYSjB2elh6ZzVTSnFneG5tZE9vQkR2VGQrS1B0SVNHdUdHcWZmSXJVaGUzV0t1QWYKdFZxQVBOYklNRlRNUjNqNHdpaExMZTR2TXhhV0xlOExLZ2padkRBaWFRRE1vQmRkYkp2TW4vK21DZ05PbHZsMApzSjNEQklxM3czSTY0dzN1Wm8ycDdjUE11WjNsVk5qakw3NWNxRlM5RXNOdVd0dXgzUGNERVBZNjZtR0sxZmRyCkRKTzNGZDd2TGhLVFlLVEQyM0JEWnRwVVNQdUlneUMvTHg5NlBDR0hFNzF2RFN0WGw5R0lpd2pYMmd5SjZGQysKZGFKdFQ2cHJJVlJRSUVnZ1BYakdxY0w4K2UreXVoY0VoMzJXQjhuVloramllNTA0RkIvNDNGT1V5SlVSRU5rTwpSWXdYSWEzbDlSOGJCcytXNUczN0ZiemVOV1p4akZEbTVoVjJXOHljSElwYnhvZnRvTnBZaUJJRWhmTHdDRmxxCkFyTGpuWTdVUHcwRGI3OTlJTFg0eERHMlZZak55aEVVaDNsTkgzNGRhU2puekxsNzQxTnN0dHBjbDEyVG4xTUgKS1U5TzZSWHFHUXBjcW0zOGhWUHlwVVZoSkF4dXN5Yml2WGxGMEJldGdZTkF3VEtNVjV5NGFoZ1h5STFOM3FHZQpsMHZLUS9POVIvY3QvL3p3ZGZSSExBSDNWWHlGdDJMNnRYZ21yRGlsRHlMek4xTEswZFZTV1pZeVZ2dzZnR2QxCk4yUDR6VkQ2cGlISGkxZ2tjQjZHVGtTSUZYak5VMjV2MFBSMXJEY1drRDRvclZDWS9UWlcrUjloSDZFQ0F3RUEKQVFLQ0FnQTFCRTNMQlhERUhsam5QekRWNHFjMTl5cXVNeDlSZHFrOGFYUFlEVTBJRjBlSE9LdzdqdDJTNjZHcgpsb28zd25hTnBxcW5VaFh1QnpLMm5xR0g0ejNSNmU2Y0dMWUhBZTdkREx4dWhaVUhhOFVzNGtIdFZyZlV0VEJyClRCbXpHa2dmTTMzSXNzdnZnU09lMXpFdWNpRkhHNy9PbGJhcGFtV0EwemVWNHhIVEZqMTdxWElGMVRJMzRiUG4KZ3NtL1Q1MlQ5cDl3WURLLzBvOStMdWgzbFcreXl0NFpXTVpNcFpBSjFtN3ZmMnM4cUlVeGE1RnRYZHhLZlZ3YQpGazNRQSt3VkxPUWx1c0NTeThaNWtMZk5ZelEvVTlZQ1VGelJNMmg4eHNlVXNoaUUrR21yWFZGdXRTSEtKbnF5CkR1OXJKODM4aXNVb1JFckV1Q0NLK1hmeGxNaVNiR0xkWHNXYnlrd2laVnF2VkhDOTUycEVGUUdhUEgwZ2YrNWcKRjNtWmwwWDVRZ0hSYkZhdUlFTFBEUHdoM2RvUGlPcWN1bjNqdHJOa0orczRXTUZRSFptQ0tJc1NtK2tIc0tCaApwZjZwdng3Sm1xSVN0L25zbjRObE9yakVvaEZMK3E4ZGd4R08yOTVtUnB2RWs1R0NPQ0hQczVwQU1zbHNpbXVECmtwMGhNYXdLUzhMT25JVG9qRlpDVUIwZlRWZVZ2UHdKY1hHTU5XdVFkR0hUQVRKSFRiU3pxYTZ6Q0NNbG93dmkKUWtoU3VtS1ZwYmNJYW9pcFJEWFBxekFEb1F5Vm51ekU3d29tZHc3N1ZPRXhCTTVtN2NzQXBiNStHWDNFR3pSZQpyaHd4TzA5YktxOEVNYm4zT2RZVUdrVUJuaGFuTmZwMUNuS0NENTk1N1JqS09jYjlXUUtDQVFFQTBWSS8vb2JqCm9UNXRzdVNNcE5QNjhQdHJwSkxXUUxpSW1YSVQ4ZnErUjQrRERlZ1pNTHUzVnBzSGhGWW9OOExyZ1hSNGtad0YKSDBWNDBSZ0xXOVlOSjhKUHB6L3U0dlU2Tm45ZHpSTnNpRFN6TXlNcjhHR2NWb3dqbDh5eWdGbEtkaTVyU2JRNgpQQ1NZTFdBOG13TDRwekgyR0FyY3FHdkV2STBsUTFiT1BuQUtLRkxCS3RBTVltVmtGM0FYTGZGMVBVYXVhU3gzClZQOXNkUGZJUHpzQkZCK3BLQnZ4Nk5PeE1EY1dnZUYzSXlxSG5qU245aHg3eDd3dUxsTVB0RXhOVnFzV0JiTkwKanR2clJCTHVMVW82SjYxY2lCVXFJWHdvSHBVbWRPTy9vbG4xQVRXOGtEL1I3bWZZd2QwSk10NTYxVHdtWnhTZgp5QU9OS00ydzA5N2c4d0tDQVFFQThDajIvVVNjTG5ENVA5WVBLczFpdUFUdGFXbE5kMnQ5UWJtejVKMjFBRXR1ClZzeUk0dkU4YTZzZnlRU2VsZ2JRTEs3SFNYajVaR01oZWtIbXRMWHdkaFVLMFF6elk2Z1VGK09sM2V6eTlQUDcKSWs2c2dvdFJVcW8zTHN4bUU0UmVYUDJhQ2V6TGdLYUU2NEtGVDQyZkp0UG5leU5keTlERzhkdGdGWnFZaFZzcwpqWjIzSlh1VHlINmk2WnQxVThRZTFMUld4UlF0aGRHV0hMSGF4M1ArVHRpMkNJbWIvOFJKQUk3VGgwS1EyeFhTCjVuUjJwN0RIb3lZLzlBdG9oVFBqMmpkREtraklXOVFEWEc1cDU3YldlN0JTQStmRC9qcGJvR2ZZSUhwY2RQNXgKbUFmNzZ6cnBEemx3WGlQSU5BOFdIWFBSdk0rR01qNk1YNDk4RGN5Q0d3S0NBUUJINmk0NlVEV2NqRW84RC9HUwpINUl6Z08yMm1Rd3JLRHNtSE45bFgzUklPYklZOFFqV2lXZXZ4WXVMbDk0eGFqSm5RNUM0MWhXY2JNM1phSjFlCmErZ1JKTjBnNVFJNXoyNjBrb1d6azF6U1h1akNSTzh2b3htSFVwWlg3T2ZXMk5hUVM5cG9kQmNkMnFTOTBqYUEKTzBFYWtEdXdmdXJZb2szeFNiem5xY2NxQkd3NDlsV1BVL010U3hCY1RSSnBvbTlaSWhPQjV0a0l4c2lJVnlqaApNSEJxYllZOFZYMkRORmZIN09VNnNpK3dVVWhPdm1DR1dicmRJSFh0VEhRMHlaSTRtSWIwWm1rcko3dG9vK2hZCmZ3d0QzYmZRdVJURWRGZUVTbEh3RHQ4ajlDd013bDJLWWFMS2Vic3F2N29OVkFwM2dEYmhhMkNKNDA1NEdsTUsKTjZTcEFvSUJBRUtwTEQyS29NdG5RbGdNdzdMK3hXc011eFZxVEQxY2thei9yY1pFWEN4VHc3SEdIaXpZQnd4Zgp1SGZrbDF4UFVkTkZSRDNKblhmVzZFRDJMK0p6S2VhczJvN0NTSUNkODgzWnUzMkpPcnJ4U2dEdzA0Tjh4anJxCjBseGtFZVZTOVpwY0xqaVpDTGVTQVEwWjhvVHRhNEtzaVBFdUZPZnc4SGZMaTdVVGIwaDgwVFlSMC9kTWdPM0MKOE5kazlrRWxDK1hBbE9FcFE2V0VVbVZ1bktxR01NMlQ2NXNkRHpjRU5iczQ2Yy8ra3hTc3p4aDJ0VVRBbGZsYwpNWjQ4MkdzNHh3TVlHY1dQNUVWUTZRbnIvK3Q0WGJxQmE1SjM3M2dPbk1ZK2JNZy9EcERPMjVyMmhGOTd2NXNoCk4yWjZDaVVoRnVOZjlaU3lDYTdDbTlZZWpyR0oxWWNDZ2dFQkFKcXlPbC9hR2EwbXlteE9pY0pXMkFsWnkzRjkKWWJyNXViOTRFMWVvZ2lrVEprZkZDOHE2ZmUyUjYycnlVSmE4WERqNW9lMmo2SWNQUEU5ZzR6TVg0MFg3VTU2bQp2MzBWWHgwQTUvS2NENG1WekVwb2RUQVR6bm95eVRtY2hIRWs5VVF5TzNXd2w1Nnhyc1AraW0zMVlVVVVKRldpClM5WXpsUFFLY2RzODRscWNjK0I2OHVYaldxOHR5V29oRFcxTUZVamY1SFhzRGJQUkVOQTdMOUNYWVowN25oWU0KS2pTYWxyZHgwaXJocFdJMkdhZzhCZjFtT1hYaGUxSFBMajdqMlQxZHVlZ0ltMzNNU2VUK0M2bkJ0dTZvb2FsUQo4ZE1UK3Axdm9HNmFyRVNpeDdaNGkvWnVJYTFJeXQ0d0RmQmgwM0tEK2xYbDU2Z3krMlhsQThXajlpYz0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K"
                },
                "os": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEJtZXVha3B3aFlIOHNWU1NtVHJJdlpNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5EQTVNVFV3TVRReE1qbGFGdzB6TkRBNU1UTXdNVFF4TWpsYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBVTdHUi83d3k2TWhvUmxCYmF2OUwrNWJ5MkVVTEVSeFBuNVBWCnBaTlFQRUtqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVNUV3K0o4d21XZk1PTkNRZgpib21NdXV6dEtRZ3dCUVlESzJWd0EwRUFkT3FNT3UwdkJSbENHaXo3cVZqL1NnaTFSN1p2T3hLOU9xZFhwQjhlCjkyM1o0SHZ0cGx1a2hMVEcxYUY2cjJHcE5aNDh6WlVkcHVvT213a25YRXBqQ3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                  "key": "LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJQWRmUWxRNnhXRDYzMWhpMm9TZ2FpVU5HSzlmU29sRXI3ZDRKbjJtQXA0NQotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K"
                }
              },
              "cluster": {
                "id": "8slduxY_GAi_6kXZVBT1HimFxw7qI8ZI8rscA9QEsa8=",
                "secret": "jB9mqchMnYCyAOcV0MM6RY+2S3qPgGgqpzd7gg6Br4o="
              },
              "secrets": {
                "aescbc_encryption_secret": null,
                "bootstrap_token": "uionez.ajblvmwkqhy7fre4",
                "secretbox_encryption_secret": "4N5U1/Bhntbei1Sz0lyh3SmYW00G+KamspvrAtyOw5s="
              },
              "trustdinfo": {
                "token": "rpuf27.nts20g6mps3x2vqa"
              }
            },
            "machine_type": "controlplane",
            "talos_version": "v1.7"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "machine_configuration"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "trustdinfo"
              },
              {
                "type": "get_attr",
                "value": "token"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "certs"
              },
              {
                "type": "get_attr",
                "value": "k8s_aggregator"
              },
              {
                "type": "get_attr",
                "value": "key"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "certs"
              },
              {
                "type": "get_attr",
                "value": "k8s_serviceaccount"
              },
              {
                "type": "get_attr",
                "value": "key"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "certs"
              },
              {
                "type": "get_attr",
                "value": "os"
              },
              {
                "type": "get_attr",
                "value": "key"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "certs"
              },
              {
                "type": "get_attr",
                "value": "etcd"
              },
              {
                "type": "get_attr",
                "value": "key"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "certs"
              },
              {
                "type": "get_attr",
                "value": "k8s"
              },
              {
                "type": "get_attr",
                "value": "key"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "cluster"
              },
              {
                "type": "get_attr",
                "value": "secret"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "secrets"
              },
              {
                "type": "get_attr",
                "value": "aescbc_encryption_secret"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "secrets"
              },
              {
                "type": "get_attr",
                "value": "bootstrap_token"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "secrets"
              },
              {
                "type": "get_attr",
                "value": "secretbox_encryption_secret"
              }
            ]
          ]
        }
      ]
    },
    {
      "mode": "data",
      "type": "talos_machine_configuration",
      "name": "machineconfig_worker",
      "provider": "provider[\"registry.terraform.io/siderolabs/talos\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cluster_endpoint": "https://10.0.0.70:6443",
            "cluster_name": "kubernetes_cluster",
            "config_patches": null,
            "docs": true,
            "examples": true,
            "id": "kubernetes_cluster",
            "kubernetes_version": "1.30.0",
            "machine_configuration": "version: v1alpha1 # Indicates the schema used to decode the contents.\ndebug: false # Enable verbose logging to the console.\npersist: true\n# Provides machine specific configuration options.\nmachine:\n    type: worker # Defines the role of the machine within the cluster.\n    token: rpuf27.nts20g6mps3x2vqa # The `token` is used by a machine to join the PKI of the cluster.\n    # The root certificate authority of the PKI.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEJtZXVha3B3aFlIOHNWU1NtVHJJdlpNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5EQTVNVFV3TVRReE1qbGFGdzB6TkRBNU1UTXdNVFF4TWpsYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBVTdHUi83d3k2TWhvUmxCYmF2OUwrNWJ5MkVVTEVSeFBuNVBWCnBaTlFQRUtqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVNUV3K0o4d21XZk1PTkNRZgpib21NdXV6dEtRZ3dCUVlESzJWd0EwRUFkT3FNT3UwdkJSbENHaXo3cVZqL1NnaTFSN1p2T3hLOU9xZFhwQjhlCjkyM1o0SHZ0cGx1a2hMVEcxYUY2cjJHcE5aNDh6WlVkcHVvT213a25YRXBqQ3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: \"\"\n    # Extra certificate subject alternative names for the machine's certificate.\n    certSANs: []\n    #   # Uncomment this to enable SANs.\n    #   - 10.0.0.10\n    #   - 172.16.0.10\n    #   - 192.168.0.10\n\n    # Used to provide additional options to the kubelet.\n    kubelet:\n        image: ghcr.io/siderolabs/kubelet:v1.30.0 # The `image` field is an optional reference to an alternative kubelet image.\n        defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.\n        disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.\n        \n        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.\n        # clusterDNS:\n        #     - 10.96.0.10\n        #     - 169.254.2.53\n\n        # # The `extraArgs` field is used to provide additional flags to the kubelet.\n        # extraArgs:\n        #     key: value\n\n        # # The `extraMounts` field is used to add additional mounts to the kubelet container.\n        # extraMounts:\n        #     - destination: /var/lib/example # Destination is the absolute path where the mount will be placed in the container.\n        #       type: bind # Type specifies the mount kind.\n        #       source: /var/lib/example # Source specifies the source path of the mount.\n        #       # Options are fstab style mount options.\n        #       options:\n        #         - bind\n        #         - rshared\n        #         - rw\n\n        # # The `extraConfig` field is used to provide kubelet configuration overrides.\n        # extraConfig:\n        #     serverTLSBootstrap: true\n\n        # # The `KubeletCredentialProviderConfig` field is used to provide kubelet credential configuration.\n        # credentialProviderConfig:\n        #     apiVersion: kubelet.config.k8s.io/v1\n        #     kind: CredentialProviderConfig\n        #     providers:\n        #         - apiVersion: credentialprovider.kubelet.k8s.io/v1\n        #           defaultCacheDuration: 12h\n        #           matchImages:\n        #             - '*.dkr.ecr.*.amazonaws.com'\n        #             - '*.dkr.ecr.*.amazonaws.com.cn'\n        #             - '*.dkr.ecr-fips.*.amazonaws.com'\n        #             - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'\n        #             - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'\n        #           name: ecr-credential-provider\n\n        # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.\n        # nodeIP:\n        #     # The `validSubnets` field configures the networks to pick kubelet node IP from.\n        #     validSubnets:\n        #         - 10.0.0.0/8\n        #         - '!10.0.0.3/32'\n        #         - fdc7::/16\n    # Provides machine specific network configuration options.\n    network: {}\n    # # `interfaces` is used to define the network interface configuration.\n    # interfaces:\n    #     - interface: enp0s1 # The interface name.\n    #       # Assigns static IP addresses to the interface.\n    #       addresses:\n    #         - 192.168.2.0/24\n    #       # A list of routes associated with the interface.\n    #       routes:\n    #         - network: 0.0.0.0/0 # The route's network (destination).\n    #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).\n    #           metric: 1024 # The optional metric for the route.\n    #       mtu: 1500 # The interface's MTU.\n    #       \n    #       # # Picks a network device using the selector.\n\n    #       # # select a device with bus prefix 00:*.\n    #       # deviceSelector:\n    #       #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n    #       # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.\n    #       # deviceSelector:\n    #       #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.\n    #       #     driver: virtio # Kernel driver, supports matching by wildcard.\n    #       # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.\n    #       # deviceSelector:\n    #       #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n    #       #     - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.\n    #       #       driver: virtio # Kernel driver, supports matching by wildcard.\n\n    #       # # Bond specific options.\n    #       # bond:\n    #       #     # The interfaces that make up the bond.\n    #       #     interfaces:\n    #       #         - enp2s0\n    #       #         - enp2s1\n    #       #     # Picks a network device using the selector.\n    #       #     deviceSelectors:\n    #       #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n    #       #         - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.\n    #       #           driver: virtio # Kernel driver, supports matching by wildcard.\n    #       #     mode: 802.3ad # A bond option.\n    #       #     lacpRate: fast # A bond option.\n\n    #       # # Bridge specific options.\n    #       # bridge:\n    #       #     # The interfaces that make up the bridge.\n    #       #     interfaces:\n    #       #         - enxda4042ca9a51\n    #       #         - enxae2a6774c259\n    #       #     # A bridge option.\n    #       #     stp:\n    #       #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.\n\n    #       # # Indicates if DHCP should be used to configure the interface.\n    #       # dhcp: true\n\n    #       # # DHCP specific options.\n    #       # dhcpOptions:\n    #       #     routeMetric: 1024 # The priority of all routes received via DHCP.\n\n    #       # # Wireguard specific configuration.\n\n    #       # # wireguard server example\n    #       # wireguard:\n    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n    #       #     listenPort: 51111 # Specifies a device's listening port.\n    #       #     # Specifies a list of peer configurations to apply to a device.\n    #       #     peers:\n    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n    #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.\n    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n    #       #           allowedIPs:\n    #       #             - 192.168.1.0/24\n    #       # # wireguard peer example\n    #       # wireguard:\n    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n    #       #     # Specifies a list of peer configurations to apply to a device.\n    #       #     peers:\n    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n    #       #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.\n    #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.\n    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n    #       #           allowedIPs:\n    #       #             - 192.168.1.0/24\n\n    #       # # Virtual (shared) IP address configuration.\n\n    #       # # layer2 vip example\n    #       # vip:\n    #       #     ip: 172.16.199.55 # Specifies the IP address to be used.\n\n    # # Used to statically set the nameservers for the machine.\n    # nameservers:\n    #     - 8.8.8.8\n    #     - 1.1.1.1\n\n    # # Allows for extra entries to be added to the `/etc/hosts` file\n    # extraHostEntries:\n    #     - ip: 192.168.1.100 # The IP of the host.\n    #       # The host alias.\n    #       aliases:\n    #         - example\n    #         - example.domain.tld\n\n    # # Configures KubeSpan feature.\n    # kubespan:\n    #     enabled: true # Enable the KubeSpan feature.\n\n    # Used to provide instructions for installations.\n    install:\n        disk: /dev/sda # The disk used for installations.\n        image: ghcr.io/siderolabs/installer:v1.7.0 # Allows for supplying the image used to perform the installation.\n        wipe: false # Indicates if the installation disk should be wiped at installation time.\n        \n        # # Look up disk using disk attributes like model, size, serial and others.\n        # diskSelector:\n        #     size: 4GB # Disk size.\n        #     model: WDC* # Disk model `/sys/block/\u003cdev\u003e/device/model`.\n        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.\n\n        # # Allows for supplying extra kernel args via the bootloader.\n        # extraKernelArgs:\n        #     - talos.platform=metal\n        #     - reboot=k\n\n        # # Allows for supplying additional system extension images to install on top of base Talos image.\n        # extensions:\n        #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0 # System extension image.\n    # Used to configure the machine's container image registry mirrors.\n    registries: {}\n    # # Specifies mirror configuration for each registry host namespace.\n    # mirrors:\n    #     ghcr.io:\n    #         # List of endpoints (URLs) for registry mirrors to use.\n    #         endpoints:\n    #             - https://registry.insecure\n    #             - https://ghcr.io/v2/\n\n    # # Specifies TLS \u0026 auth configuration for HTTPS image registries.\n    # config:\n    #     registry.insecure:\n    #         # The TLS configuration for the registry.\n    #         tls:\n    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).\n    #             \n    #             # # Enable mutual TLS authentication with the registry.\n    #             # clientIdentity:\n    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t\n    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==\n    #         \n    #         # # The auth configuration for this registry.\n    #         # auth:\n    #         #     username: username # Optional registry authentication.\n    #         #     password: password # Optional registry authentication.\n\n    # Features describe individual Talos features that can be switched on or off.\n    features:\n        rbac: true # Enable role-based access control (RBAC).\n        stableHostname: true # Enable stable default hostname.\n        apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.\n        diskQuotaSupport: true # Enable XFS project quota support for EPHEMERAL partition and user disks.\n        # KubePrism - local proxy/load balancer on defined port that will distribute\n        kubePrism:\n            enabled: true # Enable KubePrism support - will start local load balancing proxy.\n            port: 7445 # KubePrism port.\n        # Configures host DNS caching resolver.\n        hostDNS:\n            enabled: true # Enable host DNS caching resolver.\n        \n        # # Configure Talos API access from Kubernetes pods.\n        # kubernetesTalosAPIAccess:\n        #     enabled: true # Enable Talos API access from Kubernetes pods.\n        #     # The list of Talos API roles which can be granted for access from Kubernetes pods.\n        #     allowedRoles:\n        #         - os:reader\n        #     # The list of Kubernetes namespaces Talos API access is available from.\n        #     allowedKubernetesNamespaces:\n        #         - kube-system\n    \n    # # Provides machine specific control plane configuration options.\n\n    # # ControlPlane definition example.\n    # controlPlane:\n    #     # Controller manager machine specific configuration options.\n    #     controllerManager:\n    #         disabled: false # Disable kube-controller-manager on the node.\n    #     # Scheduler machine specific configuration options.\n    #     scheduler:\n    #         disabled: true # Disable kube-scheduler on the node.\n\n    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.\n\n    # # nginx static pod.\n    # pods:\n    #     - apiVersion: v1\n    #       kind: pod\n    #       metadata:\n    #         name: nginx\n    #       spec:\n    #         containers:\n    #             - image: nginx\n    #               name: nginx\n\n    # # Used to partition, format and mount additional disks.\n\n    # # MachineDisks list example.\n    # disks:\n    #     - device: /dev/sdb # The name of the disk to use.\n    #       # A list of partitions to create on the disk.\n    #       partitions:\n    #         - mountpoint: /var/mnt/extra # Where to mount the partition.\n    #           \n    #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.\n\n    #           # # Human readable representation.\n    #           # size: 100 MB\n    #           # # Precise value in bytes.\n    #           # size: 1073741824\n\n    # # Allows the addition of user specified files.\n\n    # # MachineFiles usage example.\n    # files:\n    #     - content: '...' # The contents of the file.\n    #       permissions: 0o666 # The file's permissions in octal.\n    #       path: /tmp/file.txt # The path of the file.\n    #       op: append # The operation to use\n\n    # # The `env` field allows for the addition of environment variables.\n\n    # # Environment variables definition examples.\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: info\n    #     GRPC_GO_LOG_VERBOSITY_LEVEL: \"99\"\n    #     https_proxy: http://SERVER:PORT/\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: error\n    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/\n    # env:\n    #     https_proxy: http://DOMAIN\\USERNAME:PASSWORD@SERVER:PORT/\n\n    # # Used to configure the machine's time settings.\n\n    # # Example configuration for cloudflare ntp server.\n    # time:\n    #     disabled: false # Indicates if the time service is disabled for the machine.\n    #     # description: |\n    #     servers:\n    #         - time.cloudflare.com\n    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.\n\n    # # Used to configure the machine's sysctls.\n\n    # # MachineSysctls usage example.\n    # sysctls:\n    #     kernel.domainname: talos.dev\n    #     net.ipv4.ip_forward: \"0\"\n    #     net/ipv6/conf/eth0.100/disable_ipv6: \"1\"\n\n    # # Used to configure the machine's sysfs.\n\n    # # MachineSysfs usage example.\n    # sysfs:\n    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance\n\n    # # Machine system disk encryption configuration.\n    # systemDiskEncryption:\n    #     # Ephemeral partition encryption.\n    #     ephemeral:\n    #         provider: luks2 # Encryption provider to use for the encryption.\n    #         # Defines the encryption keys generation and storage method.\n    #         keys:\n    #             - # Deterministically generated key from the node UUID and PartitionLabel.\n    #               nodeID: {}\n    #               slot: 0 # Key slot number for LUKS2 encryption.\n    #               \n    #               # # KMS managed encryption key.\n    #               # kms:\n    #               #     endpoint: https://192.168.88.21:4443 # KMS endpoint to Seal/Unseal the key.\n    #         \n    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.\n    #         # cipher: aes-xts-plain64\n\n    #         # # Defines the encryption sector size.\n    #         # blockSize: 4096\n\n    #         # # Additional --perf parameters for the LUKS2 encryption.\n    #         # options:\n    #         #     - no_read_workqueue\n    #         #     - no_write_workqueue\n\n    # # Configures the udev system.\n    # udev:\n    #     # List of udev rules to apply to the udev system\n    #     rules:\n    #         - SUBSYSTEM==\"drm\", KERNEL==\"renderD*\", GROUP=\"44\", MODE=\"0660\"\n\n    # # Configures the logging system.\n    # logging:\n    #     # Logging destination.\n    #     destinations:\n    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are \"tcp\" and \"udp\".\n    #           format: json_lines # Logs format.\n\n    # # Configures the kernel.\n    # kernel:\n    #     # Kernel modules to load.\n    #     modules:\n    #         - name: brtfs # Module name.\n\n    # # Configures the seccomp profiles for the machine.\n    # seccompProfiles:\n    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.\n    #       # The `value` field is used to provide the seccomp profile.\n    #       value:\n    #         defaultAction: SCMP_ACT_LOG\n\n    # # Configures the node labels for the machine.\n\n    # # node labels example.\n    # nodeLabels:\n    #     exampleLabel: exampleLabelValue\n\n    # # Configures the node taints for the machine. Effect is optional.\n\n    # # node taints example.\n    # nodeTaints:\n    #     exampleTaint: exampleTaintValue:NoSchedule\n# Provides cluster specific configuration options.\ncluster:\n    id: 8slduxY_GAi_6kXZVBT1HimFxw7qI8ZI8rscA9QEsa8= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).\n    secret: jB9mqchMnYCyAOcV0MM6RY+2S3qPgGgqpzd7gg6Br4o= # Shared secret of cluster (base64 encoded random 32 bytes).\n    # Provides control plane specific configuration options.\n    controlPlane:\n        endpoint: https://10.0.0.70:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.\n    # Provides cluster specific network configuration options.\n    network:\n        dnsDomain: cluster.local # The domain used by Kubernetes DNS.\n        # The pod subnet CIDR.\n        podSubnets:\n            - 10.244.0.0/16\n        # The service subnet CIDR.\n        serviceSubnets:\n            - 10.96.0.0/12\n        \n        # # The CNI used.\n        # cni:\n        #     name: custom # Name of CNI to use.\n        #     # URLs containing manifests to apply for the CNI.\n        #     urls:\n        #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml\n    token: uionez.ajblvmwkqhy7fre4 # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.\n    # The base64 encoded root certificate authority used by Kubernetes.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpakNDQVRDZ0F3SUJBZ0lSQUtJa3N3WXE4aFBjUDMwNElqV3RJQ013Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlOREE1TVRVd01UUXhNamxhRncwek5EQTVNVE13TVRReApNamxhTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVM2bXM5NmUyblUyZ3d0b2hZVWxsdUFtZ1JTUk9hdnUxS0F2WlpqNTFQTk5jSjhnKy96ekVFcTBlYWQKc2gyREhweWdwU1p1UDZVSlhkVXZKWElWOThXR28yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGQTRqK2ZWY0szOVhobkF0TmplZWRDUitVTDg2TUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUhWMi9xUmsKM3VMSld2ZG1ldnpMTGhQTmdQTWdZWTZ6TGVyaFozSkwvMHBYQWlFQTRKRXB6a245SjFkL1VsRVRSMXRCR2xSWQpMSENHbUlYS3BESmhpcHZhRVM4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: \"\"\n    # Configures cluster member discovery.\n    discovery:\n        enabled: true # Enable the cluster membership discovery feature.\n        # Configure registries used for cluster member discovery.\n        registries:\n            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information\n            kubernetes:\n                disabled: true # Disable Kubernetes discovery registry.\n            # Service registry is using an external service to push and pull information about cluster members.\n            service: {}\n            # # External service endpoint.\n            # endpoint: https://discovery.talos.dev/\n    \n    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).\n\n    # # Decryption secret example (do not use in production!).\n    # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=\n\n    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).\n\n    # # Decryption secret example (do not use in production!).\n    # secretboxEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=\n\n    # # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.\n\n    # # AggregatorCA example.\n    # aggregatorCA:\n    #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t\n    #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==\n\n    # # The base64 encoded private key for service account token generation.\n\n    # # AggregatorCA example.\n    # serviceAccount:\n    #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==\n\n    # # API server specific configuration options.\n    # apiServer:\n    #     image: registry.k8s.io/kube-apiserver:v1.30.0 # The container image used in the API server manifest.\n    #     # Extra arguments to supply to the API server.\n    #     extraArgs:\n    #         feature-gates: ServerSideApply=true\n    #         http2-max-streams-per-connection: \"32\"\n    #     # Extra certificate subject alternative names for the API server's certificate.\n    #     certSANs:\n    #         - 1.2.3.4\n    #         - 4.5.6.7\n    #     # Configure the API server admission plugins.\n    #     admissionControl:\n    #         - name: PodSecurity # Name is the name of the admission controller.\n    #           # Configuration is an embedded configuration object to be used as the plugin's\n    #           configuration:\n    #             apiVersion: pod-security.admission.config.k8s.io/v1alpha1\n    #             defaults:\n    #                 audit: restricted\n    #                 audit-version: latest\n    #                 enforce: baseline\n    #                 enforce-version: latest\n    #                 warn: restricted\n    #                 warn-version: latest\n    #             exemptions:\n    #                 namespaces:\n    #                     - kube-system\n    #                 runtimeClasses: []\n    #                 usernames: []\n    #             kind: PodSecurityConfiguration\n    #     # Configure the API server audit policy.\n    #     auditPolicy:\n    #         apiVersion: audit.k8s.io/v1\n    #         kind: Policy\n    #         rules:\n    #             - level: Metadata\n\n    # # Controller manager server specific configuration options.\n    # controllerManager:\n    #     image: registry.k8s.io/kube-controller-manager:v1.30.0 # The container image used in the controller manager manifest.\n    #     # Extra arguments to supply to the controller manager.\n    #     extraArgs:\n    #         feature-gates: ServerSideApply=true\n\n    # # Kube-proxy server-specific configuration options\n    # proxy:\n    #     disabled: false # Disable kube-proxy deployment on cluster bootstrap.\n    #     image: registry.k8s.io/kube-proxy:v1.30.0 # The container image used in the kube-proxy manifest.\n    #     mode: ipvs # proxy mode of kube-proxy.\n    #     # Extra arguments to supply to kube-proxy.\n    #     extraArgs:\n    #         proxy-mode: iptables\n\n    # # Scheduler server specific configuration options.\n    # scheduler:\n    #     image: registry.k8s.io/kube-scheduler:v1.30.0 # The container image used in the scheduler manifest.\n    #     # Extra arguments to supply to the scheduler.\n    #     extraArgs:\n    #         feature-gates: AllBeta=true\n\n    # # Etcd specific configuration options.\n    # etcd:\n    #     image: gcr.io/etcd-development/etcd:v3.5.13 # The container image used to create the etcd service.\n    #     # The `ca` is the root certificate authority of the PKI.\n    #     ca:\n    #         crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t\n    #         key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==\n    #     # Extra arguments to supply to etcd.\n    #     extraArgs:\n    #         election-timeout: \"5000\"\n    #     # The `advertisedSubnets` field configures the networks to pick etcd advertised IP from.\n    #     advertisedSubnets:\n    #         - 10.0.0.0/8\n\n    # # Core DNS specific configuration options.\n    # coreDNS:\n    #     image: registry.k8s.io/coredns/coredns:v1.11.1 # The `image` field is an override to the default coredns image.\n\n    # # External cloud provider configuration.\n    # externalCloudProvider:\n    #     enabled: true # Enable external cloud provider.\n    #     # A list of urls that point to additional manifests for an external cloud provider.\n    #     manifests:\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml\n\n    # # A list of urls that point to additional manifests.\n    # extraManifests:\n    #     - https://www.example.com/manifest1.yaml\n    #     - https://www.example.com/manifest2.yaml\n\n    # # A map of key value pairs that will be added while fetching the extraManifests.\n    # extraManifestHeaders:\n    #     Token: \"1234567\"\n    #     X-ExtraInfo: info\n\n    # # A list of inline Kubernetes manifests.\n    # inlineManifests:\n    #     - name: namespace-ci # Name of the manifest.\n    #       contents: |- # Manifest contents as a string.\n    #         apiVersion: v1\n    #         kind: Namespace\n    #         metadata:\n    #         \tname: ci\n\n    # # Settings for admin kubeconfig generation.\n    # adminKubeconfig:\n    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).\n\n    # # Allows running workload on control-plane nodes.\n    # allowSchedulingOnControlPlanes: true\n",
            "machine_secrets": {
              "certs": {
                "etcd": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmakNDQVNTZ0F3SUJBZ0lSQUtrNUFQdlB4TzVITDhJT1RaZ25yK013Q2dZSUtvWkl6ajBFQXdJd0R6RU4KTUFzR0ExVUVDaE1FWlhSalpEQWVGdzB5TkRBNU1UVXdNVFF4TWpsYUZ3MHpOREE1TVRNd01UUXhNamxhTUE4eApEVEFMQmdOVkJBb1RCR1YwWTJRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFRV2IxYmxmUnhFCmZpSnZXeiszQnBmTlBhd1poZEFlSnpRVmQrMGgyb3ZtazFuU2wzdGhQNWQ4WnlsZE8yMUk0ZFdiMWtZZnhxSmgKdm5XVDY2VGN6N09XbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSApBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkdnc3NmNi81a2p5CmloaCs0MS80VFYwcFMxNkZNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJRmxWM0lQWHdkY0N6WTJITzdIeldKR04KaUxTcStRNU5kRFFtanM2ZXlya2ZBaUVBeWpkQTNjdWNTZ1o2L2RHdmRPTE9RcHQ0L3ZNWUdCTWtxL1JvQ1lmUApMck09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                  "key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUVKbzZWTFVGU1BwVWtySXg2THVadjdBWjk5U0JvQ2tiOHg4K3JGSDI1UGpvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFRm05VzVYMGNSSDRpYjFzL3R3YVh6VDJzR1lYUUhpYzBGWGZ0SWRxTDVwTlowcGQ3WVQrWApmR2NwWFR0dFNPSFZtOVpHSDhhaVliNTFrK3VrM00remxnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
                },
                "k8s": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpakNDQVRDZ0F3SUJBZ0lSQUtJa3N3WXE4aFBjUDMwNElqV3RJQ013Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlOREE1TVRVd01UUXhNamxhRncwek5EQTVNVE13TVRReApNamxhTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVM2bXM5NmUyblUyZ3d0b2hZVWxsdUFtZ1JTUk9hdnUxS0F2WlpqNTFQTk5jSjhnKy96ekVFcTBlYWQKc2gyREhweWdwU1p1UDZVSlhkVXZKWElWOThXR28yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGQTRqK2ZWY0szOVhobkF0TmplZWRDUitVTDg2TUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUhWMi9xUmsKM3VMSld2ZG1ldnpMTGhQTmdQTWdZWTZ6TGVyaFozSkwvMHBYQWlFQTRKRXB6a245SjFkL1VsRVRSMXRCR2xSWQpMSENHbUlYS3BESmhpcHZhRVM4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                  "key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU42NkxyTlhFaEdRaFdpaWlycEJXQzVqNWJPa1NxSjJnWDVxYnY1MzhOTlZvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFdXByUGVudHAxTm9NTGFJV0ZKWmJnSm9FVWtUbXI3dFNnTDJXWStkVHpUWENmSVB2ODh4QgpLdEhtbmJJZGd4NmNvS1VtYmorbENWM1ZMeVZ5RmZmRmhnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
                },
                "k8s_aggregator": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJYekNDQVFXZ0F3SUJBZ0lRYzBMSkluSkJhVGNuWVhRWjhPUzNXVEFLQmdncWhrak9QUVFEQWpBQU1CNFgKRFRJME1Ea3hOVEF4TkRFeU9Wb1hEVE0wTURreE16QXhOREV5T1Zvd0FEQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5QXdFSEEwSUFCRml6Q0VubXg0N1ZnWTM0U0pKYlIxZloyNkNTWDQybVB5YmVsVVNCb1RuNW1NVWFTeEF3CmJKbTRCMmZmOHl0S2ZJMmEwcnN6a1lLL1BVdTcvYm84bE5HallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZApCZ05WSFE0RUZnUVVPTkZySFk2djFnSGlRdU10aVJzWnVFaTF0U3d3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUlnCktTanpPQkpWQndiVmtXdkErNHE3VzJ1Mjg5NUNDUmpkK0swWG5pcGNwZG9DSVFDc1BXejRmSmEveW0ybDhkcjkKR2RmdG5pNzg2MWRvVUJtQXRxcVRhOHB1cEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                  "key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUZPKzk1Z3dWdVhzUXlWSHBOTU1HazNLdzZjUFNqakxjUW5yVkhad1lnbHNvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFV0xNSVNlYkhqdFdCamZoSWtsdEhWOW5ib0pKZmphWS9KdDZWUklHaE9mbVl4UnBMRURCcwptYmdIWjkvekswcDhqWnJTdXpPUmdyODlTN3Y5dWp5VTBRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
                },
                "k8s_serviceaccount": {
                  "key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBeEY2YXpMNGIyLzJHdU1uNkhOQXZIZ3FablMzeHAvSkQ3ZDNxcXE3b05KeGQyUTMzCjVySlNmcFhJZlIrMklUcVNYSjB2elh6ZzVTSnFneG5tZE9vQkR2VGQrS1B0SVNHdUdHcWZmSXJVaGUzV0t1QWYKdFZxQVBOYklNRlRNUjNqNHdpaExMZTR2TXhhV0xlOExLZ2padkRBaWFRRE1vQmRkYkp2TW4vK21DZ05PbHZsMApzSjNEQklxM3czSTY0dzN1Wm8ycDdjUE11WjNsVk5qakw3NWNxRlM5RXNOdVd0dXgzUGNERVBZNjZtR0sxZmRyCkRKTzNGZDd2TGhLVFlLVEQyM0JEWnRwVVNQdUlneUMvTHg5NlBDR0hFNzF2RFN0WGw5R0lpd2pYMmd5SjZGQysKZGFKdFQ2cHJJVlJRSUVnZ1BYakdxY0w4K2UreXVoY0VoMzJXQjhuVloramllNTA0RkIvNDNGT1V5SlVSRU5rTwpSWXdYSWEzbDlSOGJCcytXNUczN0ZiemVOV1p4akZEbTVoVjJXOHljSElwYnhvZnRvTnBZaUJJRWhmTHdDRmxxCkFyTGpuWTdVUHcwRGI3OTlJTFg0eERHMlZZak55aEVVaDNsTkgzNGRhU2puekxsNzQxTnN0dHBjbDEyVG4xTUgKS1U5TzZSWHFHUXBjcW0zOGhWUHlwVVZoSkF4dXN5Yml2WGxGMEJldGdZTkF3VEtNVjV5NGFoZ1h5STFOM3FHZQpsMHZLUS9POVIvY3QvL3p3ZGZSSExBSDNWWHlGdDJMNnRYZ21yRGlsRHlMek4xTEswZFZTV1pZeVZ2dzZnR2QxCk4yUDR6VkQ2cGlISGkxZ2tjQjZHVGtTSUZYak5VMjV2MFBSMXJEY1drRDRvclZDWS9UWlcrUjloSDZFQ0F3RUEKQVFLQ0FnQTFCRTNMQlhERUhsam5QekRWNHFjMTl5cXVNeDlSZHFrOGFYUFlEVTBJRjBlSE9LdzdqdDJTNjZHcgpsb28zd25hTnBxcW5VaFh1QnpLMm5xR0g0ejNSNmU2Y0dMWUhBZTdkREx4dWhaVUhhOFVzNGtIdFZyZlV0VEJyClRCbXpHa2dmTTMzSXNzdnZnU09lMXpFdWNpRkhHNy9PbGJhcGFtV0EwemVWNHhIVEZqMTdxWElGMVRJMzRiUG4KZ3NtL1Q1MlQ5cDl3WURLLzBvOStMdWgzbFcreXl0NFpXTVpNcFpBSjFtN3ZmMnM4cUlVeGE1RnRYZHhLZlZ3YQpGazNRQSt3VkxPUWx1c0NTeThaNWtMZk5ZelEvVTlZQ1VGelJNMmg4eHNlVXNoaUUrR21yWFZGdXRTSEtKbnF5CkR1OXJKODM4aXNVb1JFckV1Q0NLK1hmeGxNaVNiR0xkWHNXYnlrd2laVnF2VkhDOTUycEVGUUdhUEgwZ2YrNWcKRjNtWmwwWDVRZ0hSYkZhdUlFTFBEUHdoM2RvUGlPcWN1bjNqdHJOa0orczRXTUZRSFptQ0tJc1NtK2tIc0tCaApwZjZwdng3Sm1xSVN0L25zbjRObE9yakVvaEZMK3E4ZGd4R08yOTVtUnB2RWs1R0NPQ0hQczVwQU1zbHNpbXVECmtwMGhNYXdLUzhMT25JVG9qRlpDVUIwZlRWZVZ2UHdKY1hHTU5XdVFkR0hUQVRKSFRiU3pxYTZ6Q0NNbG93dmkKUWtoU3VtS1ZwYmNJYW9pcFJEWFBxekFEb1F5Vm51ekU3d29tZHc3N1ZPRXhCTTVtN2NzQXBiNStHWDNFR3pSZQpyaHd4TzA5YktxOEVNYm4zT2RZVUdrVUJuaGFuTmZwMUNuS0NENTk1N1JqS09jYjlXUUtDQVFFQTBWSS8vb2JqCm9UNXRzdVNNcE5QNjhQdHJwSkxXUUxpSW1YSVQ4ZnErUjQrRERlZ1pNTHUzVnBzSGhGWW9OOExyZ1hSNGtad0YKSDBWNDBSZ0xXOVlOSjhKUHB6L3U0dlU2Tm45ZHpSTnNpRFN6TXlNcjhHR2NWb3dqbDh5eWdGbEtkaTVyU2JRNgpQQ1NZTFdBOG13TDRwekgyR0FyY3FHdkV2STBsUTFiT1BuQUtLRkxCS3RBTVltVmtGM0FYTGZGMVBVYXVhU3gzClZQOXNkUGZJUHpzQkZCK3BLQnZ4Nk5PeE1EY1dnZUYzSXlxSG5qU245aHg3eDd3dUxsTVB0RXhOVnFzV0JiTkwKanR2clJCTHVMVW82SjYxY2lCVXFJWHdvSHBVbWRPTy9vbG4xQVRXOGtEL1I3bWZZd2QwSk10NTYxVHdtWnhTZgp5QU9OS00ydzA5N2c4d0tDQVFFQThDajIvVVNjTG5ENVA5WVBLczFpdUFUdGFXbE5kMnQ5UWJtejVKMjFBRXR1ClZzeUk0dkU4YTZzZnlRU2VsZ2JRTEs3SFNYajVaR01oZWtIbXRMWHdkaFVLMFF6elk2Z1VGK09sM2V6eTlQUDcKSWs2c2dvdFJVcW8zTHN4bUU0UmVYUDJhQ2V6TGdLYUU2NEtGVDQyZkp0UG5leU5keTlERzhkdGdGWnFZaFZzcwpqWjIzSlh1VHlINmk2WnQxVThRZTFMUld4UlF0aGRHV0hMSGF4M1ArVHRpMkNJbWIvOFJKQUk3VGgwS1EyeFhTCjVuUjJwN0RIb3lZLzlBdG9oVFBqMmpkREtraklXOVFEWEc1cDU3YldlN0JTQStmRC9qcGJvR2ZZSUhwY2RQNXgKbUFmNzZ6cnBEemx3WGlQSU5BOFdIWFBSdk0rR01qNk1YNDk4RGN5Q0d3S0NBUUJINmk0NlVEV2NqRW84RC9HUwpINUl6Z08yMm1Rd3JLRHNtSE45bFgzUklPYklZOFFqV2lXZXZ4WXVMbDk0eGFqSm5RNUM0MWhXY2JNM1phSjFlCmErZ1JKTjBnNVFJNXoyNjBrb1d6azF6U1h1akNSTzh2b3htSFVwWlg3T2ZXMk5hUVM5cG9kQmNkMnFTOTBqYUEKTzBFYWtEdXdmdXJZb2szeFNiem5xY2NxQkd3NDlsV1BVL010U3hCY1RSSnBvbTlaSWhPQjV0a0l4c2lJVnlqaApNSEJxYllZOFZYMkRORmZIN09VNnNpK3dVVWhPdm1DR1dicmRJSFh0VEhRMHlaSTRtSWIwWm1rcko3dG9vK2hZCmZ3d0QzYmZRdVJURWRGZUVTbEh3RHQ4ajlDd013bDJLWWFMS2Vic3F2N29OVkFwM2dEYmhhMkNKNDA1NEdsTUsKTjZTcEFvSUJBRUtwTEQyS29NdG5RbGdNdzdMK3hXc011eFZxVEQxY2thei9yY1pFWEN4VHc3SEdIaXpZQnd4Zgp1SGZrbDF4UFVkTkZSRDNKblhmVzZFRDJMK0p6S2VhczJvN0NTSUNkODgzWnUzMkpPcnJ4U2dEdzA0Tjh4anJxCjBseGtFZVZTOVpwY0xqaVpDTGVTQVEwWjhvVHRhNEtzaVBFdUZPZnc4SGZMaTdVVGIwaDgwVFlSMC9kTWdPM0MKOE5kazlrRWxDK1hBbE9FcFE2V0VVbVZ1bktxR01NMlQ2NXNkRHpjRU5iczQ2Yy8ra3hTc3p4aDJ0VVRBbGZsYwpNWjQ4MkdzNHh3TVlHY1dQNUVWUTZRbnIvK3Q0WGJxQmE1SjM3M2dPbk1ZK2JNZy9EcERPMjVyMmhGOTd2NXNoCk4yWjZDaVVoRnVOZjlaU3lDYTdDbTlZZWpyR0oxWWNDZ2dFQkFKcXlPbC9hR2EwbXlteE9pY0pXMkFsWnkzRjkKWWJyNXViOTRFMWVvZ2lrVEprZkZDOHE2ZmUyUjYycnlVSmE4WERqNW9lMmo2SWNQUEU5ZzR6TVg0MFg3VTU2bQp2MzBWWHgwQTUvS2NENG1WekVwb2RUQVR6bm95eVRtY2hIRWs5VVF5TzNXd2w1Nnhyc1AraW0zMVlVVVVKRldpClM5WXpsUFFLY2RzODRscWNjK0I2OHVYaldxOHR5V29oRFcxTUZVamY1SFhzRGJQUkVOQTdMOUNYWVowN25oWU0KS2pTYWxyZHgwaXJocFdJMkdhZzhCZjFtT1hYaGUxSFBMajdqMlQxZHVlZ0ltMzNNU2VUK0M2bkJ0dTZvb2FsUQo4ZE1UK3Axdm9HNmFyRVNpeDdaNGkvWnVJYTFJeXQ0d0RmQmgwM0tEK2xYbDU2Z3krMlhsQThXajlpYz0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K"
                },
                "os": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEJtZXVha3B3aFlIOHNWU1NtVHJJdlpNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5EQTVNVFV3TVRReE1qbGFGdzB6TkRBNU1UTXdNVFF4TWpsYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBVTdHUi83d3k2TWhvUmxCYmF2OUwrNWJ5MkVVTEVSeFBuNVBWCnBaTlFQRUtqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVNUV3K0o4d21XZk1PTkNRZgpib21NdXV6dEtRZ3dCUVlESzJWd0EwRUFkT3FNT3UwdkJSbENHaXo3cVZqL1NnaTFSN1p2T3hLOU9xZFhwQjhlCjkyM1o0SHZ0cGx1a2hMVEcxYUY2cjJHcE5aNDh6WlVkcHVvT213a25YRXBqQ3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                  "key": "LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJQWRmUWxRNnhXRDYzMWhpMm9TZ2FpVU5HSzlmU29sRXI3ZDRKbjJtQXA0NQotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K"
                }
              },
              "cluster": {
                "id": "8slduxY_GAi_6kXZVBT1HimFxw7qI8ZI8rscA9QEsa8=",
                "secret": "jB9mqchMnYCyAOcV0MM6RY+2S3qPgGgqpzd7gg6Br4o="
              },
              "secrets": {
                "aescbc_encryption_secret": null,
                "bootstrap_token": "uionez.ajblvmwkqhy7fre4",
                "secretbox_encryption_secret": "4N5U1/Bhntbei1Sz0lyh3SmYW00G+KamspvrAtyOw5s="
              },
              "trustdinfo": {
                "token": "rpuf27.nts20g6mps3x2vqa"
              }
            },
            "machine_type": "worker",
            "talos_version": "v1.7"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "cluster"
              },
              {
                "type": "get_attr",
                "value": "secret"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "secrets"
              },
              {
                "type": "get_attr",
                "value": "bootstrap_token"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "secrets"
              },
              {
                "type": "get_attr",
                "value": "secretbox_encryption_secret"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "secrets"
              },
              {
                "type": "get_attr",
                "value": "aescbc_encryption_secret"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "trustdinfo"
              },
              {
                "type": "get_attr",
                "value": "token"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "certs"
              },
              {
                "type": "get_attr",
                "value": "os"
              },
              {
                "type": "get_attr",
                "value": "key"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "certs"
              },
              {
                "type": "get_attr",
                "value": "etcd"
              },
              {
                "type": "get_attr",
                "value": "key"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "certs"
              },
              {
                "type": "get_attr",
                "value": "k8s"
              },
              {
                "type": "get_attr",
                "value": "key"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "certs"
              },
              {
                "type": "get_attr",
                "value": "k8s_aggregator"
              },
              {
                "type": "get_attr",
                "value": "key"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "certs"
              },
              {
                "type": "get_attr",
                "value": "k8s_serviceaccount"
              },
              {
                "type": "get_attr",
                "value": "key"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_configuration"
              }
            ]
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "proxmox_virtual_environment_download_file",
      "name": "talos_nocloud_image",
      "provider": "provider[\"registry.terraform.io/bpg/proxmox\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "checksum": null,
            "checksum_algorithm": null,
            "content_type": "iso",
            "datastore_id": "iso-template",
            "decompression_algorithm": "gz",
            "file_name": "talos-v1.7.6-nocloud-amd64.img",
            "id": "iso-template:iso/talos-v1.7.6-nocloud-amd64.img",
            "node_name": "pve",
            "overwrite": false,
            "overwrite_unmanaged": false,
            "size": 1306525696,
            "upload_timeout": 600,
            "url": "https://factory.talos.dev/image/ce4c980550dd2ab1b17bbf2b08801c7eb59418eafe8f279833297925d67c7515/v1.7.6/nocloud-amd64.raw.gz",
            "verify": true
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "proxmox_virtual_environment_vm",
      "name": "talos_cp_01",
      "provider": "provider[\"registry.terraform.io/bpg/proxmox\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acpi": true,
            "agent": [
              {
                "enabled": true,
                "timeout": "15m",
                "trim": false,
                "type": "virtio"
              }
            ],
            "audio_device": [],
            "bios": "seabios",
            "boot_order": null,
            "cdrom": [],
            "clone": [],
            "cpu": [
              {
                "affinity": "",
                "architecture": "x86_64",
                "cores": 2,
                "flags": null,
                "hotplugged": 0,
                "limit": 0,
                "numa": false,
                "sockets": 1,
                "type": "x86-64-v2-AES",
                "units": 1024
              }
            ],
            "description": "Managed by Terraform",
            "disk": [
              {
                "aio": "io_uring",
                "backup": true,
                "cache": "none",
                "datastore_id": "pve-ceph-storage",
                "discard": "ignore",
                "file_format": "raw",
                "file_id": "iso-template:iso/talos-v1.7.6-nocloud-amd64.img",
                "interface": "virtio0",
                "iothread": false,
                "path_in_datastore": "vm-112-disk-0",
                "replicate": true,
                "serial": "",
                "size": 20,
                "speed": [],
                "ssd": false
              }
            ],
            "efi_disk": [],
            "hook_script_file_id": null,
            "hostpci": [],
            "id": "112",
            "initialization": [
              {
                "datastore_id": "pve-ceph-storage",
                "dns": [],
                "interface": "ide2",
                "ip_config": [
                  {
                    "ipv4": [
                      {
                        "address": "10.0.0.70/24",
                        "gateway": "10.0.0.1"
                      }
                    ],
                    "ipv6": [
                      {
                        "address": "dhcp",
                        "gateway": ""
                      }
                    ]
                  }
                ],
                "meta_data_file_id": "",
                "network_data_file_id": "",
                "type": "",
                "upgrade": false,
                "user_account": [],
                "user_data_file_id": "",
                "vendor_data_file_id": ""
              }
            ],
            "ipv4_addresses": [
              [
                "127.0.0.1"
              ],
              [],
              [],
              [],
              [],
              [],
              [],
              [
                "10.0.0.70"
              ]
            ],
            "ipv6_addresses": [
              [
                "::1"
              ],
              [],
              [],
              [],
              [],
              [],
              [],
              [
                "2601:681:c80:5bf1:be24:11ff:feea:83b3",
                "fe80::be24:11ff:feea:83b3"
              ]
            ],
            "keyboard_layout": "en-us",
            "kvm_arguments": "",
            "mac_addresses": [
              "00:00:00:00:00:00",
              "4E:10:3B:BD:C1:4F",
              "2E:F8:7B:92:BC:DA",
              "00:00:00:00:00:00",
              "00:00:00:00:00:00",
              "00:00:00:00:00:00",
              "00:00:00:00:00:00",
              "BC:24:11:EA:83:B3"
            ],
            "machine": "",
            "memory": [
              {
                "dedicated": 4096,
                "floating": 0,
                "hugepages": "",
                "keep_hugepages": false,
                "shared": 0
              }
            ],
            "migrate": false,
            "name": "talos-cp-01",
            "network_device": [
              {
                "bridge": "vmbr0",
                "disconnected": false,
                "enabled": true,
                "firewall": false,
                "mac_address": "BC:24:11:EA:83:B3",
                "model": "virtio",
                "mtu": 0,
                "queues": 0,
                "rate_limit": 0,
                "trunks": "",
                "vlan_id": 0
              }
            ],
            "network_interface_names": [
              "lo",
              "bond0",
              "dummy0",
              "teql0",
              "tunl0",
              "sit0",
              "ip6tnl0",
              "eth0"
            ],
            "node_name": "pve",
            "numa": [],
            "on_boot": true,
            "operating_system": [
              {
                "type": "l26"
              }
            ],
            "pool_id": null,
            "protection": false,
            "reboot": false,
            "scsi_hardware": "virtio-scsi-pci",
            "serial_device": [],
            "smbios": [],
            "started": true,
            "startup": [],
            "stop_on_destroy": false,
            "tablet_device": true,
            "tags": [
              "terraform"
            ],
            "template": false,
            "timeout_clone": 1800,
            "timeout_create": 1800,
            "timeout_migrate": 1800,
            "timeout_move_disk": 1800,
            "timeout_reboot": 1800,
            "timeout_shutdown_vm": 1800,
            "timeout_start_vm": 1800,
            "timeout_stop_vm": 300,
            "tpm_state": [],
            "usb": [],
            "vga": [],
            "vm_id": 112
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "proxmox_virtual_environment_download_file.talos_nocloud_image"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "proxmox_virtual_environment_vm",
      "name": "talos_cp_02",
      "provider": "provider[\"registry.terraform.io/bpg/proxmox\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acpi": true,
            "agent": [
              {
                "enabled": true,
                "timeout": "15m",
                "trim": false,
                "type": "virtio"
              }
            ],
            "audio_device": [],
            "bios": "seabios",
            "boot_order": null,
            "cdrom": [],
            "clone": [],
            "cpu": [
              {
                "affinity": "",
                "architecture": "x86_64",
                "cores": 2,
                "flags": null,
                "hotplugged": 0,
                "limit": 0,
                "numa": false,
                "sockets": 1,
                "type": "x86-64-v2-AES",
                "units": 1024
              }
            ],
            "description": "Managed by Terraform",
            "disk": [
              {
                "aio": "io_uring",
                "backup": true,
                "cache": "none",
                "datastore_id": "pve-ceph-storage",
                "discard": "ignore",
                "file_format": "raw",
                "file_id": "iso-template:iso/talos-v1.7.6-nocloud-amd64.img",
                "interface": "virtio0",
                "iothread": false,
                "path_in_datastore": "vm-107-disk-0",
                "replicate": true,
                "serial": "",
                "size": 20,
                "speed": [],
                "ssd": false
              }
            ],
            "efi_disk": [],
            "hook_script_file_id": null,
            "hostpci": [],
            "id": "107",
            "initialization": [
              {
                "datastore_id": "pve-ceph-storage",
                "dns": [],
                "interface": "ide2",
                "ip_config": [
                  {
                    "ipv4": [
                      {
                        "address": "10.0.0.71/24",
                        "gateway": "10.0.0.1"
                      }
                    ],
                    "ipv6": [
                      {
                        "address": "dhcp",
                        "gateway": ""
                      }
                    ]
                  }
                ],
                "meta_data_file_id": "",
                "network_data_file_id": "",
                "type": "",
                "upgrade": false,
                "user_account": [],
                "user_data_file_id": "",
                "vendor_data_file_id": ""
              }
            ],
            "ipv4_addresses": [
              [
                "127.0.0.1"
              ],
              [],
              [],
              [],
              [],
              [],
              [],
              [
                "10.0.0.71"
              ]
            ],
            "ipv6_addresses": [
              [
                "::1"
              ],
              [],
              [],
              [],
              [],
              [],
              [],
              [
                "2601:681:c80:5bf1:be24:11ff:feb6:ed2d",
                "fe80::be24:11ff:feb6:ed2d"
              ]
            ],
            "keyboard_layout": "en-us",
            "kvm_arguments": "",
            "mac_addresses": [
              "00:00:00:00:00:00",
              "A2:21:D2:FD:73:26",
              "2E:6F:28:96:89:92",
              "00:00:00:00:00:00",
              "00:00:00:00:00:00",
              "00:00:00:00:00:00",
              "00:00:00:00:00:00",
              "BC:24:11:B6:ED:2D"
            ],
            "machine": "",
            "memory": [
              {
                "dedicated": 4096,
                "floating": 0,
                "hugepages": "",
                "keep_hugepages": false,
                "shared": 0
              }
            ],
            "migrate": false,
            "name": "talos-cp-02",
            "network_device": [
              {
                "bridge": "vmbr0",
                "disconnected": false,
                "enabled": true,
                "firewall": false,
                "mac_address": "BC:24:11:B6:ED:2D",
                "model": "virtio",
                "mtu": 0,
                "queues": 0,
                "rate_limit": 0,
                "trunks": "",
                "vlan_id": 0
              }
            ],
            "network_interface_names": [
              "lo",
              "bond0",
              "dummy0",
              "teql0",
              "tunl0",
              "sit0",
              "ip6tnl0",
              "eth0"
            ],
            "node_name": "pve2",
            "numa": [],
            "on_boot": true,
            "operating_system": [
              {
                "type": "l26"
              }
            ],
            "pool_id": null,
            "protection": false,
            "reboot": false,
            "scsi_hardware": "virtio-scsi-pci",
            "serial_device": [],
            "smbios": [],
            "started": true,
            "startup": [],
            "stop_on_destroy": false,
            "tablet_device": true,
            "tags": [
              "terraform"
            ],
            "template": false,
            "timeout_clone": 1800,
            "timeout_create": 1800,
            "timeout_migrate": 1800,
            "timeout_move_disk": 1800,
            "timeout_reboot": 1800,
            "timeout_shutdown_vm": 1800,
            "timeout_start_vm": 1800,
            "timeout_stop_vm": 300,
            "tpm_state": [],
            "usb": [],
            "vga": [],
            "vm_id": 107
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "proxmox_virtual_environment_download_file.talos_nocloud_image"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "proxmox_virtual_environment_vm",
      "name": "talos_cp_03",
      "provider": "provider[\"registry.terraform.io/bpg/proxmox\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acpi": true,
            "agent": [
              {
                "enabled": true,
                "timeout": "15m",
                "trim": false,
                "type": "virtio"
              }
            ],
            "audio_device": [],
            "bios": "seabios",
            "boot_order": null,
            "cdrom": [],
            "clone": [],
            "cpu": [
              {
                "affinity": "",
                "architecture": "x86_64",
                "cores": 2,
                "flags": null,
                "hotplugged": 0,
                "limit": 0,
                "numa": false,
                "sockets": 1,
                "type": "x86-64-v2-AES",
                "units": 1024
              }
            ],
            "description": "Managed by Terraform",
            "disk": [
              {
                "aio": "io_uring",
                "backup": true,
                "cache": "none",
                "datastore_id": "pve-ceph-storage",
                "discard": "ignore",
                "file_format": "raw",
                "file_id": "iso-template:iso/talos-v1.7.6-nocloud-amd64.img",
                "interface": "virtio0",
                "iothread": false,
                "path_in_datastore": "vm-108-disk-0",
                "replicate": true,
                "serial": "",
                "size": 20,
                "speed": [],
                "ssd": false
              }
            ],
            "efi_disk": [],
            "hook_script_file_id": null,
            "hostpci": [],
            "id": "108",
            "initialization": [
              {
                "datastore_id": "pve-ceph-storage",
                "dns": [],
                "interface": "ide2",
                "ip_config": [
                  {
                    "ipv4": [
                      {
                        "address": "10.0.0.72/24",
                        "gateway": "10.0.0.1"
                      }
                    ],
                    "ipv6": [
                      {
                        "address": "dhcp",
                        "gateway": ""
                      }
                    ]
                  }
                ],
                "meta_data_file_id": "",
                "network_data_file_id": "",
                "type": "",
                "upgrade": false,
                "user_account": [],
                "user_data_file_id": "",
                "vendor_data_file_id": ""
              }
            ],
            "ipv4_addresses": [
              [
                "127.0.0.1"
              ],
              [],
              [],
              [],
              [],
              [],
              [],
              [
                "10.0.0.72"
              ]
            ],
            "ipv6_addresses": [
              [
                "::1"
              ],
              [],
              [],
              [],
              [],
              [],
              [],
              [
                "2601:681:c80:5bf1:be24:11ff:fec7:24c7",
                "fe80::be24:11ff:fec7:24c7"
              ]
            ],
            "keyboard_layout": "en-us",
            "kvm_arguments": "",
            "mac_addresses": [
              "00:00:00:00:00:00",
              "5E:B4:E3:1A:9A:F4",
              "32:C4:80:D7:C1:A2",
              "00:00:00:00:00:00",
              "00:00:00:00:00:00",
              "00:00:00:00:00:00",
              "00:00:00:00:00:00",
              "BC:24:11:C7:24:C7"
            ],
            "machine": "",
            "memory": [
              {
                "dedicated": 4096,
                "floating": 0,
                "hugepages": "",
                "keep_hugepages": false,
                "shared": 0
              }
            ],
            "migrate": false,
            "name": "talos-cp-03",
            "network_device": [
              {
                "bridge": "vmbr0",
                "disconnected": false,
                "enabled": true,
                "firewall": false,
                "mac_address": "BC:24:11:C7:24:C7",
                "model": "virtio",
                "mtu": 0,
                "queues": 0,
                "rate_limit": 0,
                "trunks": "",
                "vlan_id": 0
              }
            ],
            "network_interface_names": [
              "lo",
              "bond0",
              "dummy0",
              "teql0",
              "tunl0",
              "sit0",
              "ip6tnl0",
              "eth0"
            ],
            "node_name": "pve3",
            "numa": [],
            "on_boot": true,
            "operating_system": [
              {
                "type": "l26"
              }
            ],
            "pool_id": null,
            "protection": false,
            "reboot": false,
            "scsi_hardware": "virtio-scsi-pci",
            "serial_device": [],
            "smbios": [],
            "started": true,
            "startup": [],
            "stop_on_destroy": false,
            "tablet_device": true,
            "tags": [
              "terraform"
            ],
            "template": false,
            "timeout_clone": 1800,
            "timeout_create": 1800,
            "timeout_migrate": 1800,
            "timeout_move_disk": 1800,
            "timeout_reboot": 1800,
            "timeout_shutdown_vm": 1800,
            "timeout_start_vm": 1800,
            "timeout_stop_vm": 300,
            "tpm_state": [],
            "usb": [],
            "vga": [],
            "vm_id": 108
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "proxmox_virtual_environment_download_file.talos_nocloud_image"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "proxmox_virtual_environment_vm",
      "name": "talos_worker_01",
      "provider": "provider[\"registry.terraform.io/bpg/proxmox\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acpi": true,
            "agent": [
              {
                "enabled": true,
                "timeout": "15m",
                "trim": false,
                "type": "virtio"
              }
            ],
            "audio_device": [],
            "bios": "seabios",
            "boot_order": null,
            "cdrom": [],
            "clone": [],
            "cpu": [
              {
                "affinity": "",
                "architecture": "x86_64",
                "cores": 4,
                "flags": null,
                "hotplugged": 0,
                "limit": 0,
                "numa": false,
                "sockets": 1,
                "type": "x86-64-v2-AES",
                "units": 1024
              }
            ],
            "description": "Managed by Terraform",
            "disk": [
              {
                "aio": "io_uring",
                "backup": true,
                "cache": "none",
                "datastore_id": "pve-ceph-storage",
                "discard": "ignore",
                "file_format": "raw",
                "file_id": "iso-template:iso/talos-v1.7.6-nocloud-amd64.img",
                "interface": "virtio0",
                "iothread": false,
                "path_in_datastore": "vm-114-disk-0",
                "replicate": true,
                "serial": "",
                "size": 20,
                "speed": [],
                "ssd": false
              }
            ],
            "efi_disk": [],
            "hook_script_file_id": null,
            "hostpci": [],
            "id": "114",
            "initialization": [
              {
                "datastore_id": "pve-ceph-storage",
                "dns": [],
                "interface": "ide2",
                "ip_config": [
                  {
                    "ipv4": [
                      {
                        "address": "10.0.0.73/24",
                        "gateway": "10.0.0.1"
                      }
                    ],
                    "ipv6": [
                      {
                        "address": "dhcp",
                        "gateway": ""
                      }
                    ]
                  }
                ],
                "meta_data_file_id": "",
                "network_data_file_id": "",
                "type": "",
                "upgrade": false,
                "user_account": [],
                "user_data_file_id": "",
                "vendor_data_file_id": ""
              }
            ],
            "ipv4_addresses": [
              [
                "127.0.0.1"
              ],
              [],
              [],
              [],
              [],
              [],
              [],
              [
                "10.0.0.73"
              ]
            ],
            "ipv6_addresses": [
              [
                "::1"
              ],
              [],
              [],
              [],
              [],
              [],
              [],
              [
                "2601:681:c80:5bf1:be24:11ff:fed9:9d43",
                "fe80::be24:11ff:fed9:9d43"
              ]
            ],
            "keyboard_layout": "en-us",
            "kvm_arguments": "",
            "mac_addresses": [
              "00:00:00:00:00:00",
              "8E:35:30:76:83:6D",
              "16:54:D0:D1:53:F7",
              "00:00:00:00:00:00",
              "00:00:00:00:00:00",
              "00:00:00:00:00:00",
              "00:00:00:00:00:00",
              "BC:24:11:D9:9D:43"
            ],
            "machine": "",
            "memory": [
              {
                "dedicated": 4096,
                "floating": 0,
                "hugepages": "",
                "keep_hugepages": false,
                "shared": 0
              }
            ],
            "migrate": false,
            "name": "talos-worker-01",
            "network_device": [
              {
                "bridge": "vmbr0",
                "disconnected": false,
                "enabled": true,
                "firewall": false,
                "mac_address": "BC:24:11:D9:9D:43",
                "model": "virtio",
                "mtu": 0,
                "queues": 0,
                "rate_limit": 0,
                "trunks": "",
                "vlan_id": 0
              }
            ],
            "network_interface_names": [
              "lo",
              "bond0",
              "dummy0",
              "teql0",
              "tunl0",
              "sit0",
              "ip6tnl0",
              "eth0"
            ],
            "node_name": "pve",
            "numa": [],
            "on_boot": true,
            "operating_system": [
              {
                "type": "l26"
              }
            ],
            "pool_id": null,
            "protection": false,
            "reboot": false,
            "scsi_hardware": "virtio-scsi-pci",
            "serial_device": [],
            "smbios": [],
            "started": true,
            "startup": [],
            "stop_on_destroy": false,
            "tablet_device": true,
            "tags": [
              "terraform"
            ],
            "template": false,
            "timeout_clone": 1800,
            "timeout_create": 1800,
            "timeout_migrate": 1800,
            "timeout_move_disk": 1800,
            "timeout_reboot": 1800,
            "timeout_shutdown_vm": 1800,
            "timeout_start_vm": 1800,
            "timeout_stop_vm": 300,
            "tpm_state": [],
            "usb": [],
            "vga": [],
            "vm_id": 114
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "proxmox_virtual_environment_download_file.talos_nocloud_image",
            "proxmox_virtual_environment_vm.talos_cp_01"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "proxmox_virtual_environment_vm",
      "name": "talos_worker_02",
      "provider": "provider[\"registry.terraform.io/bpg/proxmox\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acpi": true,
            "agent": [
              {
                "enabled": true,
                "timeout": "15m",
                "trim": false,
                "type": "virtio"
              }
            ],
            "audio_device": [],
            "bios": "seabios",
            "boot_order": null,
            "cdrom": [],
            "clone": [],
            "cpu": [
              {
                "affinity": "",
                "architecture": "x86_64",
                "cores": 4,
                "flags": null,
                "hotplugged": 0,
                "limit": 0,
                "numa": false,
                "sockets": 1,
                "type": "x86-64-v2-AES",
                "units": 1024
              }
            ],
            "description": "Managed by Terraform",
            "disk": [
              {
                "aio": "io_uring",
                "backup": true,
                "cache": "none",
                "datastore_id": "pve-ceph-storage",
                "discard": "ignore",
                "file_format": "raw",
                "file_id": "iso-template:iso/talos-v1.7.6-nocloud-amd64.img",
                "interface": "virtio0",
                "iothread": false,
                "path_in_datastore": "vm-115-disk-0",
                "replicate": true,
                "serial": "",
                "size": 20,
                "speed": [],
                "ssd": false
              }
            ],
            "efi_disk": [],
            "hook_script_file_id": null,
            "hostpci": [],
            "id": "115",
            "initialization": [
              {
                "datastore_id": "pve-ceph-storage",
                "dns": [],
                "interface": "ide2",
                "ip_config": [
                  {
                    "ipv4": [
                      {
                        "address": "10.0.0.74/24",
                        "gateway": "10.0.0.1"
                      }
                    ],
                    "ipv6": [
                      {
                        "address": "dhcp",
                        "gateway": ""
                      }
                    ]
                  }
                ],
                "meta_data_file_id": "",
                "network_data_file_id": "",
                "type": "",
                "upgrade": false,
                "user_account": [],
                "user_data_file_id": "",
                "vendor_data_file_id": ""
              }
            ],
            "ipv4_addresses": [
              [
                "127.0.0.1"
              ],
              [],
              [],
              [],
              [],
              [],
              [],
              [
                "10.0.0.74"
              ]
            ],
            "ipv6_addresses": [
              [
                "::1"
              ],
              [],
              [],
              [],
              [],
              [],
              [],
              [
                "2601:681:c80:5bf1:be24:11ff:fee9:dd1f",
                "fe80::be24:11ff:fee9:dd1f"
              ]
            ],
            "keyboard_layout": "en-us",
            "kvm_arguments": "",
            "mac_addresses": [
              "00:00:00:00:00:00",
              "0A:C3:E5:47:64:52",
              "0A:F0:BC:DC:FD:A8",
              "00:00:00:00:00:00",
              "00:00:00:00:00:00",
              "00:00:00:00:00:00",
              "00:00:00:00:00:00",
              "BC:24:11:E9:DD:1F"
            ],
            "machine": "",
            "memory": [
              {
                "dedicated": 4096,
                "floating": 0,
                "hugepages": "",
                "keep_hugepages": false,
                "shared": 0
              }
            ],
            "migrate": false,
            "name": "talos-worker-02",
            "network_device": [
              {
                "bridge": "vmbr0",
                "disconnected": false,
                "enabled": true,
                "firewall": false,
                "mac_address": "BC:24:11:E9:DD:1F",
                "model": "virtio",
                "mtu": 0,
                "queues": 0,
                "rate_limit": 0,
                "trunks": "",
                "vlan_id": 0
              }
            ],
            "network_interface_names": [
              "lo",
              "bond0",
              "dummy0",
              "teql0",
              "tunl0",
              "sit0",
              "ip6tnl0",
              "eth0"
            ],
            "node_name": "pve2",
            "numa": [],
            "on_boot": true,
            "operating_system": [
              {
                "type": "l26"
              }
            ],
            "pool_id": null,
            "protection": false,
            "reboot": false,
            "scsi_hardware": "virtio-scsi-pci",
            "serial_device": [],
            "smbios": [],
            "started": true,
            "startup": [],
            "stop_on_destroy": false,
            "tablet_device": true,
            "tags": [
              "terraform"
            ],
            "template": false,
            "timeout_clone": 1800,
            "timeout_create": 1800,
            "timeout_migrate": 1800,
            "timeout_move_disk": 1800,
            "timeout_reboot": 1800,
            "timeout_shutdown_vm": 1800,
            "timeout_start_vm": 1800,
            "timeout_stop_vm": 300,
            "tpm_state": [],
            "usb": [],
            "vga": [],
            "vm_id": 115
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "proxmox_virtual_environment_download_file.talos_nocloud_image",
            "proxmox_virtual_environment_vm.talos_cp_02"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "proxmox_virtual_environment_vm",
      "name": "talos_worker_03",
      "provider": "provider[\"registry.terraform.io/bpg/proxmox\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acpi": true,
            "agent": [
              {
                "enabled": true,
                "timeout": "15m",
                "trim": false,
                "type": "virtio"
              }
            ],
            "audio_device": [],
            "bios": "seabios",
            "boot_order": null,
            "cdrom": [],
            "clone": [],
            "cpu": [
              {
                "affinity": "",
                "architecture": "x86_64",
                "cores": 4,
                "flags": null,
                "hotplugged": 0,
                "limit": 0,
                "numa": false,
                "sockets": 1,
                "type": "x86-64-v2-AES",
                "units": 1024
              }
            ],
            "description": "Managed by Terraform",
            "disk": [
              {
                "aio": "io_uring",
                "backup": true,
                "cache": "none",
                "datastore_id": "pve-ceph-storage",
                "discard": "ignore",
                "file_format": "raw",
                "file_id": "iso-template:iso/talos-v1.7.6-nocloud-amd64.img",
                "interface": "virtio0",
                "iothread": false,
                "path_in_datastore": "vm-113-disk-0",
                "replicate": true,
                "serial": "",
                "size": 20,
                "speed": [],
                "ssd": false
              }
            ],
            "efi_disk": [],
            "hook_script_file_id": null,
            "hostpci": [],
            "id": "113",
            "initialization": [
              {
                "datastore_id": "pve-ceph-storage",
                "dns": [],
                "interface": "ide2",
                "ip_config": [
                  {
                    "ipv4": [
                      {
                        "address": "10.0.0.75/24",
                        "gateway": "10.0.0.1"
                      }
                    ],
                    "ipv6": [
                      {
                        "address": "dhcp",
                        "gateway": ""
                      }
                    ]
                  }
                ],
                "meta_data_file_id": "",
                "network_data_file_id": "",
                "type": "",
                "upgrade": false,
                "user_account": [],
                "user_data_file_id": "",
                "vendor_data_file_id": ""
              }
            ],
            "ipv4_addresses": [
              [
                "127.0.0.1"
              ],
              [],
              [],
              [],
              [],
              [],
              [],
              [
                "10.0.0.75"
              ]
            ],
            "ipv6_addresses": [
              [
                "::1"
              ],
              [],
              [],
              [],
              [],
              [],
              [],
              [
                "2601:681:c80:5bf1:be24:11ff:feeb:a805",
                "fe80::be24:11ff:feeb:a805"
              ]
            ],
            "keyboard_layout": "en-us",
            "kvm_arguments": "",
            "mac_addresses": [
              "00:00:00:00:00:00",
              "C6:CF:9E:D6:3F:36",
              "72:99:81:A4:DC:D1",
              "00:00:00:00:00:00",
              "00:00:00:00:00:00",
              "00:00:00:00:00:00",
              "00:00:00:00:00:00",
              "BC:24:11:EB:A8:05"
            ],
            "machine": "",
            "memory": [
              {
                "dedicated": 4096,
                "floating": 0,
                "hugepages": "",
                "keep_hugepages": false,
                "shared": 0
              }
            ],
            "migrate": false,
            "name": "talos-worker-03",
            "network_device": [
              {
                "bridge": "vmbr0",
                "disconnected": false,
                "enabled": true,
                "firewall": false,
                "mac_address": "BC:24:11:EB:A8:05",
                "model": "virtio",
                "mtu": 0,
                "queues": 0,
                "rate_limit": 0,
                "trunks": "",
                "vlan_id": 0
              }
            ],
            "network_interface_names": [
              "lo",
              "bond0",
              "dummy0",
              "teql0",
              "tunl0",
              "sit0",
              "ip6tnl0",
              "eth0"
            ],
            "node_name": "pve3",
            "numa": [],
            "on_boot": true,
            "operating_system": [
              {
                "type": "l26"
              }
            ],
            "pool_id": null,
            "protection": false,
            "reboot": false,
            "scsi_hardware": "virtio-scsi-pci",
            "serial_device": [],
            "smbios": [],
            "started": true,
            "startup": [],
            "stop_on_destroy": false,
            "tablet_device": true,
            "tags": [
              "terraform"
            ],
            "template": false,
            "timeout_clone": 1800,
            "timeout_create": 1800,
            "timeout_migrate": 1800,
            "timeout_move_disk": 1800,
            "timeout_reboot": 1800,
            "timeout_shutdown_vm": 1800,
            "timeout_start_vm": 1800,
            "timeout_stop_vm": 300,
            "tpm_state": [],
            "usb": [],
            "vga": [],
            "vm_id": 113
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "proxmox_virtual_environment_download_file.talos_nocloud_image",
            "proxmox_virtual_environment_vm.talos_cp_03"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "talos_machine_bootstrap",
      "name": "bootstrap",
      "provider": "provider[\"registry.terraform.io/siderolabs/talos\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "client_configuration": {
              "ca_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEJtZXVha3B3aFlIOHNWU1NtVHJJdlpNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5EQTVNVFV3TVRReE1qbGFGdzB6TkRBNU1UTXdNVFF4TWpsYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBVTdHUi83d3k2TWhvUmxCYmF2OUwrNWJ5MkVVTEVSeFBuNVBWCnBaTlFQRUtqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVNUV3K0o4d21XZk1PTkNRZgpib21NdXV6dEtRZ3dCUVlESzJWd0EwRUFkT3FNT3UwdkJSbENHaXo3cVZqL1NnaTFSN1p2T3hLOU9xZFhwQjhlCjkyM1o0SHZ0cGx1a2hMVEcxYUY2cjJHcE5aNDh6WlVkcHVvT213a25YRXBqQ3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
              "client_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJLRENCMjZBREFnRUNBaEFUSW5vM3ErWkR2eTlpcENoeFp3RFhNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5EQTVNVFV3TVRReE1qbGFGdzB5TlRBNU1UVXdNVFF4TWpsYU1CTXhFVEFQQmdOVgpCQW9UQ0c5ek9tRmtiV2x1TUNvd0JRWURLMlZ3QXlFQVFCVlpUVThKT2xrMllESklHSjREQ1NLdmtGZ2o3NXkrCnVXVjJZTHFqWXlTalNEQkdNQTRHQTFVZER3RUIvd1FFQXdJSGdEQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0QKQWpBZkJnTlZIU01FR0RBV2dCVGtURDRuekNaWjh3NDBKQjl1aVl5NjdPMHBDREFGQmdNclpYQURRUURmWjN3OQpsWFRTNE1CczlKeVJFTTRMNGE3dzZtSFNOTzAwL1huWktqclU2T2JHTmIxTzJjTy9Oc2FKOUtzU244OWkySDJ1CjZiTjZkZmE1bkhMUjYrRUQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
              "client_key": "LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJTWp2NDJ3Z1ZPYlFKemhyUG8zUFFkM1ZuQ1IyL0V3VHh4cFVnb3lSR1IyNQotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K"
            },
            "endpoint": "10.0.0.70",
            "id": "machine_bootstrap",
            "node": "10.0.0.70",
            "timeouts": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "client_configuration"
              },
              {
                "type": "get_attr",
                "value": "client_key"
              }
            ]
          ],
          "dependencies": [
            "data.talos_machine_configuration.machineconfig_cp",
            "proxmox_virtual_environment_download_file.talos_nocloud_image",
            "proxmox_virtual_environment_vm.talos_cp_01",
            "talos_machine_configuration_apply.cp_config_apply",
            "talos_machine_secrets.machine_secrets"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "talos_machine_configuration_apply",
      "name": "cp_config_apply",
      "provider": "provider[\"registry.terraform.io/siderolabs/talos\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "apply_mode": "auto",
            "client_configuration": {
              "ca_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEJtZXVha3B3aFlIOHNWU1NtVHJJdlpNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5EQTVNVFV3TVRReE1qbGFGdzB6TkRBNU1UTXdNVFF4TWpsYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBVTdHUi83d3k2TWhvUmxCYmF2OUwrNWJ5MkVVTEVSeFBuNVBWCnBaTlFQRUtqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVNUV3K0o4d21XZk1PTkNRZgpib21NdXV6dEtRZ3dCUVlESzJWd0EwRUFkT3FNT3UwdkJSbENHaXo3cVZqL1NnaTFSN1p2T3hLOU9xZFhwQjhlCjkyM1o0SHZ0cGx1a2hMVEcxYUY2cjJHcE5aNDh6WlVkcHVvT213a25YRXBqQ3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
              "client_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJLRENCMjZBREFnRUNBaEFUSW5vM3ErWkR2eTlpcENoeFp3RFhNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5EQTVNVFV3TVRReE1qbGFGdzB5TlRBNU1UVXdNVFF4TWpsYU1CTXhFVEFQQmdOVgpCQW9UQ0c5ek9tRmtiV2x1TUNvd0JRWURLMlZ3QXlFQVFCVlpUVThKT2xrMllESklHSjREQ1NLdmtGZ2o3NXkrCnVXVjJZTHFqWXlTalNEQkdNQTRHQTFVZER3RUIvd1FFQXdJSGdEQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0QKQWpBZkJnTlZIU01FR0RBV2dCVGtURDRuekNaWjh3NDBKQjl1aVl5NjdPMHBDREFGQmdNclpYQURRUURmWjN3OQpsWFRTNE1CczlKeVJFTTRMNGE3dzZtSFNOTzAwL1huWktqclU2T2JHTmIxTzJjTy9Oc2FKOUtzU244OWkySDJ1CjZiTjZkZmE1bkhMUjYrRUQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
              "client_key": "LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJTWp2NDJ3Z1ZPYlFKemhyUG8zUFFkM1ZuQ1IyL0V3VHh4cFVnb3lSR1IyNQotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K"
            },
            "config_patches": null,
            "endpoint": "10.0.0.70",
            "id": "machine_configuration_apply",
            "machine_configuration": "version: v1alpha1 # Indicates the schema used to decode the contents.\ndebug: false # Enable verbose logging to the console.\npersist: true\n# Provides machine specific configuration options.\nmachine:\n    type: controlplane # Defines the role of the machine within the cluster.\n    token: rpuf27.nts20g6mps3x2vqa # The `token` is used by a machine to join the PKI of the cluster.\n    # The root certificate authority of the PKI.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEJtZXVha3B3aFlIOHNWU1NtVHJJdlpNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5EQTVNVFV3TVRReE1qbGFGdzB6TkRBNU1UTXdNVFF4TWpsYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBVTdHUi83d3k2TWhvUmxCYmF2OUwrNWJ5MkVVTEVSeFBuNVBWCnBaTlFQRUtqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVNUV3K0o4d21XZk1PTkNRZgpib21NdXV6dEtRZ3dCUVlESzJWd0EwRUFkT3FNT3UwdkJSbENHaXo3cVZqL1NnaTFSN1p2T3hLOU9xZFhwQjhlCjkyM1o0SHZ0cGx1a2hMVEcxYUY2cjJHcE5aNDh6WlVkcHVvT213a25YRXBqQ3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJQWRmUWxRNnhXRDYzMWhpMm9TZ2FpVU5HSzlmU29sRXI3ZDRKbjJtQXA0NQotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K\n    # Extra certificate subject alternative names for the machine's certificate.\n    certSANs: []\n    #   # Uncomment this to enable SANs.\n    #   - 10.0.0.10\n    #   - 172.16.0.10\n    #   - 192.168.0.10\n\n    # Used to provide additional options to the kubelet.\n    kubelet:\n        image: ghcr.io/siderolabs/kubelet:v1.30.0 # The `image` field is an optional reference to an alternative kubelet image.\n        defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.\n        disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.\n        \n        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.\n        # clusterDNS:\n        #     - 10.96.0.10\n        #     - 169.254.2.53\n\n        # # The `extraArgs` field is used to provide additional flags to the kubelet.\n        # extraArgs:\n        #     key: value\n\n        # # The `extraMounts` field is used to add additional mounts to the kubelet container.\n        # extraMounts:\n        #     - destination: /var/lib/example # Destination is the absolute path where the mount will be placed in the container.\n        #       type: bind # Type specifies the mount kind.\n        #       source: /var/lib/example # Source specifies the source path of the mount.\n        #       # Options are fstab style mount options.\n        #       options:\n        #         - bind\n        #         - rshared\n        #         - rw\n\n        # # The `extraConfig` field is used to provide kubelet configuration overrides.\n        # extraConfig:\n        #     serverTLSBootstrap: true\n\n        # # The `KubeletCredentialProviderConfig` field is used to provide kubelet credential configuration.\n        # credentialProviderConfig:\n        #     apiVersion: kubelet.config.k8s.io/v1\n        #     kind: CredentialProviderConfig\n        #     providers:\n        #         - apiVersion: credentialprovider.kubelet.k8s.io/v1\n        #           defaultCacheDuration: 12h\n        #           matchImages:\n        #             - '*.dkr.ecr.*.amazonaws.com'\n        #             - '*.dkr.ecr.*.amazonaws.com.cn'\n        #             - '*.dkr.ecr-fips.*.amazonaws.com'\n        #             - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'\n        #             - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'\n        #           name: ecr-credential-provider\n\n        # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.\n        # nodeIP:\n        #     # The `validSubnets` field configures the networks to pick kubelet node IP from.\n        #     validSubnets:\n        #         - 10.0.0.0/8\n        #         - '!10.0.0.3/32'\n        #         - fdc7::/16\n    # Provides machine specific network configuration options.\n    network: {}\n    # # `interfaces` is used to define the network interface configuration.\n    # interfaces:\n    #     - interface: enp0s1 # The interface name.\n    #       # Assigns static IP addresses to the interface.\n    #       addresses:\n    #         - 192.168.2.0/24\n    #       # A list of routes associated with the interface.\n    #       routes:\n    #         - network: 0.0.0.0/0 # The route's network (destination).\n    #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).\n    #           metric: 1024 # The optional metric for the route.\n    #       mtu: 1500 # The interface's MTU.\n    #       \n    #       # # Picks a network device using the selector.\n\n    #       # # select a device with bus prefix 00:*.\n    #       # deviceSelector:\n    #       #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n    #       # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.\n    #       # deviceSelector:\n    #       #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.\n    #       #     driver: virtio # Kernel driver, supports matching by wildcard.\n    #       # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.\n    #       # deviceSelector:\n    #       #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n    #       #     - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.\n    #       #       driver: virtio # Kernel driver, supports matching by wildcard.\n\n    #       # # Bond specific options.\n    #       # bond:\n    #       #     # The interfaces that make up the bond.\n    #       #     interfaces:\n    #       #         - enp2s0\n    #       #         - enp2s1\n    #       #     # Picks a network device using the selector.\n    #       #     deviceSelectors:\n    #       #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n    #       #         - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.\n    #       #           driver: virtio # Kernel driver, supports matching by wildcard.\n    #       #     mode: 802.3ad # A bond option.\n    #       #     lacpRate: fast # A bond option.\n\n    #       # # Bridge specific options.\n    #       # bridge:\n    #       #     # The interfaces that make up the bridge.\n    #       #     interfaces:\n    #       #         - enxda4042ca9a51\n    #       #         - enxae2a6774c259\n    #       #     # A bridge option.\n    #       #     stp:\n    #       #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.\n\n    #       # # Indicates if DHCP should be used to configure the interface.\n    #       # dhcp: true\n\n    #       # # DHCP specific options.\n    #       # dhcpOptions:\n    #       #     routeMetric: 1024 # The priority of all routes received via DHCP.\n\n    #       # # Wireguard specific configuration.\n\n    #       # # wireguard server example\n    #       # wireguard:\n    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n    #       #     listenPort: 51111 # Specifies a device's listening port.\n    #       #     # Specifies a list of peer configurations to apply to a device.\n    #       #     peers:\n    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n    #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.\n    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n    #       #           allowedIPs:\n    #       #             - 192.168.1.0/24\n    #       # # wireguard peer example\n    #       # wireguard:\n    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n    #       #     # Specifies a list of peer configurations to apply to a device.\n    #       #     peers:\n    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n    #       #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.\n    #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.\n    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n    #       #           allowedIPs:\n    #       #             - 192.168.1.0/24\n\n    #       # # Virtual (shared) IP address configuration.\n\n    #       # # layer2 vip example\n    #       # vip:\n    #       #     ip: 172.16.199.55 # Specifies the IP address to be used.\n\n    # # Used to statically set the nameservers for the machine.\n    # nameservers:\n    #     - 8.8.8.8\n    #     - 1.1.1.1\n\n    # # Allows for extra entries to be added to the `/etc/hosts` file\n    # extraHostEntries:\n    #     - ip: 192.168.1.100 # The IP of the host.\n    #       # The host alias.\n    #       aliases:\n    #         - example\n    #         - example.domain.tld\n\n    # # Configures KubeSpan feature.\n    # kubespan:\n    #     enabled: true # Enable the KubeSpan feature.\n\n    # Used to provide instructions for installations.\n    install:\n        disk: /dev/sda # The disk used for installations.\n        image: ghcr.io/siderolabs/installer:v1.7.0 # Allows for supplying the image used to perform the installation.\n        wipe: false # Indicates if the installation disk should be wiped at installation time.\n        \n        # # Look up disk using disk attributes like model, size, serial and others.\n        # diskSelector:\n        #     size: 4GB # Disk size.\n        #     model: WDC* # Disk model `/sys/block/\u003cdev\u003e/device/model`.\n        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.\n\n        # # Allows for supplying extra kernel args via the bootloader.\n        # extraKernelArgs:\n        #     - talos.platform=metal\n        #     - reboot=k\n\n        # # Allows for supplying additional system extension images to install on top of base Talos image.\n        # extensions:\n        #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0 # System extension image.\n    # Used to configure the machine's container image registry mirrors.\n    registries: {}\n    # # Specifies mirror configuration for each registry host namespace.\n    # mirrors:\n    #     ghcr.io:\n    #         # List of endpoints (URLs) for registry mirrors to use.\n    #         endpoints:\n    #             - https://registry.insecure\n    #             - https://ghcr.io/v2/\n\n    # # Specifies TLS \u0026 auth configuration for HTTPS image registries.\n    # config:\n    #     registry.insecure:\n    #         # The TLS configuration for the registry.\n    #         tls:\n    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).\n    #             \n    #             # # Enable mutual TLS authentication with the registry.\n    #             # clientIdentity:\n    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t\n    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==\n    #         \n    #         # # The auth configuration for this registry.\n    #         # auth:\n    #         #     username: username # Optional registry authentication.\n    #         #     password: password # Optional registry authentication.\n\n    # Features describe individual Talos features that can be switched on or off.\n    features:\n        rbac: true # Enable role-based access control (RBAC).\n        stableHostname: true # Enable stable default hostname.\n        apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.\n        diskQuotaSupport: true # Enable XFS project quota support for EPHEMERAL partition and user disks.\n        # KubePrism - local proxy/load balancer on defined port that will distribute\n        kubePrism:\n            enabled: true # Enable KubePrism support - will start local load balancing proxy.\n            port: 7445 # KubePrism port.\n        # Configures host DNS caching resolver.\n        hostDNS:\n            enabled: true # Enable host DNS caching resolver.\n        \n        # # Configure Talos API access from Kubernetes pods.\n        # kubernetesTalosAPIAccess:\n        #     enabled: true # Enable Talos API access from Kubernetes pods.\n        #     # The list of Talos API roles which can be granted for access from Kubernetes pods.\n        #     allowedRoles:\n        #         - os:reader\n        #     # The list of Kubernetes namespaces Talos API access is available from.\n        #     allowedKubernetesNamespaces:\n        #         - kube-system\n    \n    # # Provides machine specific control plane configuration options.\n\n    # # ControlPlane definition example.\n    # controlPlane:\n    #     # Controller manager machine specific configuration options.\n    #     controllerManager:\n    #         disabled: false # Disable kube-controller-manager on the node.\n    #     # Scheduler machine specific configuration options.\n    #     scheduler:\n    #         disabled: true # Disable kube-scheduler on the node.\n\n    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.\n\n    # # nginx static pod.\n    # pods:\n    #     - apiVersion: v1\n    #       kind: pod\n    #       metadata:\n    #         name: nginx\n    #       spec:\n    #         containers:\n    #             - image: nginx\n    #               name: nginx\n\n    # # Used to partition, format and mount additional disks.\n\n    # # MachineDisks list example.\n    # disks:\n    #     - device: /dev/sdb # The name of the disk to use.\n    #       # A list of partitions to create on the disk.\n    #       partitions:\n    #         - mountpoint: /var/mnt/extra # Where to mount the partition.\n    #           \n    #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.\n\n    #           # # Human readable representation.\n    #           # size: 100 MB\n    #           # # Precise value in bytes.\n    #           # size: 1073741824\n\n    # # Allows the addition of user specified files.\n\n    # # MachineFiles usage example.\n    # files:\n    #     - content: '...' # The contents of the file.\n    #       permissions: 0o666 # The file's permissions in octal.\n    #       path: /tmp/file.txt # The path of the file.\n    #       op: append # The operation to use\n\n    # # The `env` field allows for the addition of environment variables.\n\n    # # Environment variables definition examples.\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: info\n    #     GRPC_GO_LOG_VERBOSITY_LEVEL: \"99\"\n    #     https_proxy: http://SERVER:PORT/\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: error\n    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/\n    # env:\n    #     https_proxy: http://DOMAIN\\USERNAME:PASSWORD@SERVER:PORT/\n\n    # # Used to configure the machine's time settings.\n\n    # # Example configuration for cloudflare ntp server.\n    # time:\n    #     disabled: false # Indicates if the time service is disabled for the machine.\n    #     # description: |\n    #     servers:\n    #         - time.cloudflare.com\n    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.\n\n    # # Used to configure the machine's sysctls.\n\n    # # MachineSysctls usage example.\n    # sysctls:\n    #     kernel.domainname: talos.dev\n    #     net.ipv4.ip_forward: \"0\"\n    #     net/ipv6/conf/eth0.100/disable_ipv6: \"1\"\n\n    # # Used to configure the machine's sysfs.\n\n    # # MachineSysfs usage example.\n    # sysfs:\n    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance\n\n    # # Machine system disk encryption configuration.\n    # systemDiskEncryption:\n    #     # Ephemeral partition encryption.\n    #     ephemeral:\n    #         provider: luks2 # Encryption provider to use for the encryption.\n    #         # Defines the encryption keys generation and storage method.\n    #         keys:\n    #             - # Deterministically generated key from the node UUID and PartitionLabel.\n    #               nodeID: {}\n    #               slot: 0 # Key slot number for LUKS2 encryption.\n    #               \n    #               # # KMS managed encryption key.\n    #               # kms:\n    #               #     endpoint: https://192.168.88.21:4443 # KMS endpoint to Seal/Unseal the key.\n    #         \n    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.\n    #         # cipher: aes-xts-plain64\n\n    #         # # Defines the encryption sector size.\n    #         # blockSize: 4096\n\n    #         # # Additional --perf parameters for the LUKS2 encryption.\n    #         # options:\n    #         #     - no_read_workqueue\n    #         #     - no_write_workqueue\n\n    # # Configures the udev system.\n    # udev:\n    #     # List of udev rules to apply to the udev system\n    #     rules:\n    #         - SUBSYSTEM==\"drm\", KERNEL==\"renderD*\", GROUP=\"44\", MODE=\"0660\"\n\n    # # Configures the logging system.\n    # logging:\n    #     # Logging destination.\n    #     destinations:\n    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are \"tcp\" and \"udp\".\n    #           format: json_lines # Logs format.\n\n    # # Configures the kernel.\n    # kernel:\n    #     # Kernel modules to load.\n    #     modules:\n    #         - name: brtfs # Module name.\n\n    # # Configures the seccomp profiles for the machine.\n    # seccompProfiles:\n    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.\n    #       # The `value` field is used to provide the seccomp profile.\n    #       value:\n    #         defaultAction: SCMP_ACT_LOG\n\n    # # Configures the node labels for the machine.\n\n    # # node labels example.\n    # nodeLabels:\n    #     exampleLabel: exampleLabelValue\n\n    # # Configures the node taints for the machine. Effect is optional.\n\n    # # node taints example.\n    # nodeTaints:\n    #     exampleTaint: exampleTaintValue:NoSchedule\n# Provides cluster specific configuration options.\ncluster:\n    id: 8slduxY_GAi_6kXZVBT1HimFxw7qI8ZI8rscA9QEsa8= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).\n    secret: jB9mqchMnYCyAOcV0MM6RY+2S3qPgGgqpzd7gg6Br4o= # Shared secret of cluster (base64 encoded random 32 bytes).\n    # Provides control plane specific configuration options.\n    controlPlane:\n        endpoint: https://10.0.0.70:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.\n    clusterName: kubernetes_cluster # Configures the cluster's name.\n    # Provides cluster specific network configuration options.\n    network:\n        dnsDomain: cluster.local # The domain used by Kubernetes DNS.\n        # The pod subnet CIDR.\n        podSubnets:\n            - 10.244.0.0/16\n        # The service subnet CIDR.\n        serviceSubnets:\n            - 10.96.0.0/12\n        \n        # # The CNI used.\n        # cni:\n        #     name: custom # Name of CNI to use.\n        #     # URLs containing manifests to apply for the CNI.\n        #     urls:\n        #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml\n    token: uionez.ajblvmwkqhy7fre4 # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.\n    secretboxEncryptionSecret: 4N5U1/Bhntbei1Sz0lyh3SmYW00G+KamspvrAtyOw5s= # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).\n    # The base64 encoded root certificate authority used by Kubernetes.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpakNDQVRDZ0F3SUJBZ0lSQUtJa3N3WXE4aFBjUDMwNElqV3RJQ013Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlOREE1TVRVd01UUXhNamxhRncwek5EQTVNVE13TVRReApNamxhTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVM2bXM5NmUyblUyZ3d0b2hZVWxsdUFtZ1JTUk9hdnUxS0F2WlpqNTFQTk5jSjhnKy96ekVFcTBlYWQKc2gyREhweWdwU1p1UDZVSlhkVXZKWElWOThXR28yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGQTRqK2ZWY0szOVhobkF0TmplZWRDUitVTDg2TUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUhWMi9xUmsKM3VMSld2ZG1ldnpMTGhQTmdQTWdZWTZ6TGVyaFozSkwvMHBYQWlFQTRKRXB6a245SjFkL1VsRVRSMXRCR2xSWQpMSENHbUlYS3BESmhpcHZhRVM4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU42NkxyTlhFaEdRaFdpaWlycEJXQzVqNWJPa1NxSjJnWDVxYnY1MzhOTlZvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFdXByUGVudHAxTm9NTGFJV0ZKWmJnSm9FVWtUbXI3dFNnTDJXWStkVHpUWENmSVB2ODh4QgpLdEhtbmJJZGd4NmNvS1VtYmorbENWM1ZMeVZ5RmZmRmhnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.\n    aggregatorCA:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJYekNDQVFXZ0F3SUJBZ0lRYzBMSkluSkJhVGNuWVhRWjhPUzNXVEFLQmdncWhrak9QUVFEQWpBQU1CNFgKRFRJME1Ea3hOVEF4TkRFeU9Wb1hEVE0wTURreE16QXhOREV5T1Zvd0FEQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5QXdFSEEwSUFCRml6Q0VubXg0N1ZnWTM0U0pKYlIxZloyNkNTWDQybVB5YmVsVVNCb1RuNW1NVWFTeEF3CmJKbTRCMmZmOHl0S2ZJMmEwcnN6a1lLL1BVdTcvYm84bE5HallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZApCZ05WSFE0RUZnUVVPTkZySFk2djFnSGlRdU10aVJzWnVFaTF0U3d3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUlnCktTanpPQkpWQndiVmtXdkErNHE3VzJ1Mjg5NUNDUmpkK0swWG5pcGNwZG9DSVFDc1BXejRmSmEveW0ybDhkcjkKR2RmdG5pNzg2MWRvVUJtQXRxcVRhOHB1cEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUZPKzk1Z3dWdVhzUXlWSHBOTU1HazNLdzZjUFNqakxjUW5yVkhad1lnbHNvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFV0xNSVNlYkhqdFdCamZoSWtsdEhWOW5ib0pKZmphWS9KdDZWUklHaE9mbVl4UnBMRURCcwptYmdIWjkvekswcDhqWnJTdXpPUmdyODlTN3Y5dWp5VTBRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n    # The base64 encoded private key for service account token generation.\n    serviceAccount:\n        key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBeEY2YXpMNGIyLzJHdU1uNkhOQXZIZ3FablMzeHAvSkQ3ZDNxcXE3b05KeGQyUTMzCjVySlNmcFhJZlIrMklUcVNYSjB2elh6ZzVTSnFneG5tZE9vQkR2VGQrS1B0SVNHdUdHcWZmSXJVaGUzV0t1QWYKdFZxQVBOYklNRlRNUjNqNHdpaExMZTR2TXhhV0xlOExLZ2padkRBaWFRRE1vQmRkYkp2TW4vK21DZ05PbHZsMApzSjNEQklxM3czSTY0dzN1Wm8ycDdjUE11WjNsVk5qakw3NWNxRlM5RXNOdVd0dXgzUGNERVBZNjZtR0sxZmRyCkRKTzNGZDd2TGhLVFlLVEQyM0JEWnRwVVNQdUlneUMvTHg5NlBDR0hFNzF2RFN0WGw5R0lpd2pYMmd5SjZGQysKZGFKdFQ2cHJJVlJRSUVnZ1BYakdxY0w4K2UreXVoY0VoMzJXQjhuVloramllNTA0RkIvNDNGT1V5SlVSRU5rTwpSWXdYSWEzbDlSOGJCcytXNUczN0ZiemVOV1p4akZEbTVoVjJXOHljSElwYnhvZnRvTnBZaUJJRWhmTHdDRmxxCkFyTGpuWTdVUHcwRGI3OTlJTFg0eERHMlZZak55aEVVaDNsTkgzNGRhU2puekxsNzQxTnN0dHBjbDEyVG4xTUgKS1U5TzZSWHFHUXBjcW0zOGhWUHlwVVZoSkF4dXN5Yml2WGxGMEJldGdZTkF3VEtNVjV5NGFoZ1h5STFOM3FHZQpsMHZLUS9POVIvY3QvL3p3ZGZSSExBSDNWWHlGdDJMNnRYZ21yRGlsRHlMek4xTEswZFZTV1pZeVZ2dzZnR2QxCk4yUDR6VkQ2cGlISGkxZ2tjQjZHVGtTSUZYak5VMjV2MFBSMXJEY1drRDRvclZDWS9UWlcrUjloSDZFQ0F3RUEKQVFLQ0FnQTFCRTNMQlhERUhsam5QekRWNHFjMTl5cXVNeDlSZHFrOGFYUFlEVTBJRjBlSE9LdzdqdDJTNjZHcgpsb28zd25hTnBxcW5VaFh1QnpLMm5xR0g0ejNSNmU2Y0dMWUhBZTdkREx4dWhaVUhhOFVzNGtIdFZyZlV0VEJyClRCbXpHa2dmTTMzSXNzdnZnU09lMXpFdWNpRkhHNy9PbGJhcGFtV0EwemVWNHhIVEZqMTdxWElGMVRJMzRiUG4KZ3NtL1Q1MlQ5cDl3WURLLzBvOStMdWgzbFcreXl0NFpXTVpNcFpBSjFtN3ZmMnM4cUlVeGE1RnRYZHhLZlZ3YQpGazNRQSt3VkxPUWx1c0NTeThaNWtMZk5ZelEvVTlZQ1VGelJNMmg4eHNlVXNoaUUrR21yWFZGdXRTSEtKbnF5CkR1OXJKODM4aXNVb1JFckV1Q0NLK1hmeGxNaVNiR0xkWHNXYnlrd2laVnF2VkhDOTUycEVGUUdhUEgwZ2YrNWcKRjNtWmwwWDVRZ0hSYkZhdUlFTFBEUHdoM2RvUGlPcWN1bjNqdHJOa0orczRXTUZRSFptQ0tJc1NtK2tIc0tCaApwZjZwdng3Sm1xSVN0L25zbjRObE9yakVvaEZMK3E4ZGd4R08yOTVtUnB2RWs1R0NPQ0hQczVwQU1zbHNpbXVECmtwMGhNYXdLUzhMT25JVG9qRlpDVUIwZlRWZVZ2UHdKY1hHTU5XdVFkR0hUQVRKSFRiU3pxYTZ6Q0NNbG93dmkKUWtoU3VtS1ZwYmNJYW9pcFJEWFBxekFEb1F5Vm51ekU3d29tZHc3N1ZPRXhCTTVtN2NzQXBiNStHWDNFR3pSZQpyaHd4TzA5YktxOEVNYm4zT2RZVUdrVUJuaGFuTmZwMUNuS0NENTk1N1JqS09jYjlXUUtDQVFFQTBWSS8vb2JqCm9UNXRzdVNNcE5QNjhQdHJwSkxXUUxpSW1YSVQ4ZnErUjQrRERlZ1pNTHUzVnBzSGhGWW9OOExyZ1hSNGtad0YKSDBWNDBSZ0xXOVlOSjhKUHB6L3U0dlU2Tm45ZHpSTnNpRFN6TXlNcjhHR2NWb3dqbDh5eWdGbEtkaTVyU2JRNgpQQ1NZTFdBOG13TDRwekgyR0FyY3FHdkV2STBsUTFiT1BuQUtLRkxCS3RBTVltVmtGM0FYTGZGMVBVYXVhU3gzClZQOXNkUGZJUHpzQkZCK3BLQnZ4Nk5PeE1EY1dnZUYzSXlxSG5qU245aHg3eDd3dUxsTVB0RXhOVnFzV0JiTkwKanR2clJCTHVMVW82SjYxY2lCVXFJWHdvSHBVbWRPTy9vbG4xQVRXOGtEL1I3bWZZd2QwSk10NTYxVHdtWnhTZgp5QU9OS00ydzA5N2c4d0tDQVFFQThDajIvVVNjTG5ENVA5WVBLczFpdUFUdGFXbE5kMnQ5UWJtejVKMjFBRXR1ClZzeUk0dkU4YTZzZnlRU2VsZ2JRTEs3SFNYajVaR01oZWtIbXRMWHdkaFVLMFF6elk2Z1VGK09sM2V6eTlQUDcKSWs2c2dvdFJVcW8zTHN4bUU0UmVYUDJhQ2V6TGdLYUU2NEtGVDQyZkp0UG5leU5keTlERzhkdGdGWnFZaFZzcwpqWjIzSlh1VHlINmk2WnQxVThRZTFMUld4UlF0aGRHV0hMSGF4M1ArVHRpMkNJbWIvOFJKQUk3VGgwS1EyeFhTCjVuUjJwN0RIb3lZLzlBdG9oVFBqMmpkREtraklXOVFEWEc1cDU3YldlN0JTQStmRC9qcGJvR2ZZSUhwY2RQNXgKbUFmNzZ6cnBEemx3WGlQSU5BOFdIWFBSdk0rR01qNk1YNDk4RGN5Q0d3S0NBUUJINmk0NlVEV2NqRW84RC9HUwpINUl6Z08yMm1Rd3JLRHNtSE45bFgzUklPYklZOFFqV2lXZXZ4WXVMbDk0eGFqSm5RNUM0MWhXY2JNM1phSjFlCmErZ1JKTjBnNVFJNXoyNjBrb1d6azF6U1h1akNSTzh2b3htSFVwWlg3T2ZXMk5hUVM5cG9kQmNkMnFTOTBqYUEKTzBFYWtEdXdmdXJZb2szeFNiem5xY2NxQkd3NDlsV1BVL010U3hCY1RSSnBvbTlaSWhPQjV0a0l4c2lJVnlqaApNSEJxYllZOFZYMkRORmZIN09VNnNpK3dVVWhPdm1DR1dicmRJSFh0VEhRMHlaSTRtSWIwWm1rcko3dG9vK2hZCmZ3d0QzYmZRdVJURWRGZUVTbEh3RHQ4ajlDd013bDJLWWFMS2Vic3F2N29OVkFwM2dEYmhhMkNKNDA1NEdsTUsKTjZTcEFvSUJBRUtwTEQyS29NdG5RbGdNdzdMK3hXc011eFZxVEQxY2thei9yY1pFWEN4VHc3SEdIaXpZQnd4Zgp1SGZrbDF4UFVkTkZSRDNKblhmVzZFRDJMK0p6S2VhczJvN0NTSUNkODgzWnUzMkpPcnJ4U2dEdzA0Tjh4anJxCjBseGtFZVZTOVpwY0xqaVpDTGVTQVEwWjhvVHRhNEtzaVBFdUZPZnc4SGZMaTdVVGIwaDgwVFlSMC9kTWdPM0MKOE5kazlrRWxDK1hBbE9FcFE2V0VVbVZ1bktxR01NMlQ2NXNkRHpjRU5iczQ2Yy8ra3hTc3p4aDJ0VVRBbGZsYwpNWjQ4MkdzNHh3TVlHY1dQNUVWUTZRbnIvK3Q0WGJxQmE1SjM3M2dPbk1ZK2JNZy9EcERPMjVyMmhGOTd2NXNoCk4yWjZDaVVoRnVOZjlaU3lDYTdDbTlZZWpyR0oxWWNDZ2dFQkFKcXlPbC9hR2EwbXlteE9pY0pXMkFsWnkzRjkKWWJyNXViOTRFMWVvZ2lrVEprZkZDOHE2ZmUyUjYycnlVSmE4WERqNW9lMmo2SWNQUEU5ZzR6TVg0MFg3VTU2bQp2MzBWWHgwQTUvS2NENG1WekVwb2RUQVR6bm95eVRtY2hIRWs5VVF5TzNXd2w1Nnhyc1AraW0zMVlVVVVKRldpClM5WXpsUFFLY2RzODRscWNjK0I2OHVYaldxOHR5V29oRFcxTUZVamY1SFhzRGJQUkVOQTdMOUNYWVowN25oWU0KS2pTYWxyZHgwaXJocFdJMkdhZzhCZjFtT1hYaGUxSFBMajdqMlQxZHVlZ0ltMzNNU2VUK0M2bkJ0dTZvb2FsUQo4ZE1UK3Axdm9HNmFyRVNpeDdaNGkvWnVJYTFJeXQ0d0RmQmgwM0tEK2xYbDU2Z3krMlhsQThXajlpYz0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K\n    # API server specific configuration options.\n    apiServer:\n        image: registry.k8s.io/kube-apiserver:v1.30.0 # The container image used in the API server manifest.\n        # Extra certificate subject alternative names for the API server's certificate.\n        certSANs:\n            - 10.0.0.70\n        disablePodSecurityPolicy: true # Disable PodSecurityPolicy in the API server and default manifests.\n        # Configure the API server admission plugins.\n        admissionControl:\n            - name: PodSecurity # Name is the name of the admission controller.\n              # Configuration is an embedded configuration object to be used as the plugin's\n              configuration:\n                apiVersion: pod-security.admission.config.k8s.io/v1alpha1\n                defaults:\n                    audit: restricted\n                    audit-version: latest\n                    enforce: baseline\n                    enforce-version: latest\n                    warn: restricted\n                    warn-version: latest\n                exemptions:\n                    namespaces:\n                        - kube-system\n                    runtimeClasses: []\n                    usernames: []\n                kind: PodSecurityConfiguration\n        # Configure the API server audit policy.\n        auditPolicy:\n            apiVersion: audit.k8s.io/v1\n            kind: Policy\n            rules:\n                - level: Metadata\n    # Controller manager server specific configuration options.\n    controllerManager:\n        image: registry.k8s.io/kube-controller-manager:v1.30.0 # The container image used in the controller manager manifest.\n    # Kube-proxy server-specific configuration options\n    proxy:\n        image: registry.k8s.io/kube-proxy:v1.30.0 # The container image used in the kube-proxy manifest.\n        \n        # # Disable kube-proxy deployment on cluster bootstrap.\n        # disabled: false\n    # Scheduler server specific configuration options.\n    scheduler:\n        image: registry.k8s.io/kube-scheduler:v1.30.0 # The container image used in the scheduler manifest.\n    # Configures cluster member discovery.\n    discovery:\n        enabled: true # Enable the cluster membership discovery feature.\n        # Configure registries used for cluster member discovery.\n        registries:\n            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information\n            kubernetes:\n                disabled: true # Disable Kubernetes discovery registry.\n            # Service registry is using an external service to push and pull information about cluster members.\n            service: {}\n            # # External service endpoint.\n            # endpoint: https://discovery.talos.dev/\n    # Etcd specific configuration options.\n    etcd:\n        # The `ca` is the root certificate authority of the PKI.\n        ca:\n            crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmakNDQVNTZ0F3SUJBZ0lSQUtrNUFQdlB4TzVITDhJT1RaZ25yK013Q2dZSUtvWkl6ajBFQXdJd0R6RU4KTUFzR0ExVUVDaE1FWlhSalpEQWVGdzB5TkRBNU1UVXdNVFF4TWpsYUZ3MHpOREE1TVRNd01UUXhNamxhTUE4eApEVEFMQmdOVkJBb1RCR1YwWTJRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFRV2IxYmxmUnhFCmZpSnZXeiszQnBmTlBhd1poZEFlSnpRVmQrMGgyb3ZtazFuU2wzdGhQNWQ4WnlsZE8yMUk0ZFdiMWtZZnhxSmgKdm5XVDY2VGN6N09XbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSApBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkdnc3NmNi81a2p5CmloaCs0MS80VFYwcFMxNkZNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJRmxWM0lQWHdkY0N6WTJITzdIeldKR04KaUxTcStRNU5kRFFtanM2ZXlya2ZBaUVBeWpkQTNjdWNTZ1o2L2RHdmRPTE9RcHQ0L3ZNWUdCTWtxL1JvQ1lmUApMck09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\n            key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUVKbzZWTFVGU1BwVWtySXg2THVadjdBWjk5U0JvQ2tiOHg4K3JGSDI1UGpvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFRm05VzVYMGNSSDRpYjFzL3R3YVh6VDJzR1lYUUhpYzBGWGZ0SWRxTDVwTlowcGQ3WVQrWApmR2NwWFR0dFNPSFZtOVpHSDhhaVliNTFrK3VrM00remxnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n        \n        # # The container image used to create the etcd service.\n        # image: gcr.io/etcd-development/etcd:v3.5.13\n\n        # # The `advertisedSubnets` field configures the networks to pick etcd advertised IP from.\n        # advertisedSubnets:\n        #     - 10.0.0.0/8\n    # A list of urls that point to additional manifests.\n    extraManifests: []\n    #   - https://www.example.com/manifest1.yaml\n    #   - https://www.example.com/manifest2.yaml\n\n    # A list of inline Kubernetes manifests.\n    inlineManifests: []\n    #   - name: namespace-ci # Name of the manifest.\n    #     contents: |- # Manifest contents as a string.\n    #       apiVersion: v1\n    #       kind: Namespace\n    #       metadata:\n    #       \tname: ci\n\n    \n    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).\n\n    # # Decryption secret example (do not use in production!).\n    # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=\n\n    # # Core DNS specific configuration options.\n    # coreDNS:\n    #     image: registry.k8s.io/coredns/coredns:v1.11.1 # The `image` field is an override to the default coredns image.\n\n    # # External cloud provider configuration.\n    # externalCloudProvider:\n    #     enabled: true # Enable external cloud provider.\n    #     # A list of urls that point to additional manifests for an external cloud provider.\n    #     manifests:\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml\n\n    # # A map of key value pairs that will be added while fetching the extraManifests.\n    # extraManifestHeaders:\n    #     Token: \"1234567\"\n    #     X-ExtraInfo: info\n\n    # # Settings for admin kubeconfig generation.\n    # adminKubeconfig:\n    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).\n\n    # # Allows running workload on control-plane nodes.\n    # allowSchedulingOnControlPlanes: true\n",
            "machine_configuration_input": "version: v1alpha1 # Indicates the schema used to decode the contents.\ndebug: false # Enable verbose logging to the console.\npersist: true\n# Provides machine specific configuration options.\nmachine:\n    type: controlplane # Defines the role of the machine within the cluster.\n    token: rpuf27.nts20g6mps3x2vqa # The `token` is used by a machine to join the PKI of the cluster.\n    # The root certificate authority of the PKI.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEJtZXVha3B3aFlIOHNWU1NtVHJJdlpNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5EQTVNVFV3TVRReE1qbGFGdzB6TkRBNU1UTXdNVFF4TWpsYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBVTdHUi83d3k2TWhvUmxCYmF2OUwrNWJ5MkVVTEVSeFBuNVBWCnBaTlFQRUtqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVNUV3K0o4d21XZk1PTkNRZgpib21NdXV6dEtRZ3dCUVlESzJWd0EwRUFkT3FNT3UwdkJSbENHaXo3cVZqL1NnaTFSN1p2T3hLOU9xZFhwQjhlCjkyM1o0SHZ0cGx1a2hMVEcxYUY2cjJHcE5aNDh6WlVkcHVvT213a25YRXBqQ3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJQWRmUWxRNnhXRDYzMWhpMm9TZ2FpVU5HSzlmU29sRXI3ZDRKbjJtQXA0NQotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K\n    # Extra certificate subject alternative names for the machine's certificate.\n    certSANs: []\n    #   # Uncomment this to enable SANs.\n    #   - 10.0.0.10\n    #   - 172.16.0.10\n    #   - 192.168.0.10\n\n    # Used to provide additional options to the kubelet.\n    kubelet:\n        image: ghcr.io/siderolabs/kubelet:v1.30.0 # The `image` field is an optional reference to an alternative kubelet image.\n        defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.\n        disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.\n        \n        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.\n        # clusterDNS:\n        #     - 10.96.0.10\n        #     - 169.254.2.53\n\n        # # The `extraArgs` field is used to provide additional flags to the kubelet.\n        # extraArgs:\n        #     key: value\n\n        # # The `extraMounts` field is used to add additional mounts to the kubelet container.\n        # extraMounts:\n        #     - destination: /var/lib/example # Destination is the absolute path where the mount will be placed in the container.\n        #       type: bind # Type specifies the mount kind.\n        #       source: /var/lib/example # Source specifies the source path of the mount.\n        #       # Options are fstab style mount options.\n        #       options:\n        #         - bind\n        #         - rshared\n        #         - rw\n\n        # # The `extraConfig` field is used to provide kubelet configuration overrides.\n        # extraConfig:\n        #     serverTLSBootstrap: true\n\n        # # The `KubeletCredentialProviderConfig` field is used to provide kubelet credential configuration.\n        # credentialProviderConfig:\n        #     apiVersion: kubelet.config.k8s.io/v1\n        #     kind: CredentialProviderConfig\n        #     providers:\n        #         - apiVersion: credentialprovider.kubelet.k8s.io/v1\n        #           defaultCacheDuration: 12h\n        #           matchImages:\n        #             - '*.dkr.ecr.*.amazonaws.com'\n        #             - '*.dkr.ecr.*.amazonaws.com.cn'\n        #             - '*.dkr.ecr-fips.*.amazonaws.com'\n        #             - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'\n        #             - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'\n        #           name: ecr-credential-provider\n\n        # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.\n        # nodeIP:\n        #     # The `validSubnets` field configures the networks to pick kubelet node IP from.\n        #     validSubnets:\n        #         - 10.0.0.0/8\n        #         - '!10.0.0.3/32'\n        #         - fdc7::/16\n    # Provides machine specific network configuration options.\n    network: {}\n    # # `interfaces` is used to define the network interface configuration.\n    # interfaces:\n    #     - interface: enp0s1 # The interface name.\n    #       # Assigns static IP addresses to the interface.\n    #       addresses:\n    #         - 192.168.2.0/24\n    #       # A list of routes associated with the interface.\n    #       routes:\n    #         - network: 0.0.0.0/0 # The route's network (destination).\n    #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).\n    #           metric: 1024 # The optional metric for the route.\n    #       mtu: 1500 # The interface's MTU.\n    #       \n    #       # # Picks a network device using the selector.\n\n    #       # # select a device with bus prefix 00:*.\n    #       # deviceSelector:\n    #       #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n    #       # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.\n    #       # deviceSelector:\n    #       #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.\n    #       #     driver: virtio # Kernel driver, supports matching by wildcard.\n    #       # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.\n    #       # deviceSelector:\n    #       #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n    #       #     - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.\n    #       #       driver: virtio # Kernel driver, supports matching by wildcard.\n\n    #       # # Bond specific options.\n    #       # bond:\n    #       #     # The interfaces that make up the bond.\n    #       #     interfaces:\n    #       #         - enp2s0\n    #       #         - enp2s1\n    #       #     # Picks a network device using the selector.\n    #       #     deviceSelectors:\n    #       #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n    #       #         - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.\n    #       #           driver: virtio # Kernel driver, supports matching by wildcard.\n    #       #     mode: 802.3ad # A bond option.\n    #       #     lacpRate: fast # A bond option.\n\n    #       # # Bridge specific options.\n    #       # bridge:\n    #       #     # The interfaces that make up the bridge.\n    #       #     interfaces:\n    #       #         - enxda4042ca9a51\n    #       #         - enxae2a6774c259\n    #       #     # A bridge option.\n    #       #     stp:\n    #       #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.\n\n    #       # # Indicates if DHCP should be used to configure the interface.\n    #       # dhcp: true\n\n    #       # # DHCP specific options.\n    #       # dhcpOptions:\n    #       #     routeMetric: 1024 # The priority of all routes received via DHCP.\n\n    #       # # Wireguard specific configuration.\n\n    #       # # wireguard server example\n    #       # wireguard:\n    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n    #       #     listenPort: 51111 # Specifies a device's listening port.\n    #       #     # Specifies a list of peer configurations to apply to a device.\n    #       #     peers:\n    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n    #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.\n    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n    #       #           allowedIPs:\n    #       #             - 192.168.1.0/24\n    #       # # wireguard peer example\n    #       # wireguard:\n    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n    #       #     # Specifies a list of peer configurations to apply to a device.\n    #       #     peers:\n    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n    #       #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.\n    #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.\n    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n    #       #           allowedIPs:\n    #       #             - 192.168.1.0/24\n\n    #       # # Virtual (shared) IP address configuration.\n\n    #       # # layer2 vip example\n    #       # vip:\n    #       #     ip: 172.16.199.55 # Specifies the IP address to be used.\n\n    # # Used to statically set the nameservers for the machine.\n    # nameservers:\n    #     - 8.8.8.8\n    #     - 1.1.1.1\n\n    # # Allows for extra entries to be added to the `/etc/hosts` file\n    # extraHostEntries:\n    #     - ip: 192.168.1.100 # The IP of the host.\n    #       # The host alias.\n    #       aliases:\n    #         - example\n    #         - example.domain.tld\n\n    # # Configures KubeSpan feature.\n    # kubespan:\n    #     enabled: true # Enable the KubeSpan feature.\n\n    # Used to provide instructions for installations.\n    install:\n        disk: /dev/sda # The disk used for installations.\n        image: ghcr.io/siderolabs/installer:v1.7.0 # Allows for supplying the image used to perform the installation.\n        wipe: false # Indicates if the installation disk should be wiped at installation time.\n        \n        # # Look up disk using disk attributes like model, size, serial and others.\n        # diskSelector:\n        #     size: 4GB # Disk size.\n        #     model: WDC* # Disk model `/sys/block/\u003cdev\u003e/device/model`.\n        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.\n\n        # # Allows for supplying extra kernel args via the bootloader.\n        # extraKernelArgs:\n        #     - talos.platform=metal\n        #     - reboot=k\n\n        # # Allows for supplying additional system extension images to install on top of base Talos image.\n        # extensions:\n        #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0 # System extension image.\n    # Used to configure the machine's container image registry mirrors.\n    registries: {}\n    # # Specifies mirror configuration for each registry host namespace.\n    # mirrors:\n    #     ghcr.io:\n    #         # List of endpoints (URLs) for registry mirrors to use.\n    #         endpoints:\n    #             - https://registry.insecure\n    #             - https://ghcr.io/v2/\n\n    # # Specifies TLS \u0026 auth configuration for HTTPS image registries.\n    # config:\n    #     registry.insecure:\n    #         # The TLS configuration for the registry.\n    #         tls:\n    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).\n    #             \n    #             # # Enable mutual TLS authentication with the registry.\n    #             # clientIdentity:\n    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t\n    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==\n    #         \n    #         # # The auth configuration for this registry.\n    #         # auth:\n    #         #     username: username # Optional registry authentication.\n    #         #     password: password # Optional registry authentication.\n\n    # Features describe individual Talos features that can be switched on or off.\n    features:\n        rbac: true # Enable role-based access control (RBAC).\n        stableHostname: true # Enable stable default hostname.\n        apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.\n        diskQuotaSupport: true # Enable XFS project quota support for EPHEMERAL partition and user disks.\n        # KubePrism - local proxy/load balancer on defined port that will distribute\n        kubePrism:\n            enabled: true # Enable KubePrism support - will start local load balancing proxy.\n            port: 7445 # KubePrism port.\n        # Configures host DNS caching resolver.\n        hostDNS:\n            enabled: true # Enable host DNS caching resolver.\n        \n        # # Configure Talos API access from Kubernetes pods.\n        # kubernetesTalosAPIAccess:\n        #     enabled: true # Enable Talos API access from Kubernetes pods.\n        #     # The list of Talos API roles which can be granted for access from Kubernetes pods.\n        #     allowedRoles:\n        #         - os:reader\n        #     # The list of Kubernetes namespaces Talos API access is available from.\n        #     allowedKubernetesNamespaces:\n        #         - kube-system\n    \n    # # Provides machine specific control plane configuration options.\n\n    # # ControlPlane definition example.\n    # controlPlane:\n    #     # Controller manager machine specific configuration options.\n    #     controllerManager:\n    #         disabled: false # Disable kube-controller-manager on the node.\n    #     # Scheduler machine specific configuration options.\n    #     scheduler:\n    #         disabled: true # Disable kube-scheduler on the node.\n\n    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.\n\n    # # nginx static pod.\n    # pods:\n    #     - apiVersion: v1\n    #       kind: pod\n    #       metadata:\n    #         name: nginx\n    #       spec:\n    #         containers:\n    #             - image: nginx\n    #               name: nginx\n\n    # # Used to partition, format and mount additional disks.\n\n    # # MachineDisks list example.\n    # disks:\n    #     - device: /dev/sdb # The name of the disk to use.\n    #       # A list of partitions to create on the disk.\n    #       partitions:\n    #         - mountpoint: /var/mnt/extra # Where to mount the partition.\n    #           \n    #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.\n\n    #           # # Human readable representation.\n    #           # size: 100 MB\n    #           # # Precise value in bytes.\n    #           # size: 1073741824\n\n    # # Allows the addition of user specified files.\n\n    # # MachineFiles usage example.\n    # files:\n    #     - content: '...' # The contents of the file.\n    #       permissions: 0o666 # The file's permissions in octal.\n    #       path: /tmp/file.txt # The path of the file.\n    #       op: append # The operation to use\n\n    # # The `env` field allows for the addition of environment variables.\n\n    # # Environment variables definition examples.\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: info\n    #     GRPC_GO_LOG_VERBOSITY_LEVEL: \"99\"\n    #     https_proxy: http://SERVER:PORT/\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: error\n    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/\n    # env:\n    #     https_proxy: http://DOMAIN\\USERNAME:PASSWORD@SERVER:PORT/\n\n    # # Used to configure the machine's time settings.\n\n    # # Example configuration for cloudflare ntp server.\n    # time:\n    #     disabled: false # Indicates if the time service is disabled for the machine.\n    #     # description: |\n    #     servers:\n    #         - time.cloudflare.com\n    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.\n\n    # # Used to configure the machine's sysctls.\n\n    # # MachineSysctls usage example.\n    # sysctls:\n    #     kernel.domainname: talos.dev\n    #     net.ipv4.ip_forward: \"0\"\n    #     net/ipv6/conf/eth0.100/disable_ipv6: \"1\"\n\n    # # Used to configure the machine's sysfs.\n\n    # # MachineSysfs usage example.\n    # sysfs:\n    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance\n\n    # # Machine system disk encryption configuration.\n    # systemDiskEncryption:\n    #     # Ephemeral partition encryption.\n    #     ephemeral:\n    #         provider: luks2 # Encryption provider to use for the encryption.\n    #         # Defines the encryption keys generation and storage method.\n    #         keys:\n    #             - # Deterministically generated key from the node UUID and PartitionLabel.\n    #               nodeID: {}\n    #               slot: 0 # Key slot number for LUKS2 encryption.\n    #               \n    #               # # KMS managed encryption key.\n    #               # kms:\n    #               #     endpoint: https://192.168.88.21:4443 # KMS endpoint to Seal/Unseal the key.\n    #         \n    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.\n    #         # cipher: aes-xts-plain64\n\n    #         # # Defines the encryption sector size.\n    #         # blockSize: 4096\n\n    #         # # Additional --perf parameters for the LUKS2 encryption.\n    #         # options:\n    #         #     - no_read_workqueue\n    #         #     - no_write_workqueue\n\n    # # Configures the udev system.\n    # udev:\n    #     # List of udev rules to apply to the udev system\n    #     rules:\n    #         - SUBSYSTEM==\"drm\", KERNEL==\"renderD*\", GROUP=\"44\", MODE=\"0660\"\n\n    # # Configures the logging system.\n    # logging:\n    #     # Logging destination.\n    #     destinations:\n    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are \"tcp\" and \"udp\".\n    #           format: json_lines # Logs format.\n\n    # # Configures the kernel.\n    # kernel:\n    #     # Kernel modules to load.\n    #     modules:\n    #         - name: brtfs # Module name.\n\n    # # Configures the seccomp profiles for the machine.\n    # seccompProfiles:\n    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.\n    #       # The `value` field is used to provide the seccomp profile.\n    #       value:\n    #         defaultAction: SCMP_ACT_LOG\n\n    # # Configures the node labels for the machine.\n\n    # # node labels example.\n    # nodeLabels:\n    #     exampleLabel: exampleLabelValue\n\n    # # Configures the node taints for the machine. Effect is optional.\n\n    # # node taints example.\n    # nodeTaints:\n    #     exampleTaint: exampleTaintValue:NoSchedule\n# Provides cluster specific configuration options.\ncluster:\n    id: 8slduxY_GAi_6kXZVBT1HimFxw7qI8ZI8rscA9QEsa8= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).\n    secret: jB9mqchMnYCyAOcV0MM6RY+2S3qPgGgqpzd7gg6Br4o= # Shared secret of cluster (base64 encoded random 32 bytes).\n    # Provides control plane specific configuration options.\n    controlPlane:\n        endpoint: https://10.0.0.70:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.\n    clusterName: kubernetes_cluster # Configures the cluster's name.\n    # Provides cluster specific network configuration options.\n    network:\n        dnsDomain: cluster.local # The domain used by Kubernetes DNS.\n        # The pod subnet CIDR.\n        podSubnets:\n            - 10.244.0.0/16\n        # The service subnet CIDR.\n        serviceSubnets:\n            - 10.96.0.0/12\n        \n        # # The CNI used.\n        # cni:\n        #     name: custom # Name of CNI to use.\n        #     # URLs containing manifests to apply for the CNI.\n        #     urls:\n        #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml\n    token: uionez.ajblvmwkqhy7fre4 # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.\n    secretboxEncryptionSecret: 4N5U1/Bhntbei1Sz0lyh3SmYW00G+KamspvrAtyOw5s= # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).\n    # The base64 encoded root certificate authority used by Kubernetes.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpakNDQVRDZ0F3SUJBZ0lSQUtJa3N3WXE4aFBjUDMwNElqV3RJQ013Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlOREE1TVRVd01UUXhNamxhRncwek5EQTVNVE13TVRReApNamxhTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVM2bXM5NmUyblUyZ3d0b2hZVWxsdUFtZ1JTUk9hdnUxS0F2WlpqNTFQTk5jSjhnKy96ekVFcTBlYWQKc2gyREhweWdwU1p1UDZVSlhkVXZKWElWOThXR28yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGQTRqK2ZWY0szOVhobkF0TmplZWRDUitVTDg2TUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUhWMi9xUmsKM3VMSld2ZG1ldnpMTGhQTmdQTWdZWTZ6TGVyaFozSkwvMHBYQWlFQTRKRXB6a245SjFkL1VsRVRSMXRCR2xSWQpMSENHbUlYS3BESmhpcHZhRVM4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU42NkxyTlhFaEdRaFdpaWlycEJXQzVqNWJPa1NxSjJnWDVxYnY1MzhOTlZvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFdXByUGVudHAxTm9NTGFJV0ZKWmJnSm9FVWtUbXI3dFNnTDJXWStkVHpUWENmSVB2ODh4QgpLdEhtbmJJZGd4NmNvS1VtYmorbENWM1ZMeVZ5RmZmRmhnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.\n    aggregatorCA:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJYekNDQVFXZ0F3SUJBZ0lRYzBMSkluSkJhVGNuWVhRWjhPUzNXVEFLQmdncWhrak9QUVFEQWpBQU1CNFgKRFRJME1Ea3hOVEF4TkRFeU9Wb1hEVE0wTURreE16QXhOREV5T1Zvd0FEQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5QXdFSEEwSUFCRml6Q0VubXg0N1ZnWTM0U0pKYlIxZloyNkNTWDQybVB5YmVsVVNCb1RuNW1NVWFTeEF3CmJKbTRCMmZmOHl0S2ZJMmEwcnN6a1lLL1BVdTcvYm84bE5HallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZApCZ05WSFE0RUZnUVVPTkZySFk2djFnSGlRdU10aVJzWnVFaTF0U3d3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUlnCktTanpPQkpWQndiVmtXdkErNHE3VzJ1Mjg5NUNDUmpkK0swWG5pcGNwZG9DSVFDc1BXejRmSmEveW0ybDhkcjkKR2RmdG5pNzg2MWRvVUJtQXRxcVRhOHB1cEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUZPKzk1Z3dWdVhzUXlWSHBOTU1HazNLdzZjUFNqakxjUW5yVkhad1lnbHNvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFV0xNSVNlYkhqdFdCamZoSWtsdEhWOW5ib0pKZmphWS9KdDZWUklHaE9mbVl4UnBMRURCcwptYmdIWjkvekswcDhqWnJTdXpPUmdyODlTN3Y5dWp5VTBRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n    # The base64 encoded private key for service account token generation.\n    serviceAccount:\n        key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBeEY2YXpMNGIyLzJHdU1uNkhOQXZIZ3FablMzeHAvSkQ3ZDNxcXE3b05KeGQyUTMzCjVySlNmcFhJZlIrMklUcVNYSjB2elh6ZzVTSnFneG5tZE9vQkR2VGQrS1B0SVNHdUdHcWZmSXJVaGUzV0t1QWYKdFZxQVBOYklNRlRNUjNqNHdpaExMZTR2TXhhV0xlOExLZ2padkRBaWFRRE1vQmRkYkp2TW4vK21DZ05PbHZsMApzSjNEQklxM3czSTY0dzN1Wm8ycDdjUE11WjNsVk5qakw3NWNxRlM5RXNOdVd0dXgzUGNERVBZNjZtR0sxZmRyCkRKTzNGZDd2TGhLVFlLVEQyM0JEWnRwVVNQdUlneUMvTHg5NlBDR0hFNzF2RFN0WGw5R0lpd2pYMmd5SjZGQysKZGFKdFQ2cHJJVlJRSUVnZ1BYakdxY0w4K2UreXVoY0VoMzJXQjhuVloramllNTA0RkIvNDNGT1V5SlVSRU5rTwpSWXdYSWEzbDlSOGJCcytXNUczN0ZiemVOV1p4akZEbTVoVjJXOHljSElwYnhvZnRvTnBZaUJJRWhmTHdDRmxxCkFyTGpuWTdVUHcwRGI3OTlJTFg0eERHMlZZak55aEVVaDNsTkgzNGRhU2puekxsNzQxTnN0dHBjbDEyVG4xTUgKS1U5TzZSWHFHUXBjcW0zOGhWUHlwVVZoSkF4dXN5Yml2WGxGMEJldGdZTkF3VEtNVjV5NGFoZ1h5STFOM3FHZQpsMHZLUS9POVIvY3QvL3p3ZGZSSExBSDNWWHlGdDJMNnRYZ21yRGlsRHlMek4xTEswZFZTV1pZeVZ2dzZnR2QxCk4yUDR6VkQ2cGlISGkxZ2tjQjZHVGtTSUZYak5VMjV2MFBSMXJEY1drRDRvclZDWS9UWlcrUjloSDZFQ0F3RUEKQVFLQ0FnQTFCRTNMQlhERUhsam5QekRWNHFjMTl5cXVNeDlSZHFrOGFYUFlEVTBJRjBlSE9LdzdqdDJTNjZHcgpsb28zd25hTnBxcW5VaFh1QnpLMm5xR0g0ejNSNmU2Y0dMWUhBZTdkREx4dWhaVUhhOFVzNGtIdFZyZlV0VEJyClRCbXpHa2dmTTMzSXNzdnZnU09lMXpFdWNpRkhHNy9PbGJhcGFtV0EwemVWNHhIVEZqMTdxWElGMVRJMzRiUG4KZ3NtL1Q1MlQ5cDl3WURLLzBvOStMdWgzbFcreXl0NFpXTVpNcFpBSjFtN3ZmMnM4cUlVeGE1RnRYZHhLZlZ3YQpGazNRQSt3VkxPUWx1c0NTeThaNWtMZk5ZelEvVTlZQ1VGelJNMmg4eHNlVXNoaUUrR21yWFZGdXRTSEtKbnF5CkR1OXJKODM4aXNVb1JFckV1Q0NLK1hmeGxNaVNiR0xkWHNXYnlrd2laVnF2VkhDOTUycEVGUUdhUEgwZ2YrNWcKRjNtWmwwWDVRZ0hSYkZhdUlFTFBEUHdoM2RvUGlPcWN1bjNqdHJOa0orczRXTUZRSFptQ0tJc1NtK2tIc0tCaApwZjZwdng3Sm1xSVN0L25zbjRObE9yakVvaEZMK3E4ZGd4R08yOTVtUnB2RWs1R0NPQ0hQczVwQU1zbHNpbXVECmtwMGhNYXdLUzhMT25JVG9qRlpDVUIwZlRWZVZ2UHdKY1hHTU5XdVFkR0hUQVRKSFRiU3pxYTZ6Q0NNbG93dmkKUWtoU3VtS1ZwYmNJYW9pcFJEWFBxekFEb1F5Vm51ekU3d29tZHc3N1ZPRXhCTTVtN2NzQXBiNStHWDNFR3pSZQpyaHd4TzA5YktxOEVNYm4zT2RZVUdrVUJuaGFuTmZwMUNuS0NENTk1N1JqS09jYjlXUUtDQVFFQTBWSS8vb2JqCm9UNXRzdVNNcE5QNjhQdHJwSkxXUUxpSW1YSVQ4ZnErUjQrRERlZ1pNTHUzVnBzSGhGWW9OOExyZ1hSNGtad0YKSDBWNDBSZ0xXOVlOSjhKUHB6L3U0dlU2Tm45ZHpSTnNpRFN6TXlNcjhHR2NWb3dqbDh5eWdGbEtkaTVyU2JRNgpQQ1NZTFdBOG13TDRwekgyR0FyY3FHdkV2STBsUTFiT1BuQUtLRkxCS3RBTVltVmtGM0FYTGZGMVBVYXVhU3gzClZQOXNkUGZJUHpzQkZCK3BLQnZ4Nk5PeE1EY1dnZUYzSXlxSG5qU245aHg3eDd3dUxsTVB0RXhOVnFzV0JiTkwKanR2clJCTHVMVW82SjYxY2lCVXFJWHdvSHBVbWRPTy9vbG4xQVRXOGtEL1I3bWZZd2QwSk10NTYxVHdtWnhTZgp5QU9OS00ydzA5N2c4d0tDQVFFQThDajIvVVNjTG5ENVA5WVBLczFpdUFUdGFXbE5kMnQ5UWJtejVKMjFBRXR1ClZzeUk0dkU4YTZzZnlRU2VsZ2JRTEs3SFNYajVaR01oZWtIbXRMWHdkaFVLMFF6elk2Z1VGK09sM2V6eTlQUDcKSWs2c2dvdFJVcW8zTHN4bUU0UmVYUDJhQ2V6TGdLYUU2NEtGVDQyZkp0UG5leU5keTlERzhkdGdGWnFZaFZzcwpqWjIzSlh1VHlINmk2WnQxVThRZTFMUld4UlF0aGRHV0hMSGF4M1ArVHRpMkNJbWIvOFJKQUk3VGgwS1EyeFhTCjVuUjJwN0RIb3lZLzlBdG9oVFBqMmpkREtraklXOVFEWEc1cDU3YldlN0JTQStmRC9qcGJvR2ZZSUhwY2RQNXgKbUFmNzZ6cnBEemx3WGlQSU5BOFdIWFBSdk0rR01qNk1YNDk4RGN5Q0d3S0NBUUJINmk0NlVEV2NqRW84RC9HUwpINUl6Z08yMm1Rd3JLRHNtSE45bFgzUklPYklZOFFqV2lXZXZ4WXVMbDk0eGFqSm5RNUM0MWhXY2JNM1phSjFlCmErZ1JKTjBnNVFJNXoyNjBrb1d6azF6U1h1akNSTzh2b3htSFVwWlg3T2ZXMk5hUVM5cG9kQmNkMnFTOTBqYUEKTzBFYWtEdXdmdXJZb2szeFNiem5xY2NxQkd3NDlsV1BVL010U3hCY1RSSnBvbTlaSWhPQjV0a0l4c2lJVnlqaApNSEJxYllZOFZYMkRORmZIN09VNnNpK3dVVWhPdm1DR1dicmRJSFh0VEhRMHlaSTRtSWIwWm1rcko3dG9vK2hZCmZ3d0QzYmZRdVJURWRGZUVTbEh3RHQ4ajlDd013bDJLWWFMS2Vic3F2N29OVkFwM2dEYmhhMkNKNDA1NEdsTUsKTjZTcEFvSUJBRUtwTEQyS29NdG5RbGdNdzdMK3hXc011eFZxVEQxY2thei9yY1pFWEN4VHc3SEdIaXpZQnd4Zgp1SGZrbDF4UFVkTkZSRDNKblhmVzZFRDJMK0p6S2VhczJvN0NTSUNkODgzWnUzMkpPcnJ4U2dEdzA0Tjh4anJxCjBseGtFZVZTOVpwY0xqaVpDTGVTQVEwWjhvVHRhNEtzaVBFdUZPZnc4SGZMaTdVVGIwaDgwVFlSMC9kTWdPM0MKOE5kazlrRWxDK1hBbE9FcFE2V0VVbVZ1bktxR01NMlQ2NXNkRHpjRU5iczQ2Yy8ra3hTc3p4aDJ0VVRBbGZsYwpNWjQ4MkdzNHh3TVlHY1dQNUVWUTZRbnIvK3Q0WGJxQmE1SjM3M2dPbk1ZK2JNZy9EcERPMjVyMmhGOTd2NXNoCk4yWjZDaVVoRnVOZjlaU3lDYTdDbTlZZWpyR0oxWWNDZ2dFQkFKcXlPbC9hR2EwbXlteE9pY0pXMkFsWnkzRjkKWWJyNXViOTRFMWVvZ2lrVEprZkZDOHE2ZmUyUjYycnlVSmE4WERqNW9lMmo2SWNQUEU5ZzR6TVg0MFg3VTU2bQp2MzBWWHgwQTUvS2NENG1WekVwb2RUQVR6bm95eVRtY2hIRWs5VVF5TzNXd2w1Nnhyc1AraW0zMVlVVVVKRldpClM5WXpsUFFLY2RzODRscWNjK0I2OHVYaldxOHR5V29oRFcxTUZVamY1SFhzRGJQUkVOQTdMOUNYWVowN25oWU0KS2pTYWxyZHgwaXJocFdJMkdhZzhCZjFtT1hYaGUxSFBMajdqMlQxZHVlZ0ltMzNNU2VUK0M2bkJ0dTZvb2FsUQo4ZE1UK3Axdm9HNmFyRVNpeDdaNGkvWnVJYTFJeXQ0d0RmQmgwM0tEK2xYbDU2Z3krMlhsQThXajlpYz0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K\n    # API server specific configuration options.\n    apiServer:\n        image: registry.k8s.io/kube-apiserver:v1.30.0 # The container image used in the API server manifest.\n        # Extra certificate subject alternative names for the API server's certificate.\n        certSANs:\n            - 10.0.0.70\n        disablePodSecurityPolicy: true # Disable PodSecurityPolicy in the API server and default manifests.\n        # Configure the API server admission plugins.\n        admissionControl:\n            - name: PodSecurity # Name is the name of the admission controller.\n              # Configuration is an embedded configuration object to be used as the plugin's\n              configuration:\n                apiVersion: pod-security.admission.config.k8s.io/v1alpha1\n                defaults:\n                    audit: restricted\n                    audit-version: latest\n                    enforce: baseline\n                    enforce-version: latest\n                    warn: restricted\n                    warn-version: latest\n                exemptions:\n                    namespaces:\n                        - kube-system\n                    runtimeClasses: []\n                    usernames: []\n                kind: PodSecurityConfiguration\n        # Configure the API server audit policy.\n        auditPolicy:\n            apiVersion: audit.k8s.io/v1\n            kind: Policy\n            rules:\n                - level: Metadata\n    # Controller manager server specific configuration options.\n    controllerManager:\n        image: registry.k8s.io/kube-controller-manager:v1.30.0 # The container image used in the controller manager manifest.\n    # Kube-proxy server-specific configuration options\n    proxy:\n        image: registry.k8s.io/kube-proxy:v1.30.0 # The container image used in the kube-proxy manifest.\n        \n        # # Disable kube-proxy deployment on cluster bootstrap.\n        # disabled: false\n    # Scheduler server specific configuration options.\n    scheduler:\n        image: registry.k8s.io/kube-scheduler:v1.30.0 # The container image used in the scheduler manifest.\n    # Configures cluster member discovery.\n    discovery:\n        enabled: true # Enable the cluster membership discovery feature.\n        # Configure registries used for cluster member discovery.\n        registries:\n            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information\n            kubernetes:\n                disabled: true # Disable Kubernetes discovery registry.\n            # Service registry is using an external service to push and pull information about cluster members.\n            service: {}\n            # # External service endpoint.\n            # endpoint: https://discovery.talos.dev/\n    # Etcd specific configuration options.\n    etcd:\n        # The `ca` is the root certificate authority of the PKI.\n        ca:\n            crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmakNDQVNTZ0F3SUJBZ0lSQUtrNUFQdlB4TzVITDhJT1RaZ25yK013Q2dZSUtvWkl6ajBFQXdJd0R6RU4KTUFzR0ExVUVDaE1FWlhSalpEQWVGdzB5TkRBNU1UVXdNVFF4TWpsYUZ3MHpOREE1TVRNd01UUXhNamxhTUE4eApEVEFMQmdOVkJBb1RCR1YwWTJRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFRV2IxYmxmUnhFCmZpSnZXeiszQnBmTlBhd1poZEFlSnpRVmQrMGgyb3ZtazFuU2wzdGhQNWQ4WnlsZE8yMUk0ZFdiMWtZZnhxSmgKdm5XVDY2VGN6N09XbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSApBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkdnc3NmNi81a2p5CmloaCs0MS80VFYwcFMxNkZNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJRmxWM0lQWHdkY0N6WTJITzdIeldKR04KaUxTcStRNU5kRFFtanM2ZXlya2ZBaUVBeWpkQTNjdWNTZ1o2L2RHdmRPTE9RcHQ0L3ZNWUdCTWtxL1JvQ1lmUApMck09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\n            key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUVKbzZWTFVGU1BwVWtySXg2THVadjdBWjk5U0JvQ2tiOHg4K3JGSDI1UGpvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFRm05VzVYMGNSSDRpYjFzL3R3YVh6VDJzR1lYUUhpYzBGWGZ0SWRxTDVwTlowcGQ3WVQrWApmR2NwWFR0dFNPSFZtOVpHSDhhaVliNTFrK3VrM00remxnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n        \n        # # The container image used to create the etcd service.\n        # image: gcr.io/etcd-development/etcd:v3.5.13\n\n        # # The `advertisedSubnets` field configures the networks to pick etcd advertised IP from.\n        # advertisedSubnets:\n        #     - 10.0.0.0/8\n    # A list of urls that point to additional manifests.\n    extraManifests: []\n    #   - https://www.example.com/manifest1.yaml\n    #   - https://www.example.com/manifest2.yaml\n\n    # A list of inline Kubernetes manifests.\n    inlineManifests: []\n    #   - name: namespace-ci # Name of the manifest.\n    #     contents: |- # Manifest contents as a string.\n    #       apiVersion: v1\n    #       kind: Namespace\n    #       metadata:\n    #       \tname: ci\n\n    \n    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).\n\n    # # Decryption secret example (do not use in production!).\n    # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=\n\n    # # Core DNS specific configuration options.\n    # coreDNS:\n    #     image: registry.k8s.io/coredns/coredns:v1.11.1 # The `image` field is an override to the default coredns image.\n\n    # # External cloud provider configuration.\n    # externalCloudProvider:\n    #     enabled: true # Enable external cloud provider.\n    #     # A list of urls that point to additional manifests for an external cloud provider.\n    #     manifests:\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml\n\n    # # A map of key value pairs that will be added while fetching the extraManifests.\n    # extraManifestHeaders:\n    #     Token: \"1234567\"\n    #     X-ExtraInfo: info\n\n    # # Settings for admin kubeconfig generation.\n    # adminKubeconfig:\n    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).\n\n    # # Allows running workload on control-plane nodes.\n    # allowSchedulingOnControlPlanes: true\n",
            "node": "10.0.0.70",
            "timeouts": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "machine_configuration"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "client_configuration"
              },
              {
                "type": "get_attr",
                "value": "client_key"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_configuration_input"
              }
            ]
          ],
          "dependencies": [
            "data.talos_machine_configuration.machineconfig_cp",
            "proxmox_virtual_environment_download_file.talos_nocloud_image",
            "proxmox_virtual_environment_vm.talos_cp_01",
            "talos_machine_secrets.machine_secrets"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "talos_machine_configuration_apply",
      "name": "worker_config_apply",
      "provider": "provider[\"registry.terraform.io/siderolabs/talos\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "apply_mode": "auto",
            "client_configuration": {
              "ca_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEJtZXVha3B3aFlIOHNWU1NtVHJJdlpNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5EQTVNVFV3TVRReE1qbGFGdzB6TkRBNU1UTXdNVFF4TWpsYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBVTdHUi83d3k2TWhvUmxCYmF2OUwrNWJ5MkVVTEVSeFBuNVBWCnBaTlFQRUtqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVNUV3K0o4d21XZk1PTkNRZgpib21NdXV6dEtRZ3dCUVlESzJWd0EwRUFkT3FNT3UwdkJSbENHaXo3cVZqL1NnaTFSN1p2T3hLOU9xZFhwQjhlCjkyM1o0SHZ0cGx1a2hMVEcxYUY2cjJHcE5aNDh6WlVkcHVvT213a25YRXBqQ3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
              "client_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJLRENCMjZBREFnRUNBaEFUSW5vM3ErWkR2eTlpcENoeFp3RFhNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5EQTVNVFV3TVRReE1qbGFGdzB5TlRBNU1UVXdNVFF4TWpsYU1CTXhFVEFQQmdOVgpCQW9UQ0c5ek9tRmtiV2x1TUNvd0JRWURLMlZ3QXlFQVFCVlpUVThKT2xrMllESklHSjREQ1NLdmtGZ2o3NXkrCnVXVjJZTHFqWXlTalNEQkdNQTRHQTFVZER3RUIvd1FFQXdJSGdEQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0QKQWpBZkJnTlZIU01FR0RBV2dCVGtURDRuekNaWjh3NDBKQjl1aVl5NjdPMHBDREFGQmdNclpYQURRUURmWjN3OQpsWFRTNE1CczlKeVJFTTRMNGE3dzZtSFNOTzAwL1huWktqclU2T2JHTmIxTzJjTy9Oc2FKOUtzU244OWkySDJ1CjZiTjZkZmE1bkhMUjYrRUQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
              "client_key": "LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJTWp2NDJ3Z1ZPYlFKemhyUG8zUFFkM1ZuQ1IyL0V3VHh4cFVnb3lSR1IyNQotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K"
            },
            "config_patches": null,
            "endpoint": "10.0.0.73",
            "id": "machine_configuration_apply",
            "machine_configuration": "version: v1alpha1 # Indicates the schema used to decode the contents.\ndebug: false # Enable verbose logging to the console.\npersist: true\n# Provides machine specific configuration options.\nmachine:\n    type: worker # Defines the role of the machine within the cluster.\n    token: rpuf27.nts20g6mps3x2vqa # The `token` is used by a machine to join the PKI of the cluster.\n    # The root certificate authority of the PKI.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEJtZXVha3B3aFlIOHNWU1NtVHJJdlpNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5EQTVNVFV3TVRReE1qbGFGdzB6TkRBNU1UTXdNVFF4TWpsYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBVTdHUi83d3k2TWhvUmxCYmF2OUwrNWJ5MkVVTEVSeFBuNVBWCnBaTlFQRUtqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVNUV3K0o4d21XZk1PTkNRZgpib21NdXV6dEtRZ3dCUVlESzJWd0EwRUFkT3FNT3UwdkJSbENHaXo3cVZqL1NnaTFSN1p2T3hLOU9xZFhwQjhlCjkyM1o0SHZ0cGx1a2hMVEcxYUY2cjJHcE5aNDh6WlVkcHVvT213a25YRXBqQ3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: \"\"\n    # Extra certificate subject alternative names for the machine's certificate.\n    certSANs: []\n    #   # Uncomment this to enable SANs.\n    #   - 10.0.0.10\n    #   - 172.16.0.10\n    #   - 192.168.0.10\n\n    # Used to provide additional options to the kubelet.\n    kubelet:\n        image: ghcr.io/siderolabs/kubelet:v1.30.0 # The `image` field is an optional reference to an alternative kubelet image.\n        defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.\n        disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.\n        \n        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.\n        # clusterDNS:\n        #     - 10.96.0.10\n        #     - 169.254.2.53\n\n        # # The `extraArgs` field is used to provide additional flags to the kubelet.\n        # extraArgs:\n        #     key: value\n\n        # # The `extraMounts` field is used to add additional mounts to the kubelet container.\n        # extraMounts:\n        #     - destination: /var/lib/example # Destination is the absolute path where the mount will be placed in the container.\n        #       type: bind # Type specifies the mount kind.\n        #       source: /var/lib/example # Source specifies the source path of the mount.\n        #       # Options are fstab style mount options.\n        #       options:\n        #         - bind\n        #         - rshared\n        #         - rw\n\n        # # The `extraConfig` field is used to provide kubelet configuration overrides.\n        # extraConfig:\n        #     serverTLSBootstrap: true\n\n        # # The `KubeletCredentialProviderConfig` field is used to provide kubelet credential configuration.\n        # credentialProviderConfig:\n        #     apiVersion: kubelet.config.k8s.io/v1\n        #     kind: CredentialProviderConfig\n        #     providers:\n        #         - apiVersion: credentialprovider.kubelet.k8s.io/v1\n        #           defaultCacheDuration: 12h\n        #           matchImages:\n        #             - '*.dkr.ecr.*.amazonaws.com'\n        #             - '*.dkr.ecr.*.amazonaws.com.cn'\n        #             - '*.dkr.ecr-fips.*.amazonaws.com'\n        #             - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'\n        #             - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'\n        #           name: ecr-credential-provider\n\n        # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.\n        # nodeIP:\n        #     # The `validSubnets` field configures the networks to pick kubelet node IP from.\n        #     validSubnets:\n        #         - 10.0.0.0/8\n        #         - '!10.0.0.3/32'\n        #         - fdc7::/16\n    # Provides machine specific network configuration options.\n    network: {}\n    # # `interfaces` is used to define the network interface configuration.\n    # interfaces:\n    #     - interface: enp0s1 # The interface name.\n    #       # Assigns static IP addresses to the interface.\n    #       addresses:\n    #         - 192.168.2.0/24\n    #       # A list of routes associated with the interface.\n    #       routes:\n    #         - network: 0.0.0.0/0 # The route's network (destination).\n    #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).\n    #           metric: 1024 # The optional metric for the route.\n    #       mtu: 1500 # The interface's MTU.\n    #       \n    #       # # Picks a network device using the selector.\n\n    #       # # select a device with bus prefix 00:*.\n    #       # deviceSelector:\n    #       #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n    #       # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.\n    #       # deviceSelector:\n    #       #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.\n    #       #     driver: virtio # Kernel driver, supports matching by wildcard.\n    #       # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.\n    #       # deviceSelector:\n    #       #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n    #       #     - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.\n    #       #       driver: virtio # Kernel driver, supports matching by wildcard.\n\n    #       # # Bond specific options.\n    #       # bond:\n    #       #     # The interfaces that make up the bond.\n    #       #     interfaces:\n    #       #         - enp2s0\n    #       #         - enp2s1\n    #       #     # Picks a network device using the selector.\n    #       #     deviceSelectors:\n    #       #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n    #       #         - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.\n    #       #           driver: virtio # Kernel driver, supports matching by wildcard.\n    #       #     mode: 802.3ad # A bond option.\n    #       #     lacpRate: fast # A bond option.\n\n    #       # # Bridge specific options.\n    #       # bridge:\n    #       #     # The interfaces that make up the bridge.\n    #       #     interfaces:\n    #       #         - enxda4042ca9a51\n    #       #         - enxae2a6774c259\n    #       #     # A bridge option.\n    #       #     stp:\n    #       #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.\n\n    #       # # Indicates if DHCP should be used to configure the interface.\n    #       # dhcp: true\n\n    #       # # DHCP specific options.\n    #       # dhcpOptions:\n    #       #     routeMetric: 1024 # The priority of all routes received via DHCP.\n\n    #       # # Wireguard specific configuration.\n\n    #       # # wireguard server example\n    #       # wireguard:\n    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n    #       #     listenPort: 51111 # Specifies a device's listening port.\n    #       #     # Specifies a list of peer configurations to apply to a device.\n    #       #     peers:\n    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n    #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.\n    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n    #       #           allowedIPs:\n    #       #             - 192.168.1.0/24\n    #       # # wireguard peer example\n    #       # wireguard:\n    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n    #       #     # Specifies a list of peer configurations to apply to a device.\n    #       #     peers:\n    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n    #       #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.\n    #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.\n    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n    #       #           allowedIPs:\n    #       #             - 192.168.1.0/24\n\n    #       # # Virtual (shared) IP address configuration.\n\n    #       # # layer2 vip example\n    #       # vip:\n    #       #     ip: 172.16.199.55 # Specifies the IP address to be used.\n\n    # # Used to statically set the nameservers for the machine.\n    # nameservers:\n    #     - 8.8.8.8\n    #     - 1.1.1.1\n\n    # # Allows for extra entries to be added to the `/etc/hosts` file\n    # extraHostEntries:\n    #     - ip: 192.168.1.100 # The IP of the host.\n    #       # The host alias.\n    #       aliases:\n    #         - example\n    #         - example.domain.tld\n\n    # # Configures KubeSpan feature.\n    # kubespan:\n    #     enabled: true # Enable the KubeSpan feature.\n\n    # Used to provide instructions for installations.\n    install:\n        disk: /dev/sda # The disk used for installations.\n        image: ghcr.io/siderolabs/installer:v1.7.0 # Allows for supplying the image used to perform the installation.\n        wipe: false # Indicates if the installation disk should be wiped at installation time.\n        \n        # # Look up disk using disk attributes like model, size, serial and others.\n        # diskSelector:\n        #     size: 4GB # Disk size.\n        #     model: WDC* # Disk model `/sys/block/\u003cdev\u003e/device/model`.\n        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.\n\n        # # Allows for supplying extra kernel args via the bootloader.\n        # extraKernelArgs:\n        #     - talos.platform=metal\n        #     - reboot=k\n\n        # # Allows for supplying additional system extension images to install on top of base Talos image.\n        # extensions:\n        #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0 # System extension image.\n    # Used to configure the machine's container image registry mirrors.\n    registries: {}\n    # # Specifies mirror configuration for each registry host namespace.\n    # mirrors:\n    #     ghcr.io:\n    #         # List of endpoints (URLs) for registry mirrors to use.\n    #         endpoints:\n    #             - https://registry.insecure\n    #             - https://ghcr.io/v2/\n\n    # # Specifies TLS \u0026 auth configuration for HTTPS image registries.\n    # config:\n    #     registry.insecure:\n    #         # The TLS configuration for the registry.\n    #         tls:\n    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).\n    #             \n    #             # # Enable mutual TLS authentication with the registry.\n    #             # clientIdentity:\n    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t\n    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==\n    #         \n    #         # # The auth configuration for this registry.\n    #         # auth:\n    #         #     username: username # Optional registry authentication.\n    #         #     password: password # Optional registry authentication.\n\n    # Features describe individual Talos features that can be switched on or off.\n    features:\n        rbac: true # Enable role-based access control (RBAC).\n        stableHostname: true # Enable stable default hostname.\n        apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.\n        diskQuotaSupport: true # Enable XFS project quota support for EPHEMERAL partition and user disks.\n        # KubePrism - local proxy/load balancer on defined port that will distribute\n        kubePrism:\n            enabled: true # Enable KubePrism support - will start local load balancing proxy.\n            port: 7445 # KubePrism port.\n        # Configures host DNS caching resolver.\n        hostDNS:\n            enabled: true # Enable host DNS caching resolver.\n        \n        # # Configure Talos API access from Kubernetes pods.\n        # kubernetesTalosAPIAccess:\n        #     enabled: true # Enable Talos API access from Kubernetes pods.\n        #     # The list of Talos API roles which can be granted for access from Kubernetes pods.\n        #     allowedRoles:\n        #         - os:reader\n        #     # The list of Kubernetes namespaces Talos API access is available from.\n        #     allowedKubernetesNamespaces:\n        #         - kube-system\n    \n    # # Provides machine specific control plane configuration options.\n\n    # # ControlPlane definition example.\n    # controlPlane:\n    #     # Controller manager machine specific configuration options.\n    #     controllerManager:\n    #         disabled: false # Disable kube-controller-manager on the node.\n    #     # Scheduler machine specific configuration options.\n    #     scheduler:\n    #         disabled: true # Disable kube-scheduler on the node.\n\n    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.\n\n    # # nginx static pod.\n    # pods:\n    #     - apiVersion: v1\n    #       kind: pod\n    #       metadata:\n    #         name: nginx\n    #       spec:\n    #         containers:\n    #             - image: nginx\n    #               name: nginx\n\n    # # Used to partition, format and mount additional disks.\n\n    # # MachineDisks list example.\n    # disks:\n    #     - device: /dev/sdb # The name of the disk to use.\n    #       # A list of partitions to create on the disk.\n    #       partitions:\n    #         - mountpoint: /var/mnt/extra # Where to mount the partition.\n    #           \n    #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.\n\n    #           # # Human readable representation.\n    #           # size: 100 MB\n    #           # # Precise value in bytes.\n    #           # size: 1073741824\n\n    # # Allows the addition of user specified files.\n\n    # # MachineFiles usage example.\n    # files:\n    #     - content: '...' # The contents of the file.\n    #       permissions: 0o666 # The file's permissions in octal.\n    #       path: /tmp/file.txt # The path of the file.\n    #       op: append # The operation to use\n\n    # # The `env` field allows for the addition of environment variables.\n\n    # # Environment variables definition examples.\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: info\n    #     GRPC_GO_LOG_VERBOSITY_LEVEL: \"99\"\n    #     https_proxy: http://SERVER:PORT/\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: error\n    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/\n    # env:\n    #     https_proxy: http://DOMAIN\\USERNAME:PASSWORD@SERVER:PORT/\n\n    # # Used to configure the machine's time settings.\n\n    # # Example configuration for cloudflare ntp server.\n    # time:\n    #     disabled: false # Indicates if the time service is disabled for the machine.\n    #     # description: |\n    #     servers:\n    #         - time.cloudflare.com\n    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.\n\n    # # Used to configure the machine's sysctls.\n\n    # # MachineSysctls usage example.\n    # sysctls:\n    #     kernel.domainname: talos.dev\n    #     net.ipv4.ip_forward: \"0\"\n    #     net/ipv6/conf/eth0.100/disable_ipv6: \"1\"\n\n    # # Used to configure the machine's sysfs.\n\n    # # MachineSysfs usage example.\n    # sysfs:\n    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance\n\n    # # Machine system disk encryption configuration.\n    # systemDiskEncryption:\n    #     # Ephemeral partition encryption.\n    #     ephemeral:\n    #         provider: luks2 # Encryption provider to use for the encryption.\n    #         # Defines the encryption keys generation and storage method.\n    #         keys:\n    #             - # Deterministically generated key from the node UUID and PartitionLabel.\n    #               nodeID: {}\n    #               slot: 0 # Key slot number for LUKS2 encryption.\n    #               \n    #               # # KMS managed encryption key.\n    #               # kms:\n    #               #     endpoint: https://192.168.88.21:4443 # KMS endpoint to Seal/Unseal the key.\n    #         \n    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.\n    #         # cipher: aes-xts-plain64\n\n    #         # # Defines the encryption sector size.\n    #         # blockSize: 4096\n\n    #         # # Additional --perf parameters for the LUKS2 encryption.\n    #         # options:\n    #         #     - no_read_workqueue\n    #         #     - no_write_workqueue\n\n    # # Configures the udev system.\n    # udev:\n    #     # List of udev rules to apply to the udev system\n    #     rules:\n    #         - SUBSYSTEM==\"drm\", KERNEL==\"renderD*\", GROUP=\"44\", MODE=\"0660\"\n\n    # # Configures the logging system.\n    # logging:\n    #     # Logging destination.\n    #     destinations:\n    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are \"tcp\" and \"udp\".\n    #           format: json_lines # Logs format.\n\n    # # Configures the kernel.\n    # kernel:\n    #     # Kernel modules to load.\n    #     modules:\n    #         - name: brtfs # Module name.\n\n    # # Configures the seccomp profiles for the machine.\n    # seccompProfiles:\n    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.\n    #       # The `value` field is used to provide the seccomp profile.\n    #       value:\n    #         defaultAction: SCMP_ACT_LOG\n\n    # # Configures the node labels for the machine.\n\n    # # node labels example.\n    # nodeLabels:\n    #     exampleLabel: exampleLabelValue\n\n    # # Configures the node taints for the machine. Effect is optional.\n\n    # # node taints example.\n    # nodeTaints:\n    #     exampleTaint: exampleTaintValue:NoSchedule\n# Provides cluster specific configuration options.\ncluster:\n    id: 8slduxY_GAi_6kXZVBT1HimFxw7qI8ZI8rscA9QEsa8= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).\n    secret: jB9mqchMnYCyAOcV0MM6RY+2S3qPgGgqpzd7gg6Br4o= # Shared secret of cluster (base64 encoded random 32 bytes).\n    # Provides control plane specific configuration options.\n    controlPlane:\n        endpoint: https://10.0.0.70:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.\n    # Provides cluster specific network configuration options.\n    network:\n        dnsDomain: cluster.local # The domain used by Kubernetes DNS.\n        # The pod subnet CIDR.\n        podSubnets:\n            - 10.244.0.0/16\n        # The service subnet CIDR.\n        serviceSubnets:\n            - 10.96.0.0/12\n        \n        # # The CNI used.\n        # cni:\n        #     name: custom # Name of CNI to use.\n        #     # URLs containing manifests to apply for the CNI.\n        #     urls:\n        #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml\n    token: uionez.ajblvmwkqhy7fre4 # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.\n    # The base64 encoded root certificate authority used by Kubernetes.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpakNDQVRDZ0F3SUJBZ0lSQUtJa3N3WXE4aFBjUDMwNElqV3RJQ013Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlOREE1TVRVd01UUXhNamxhRncwek5EQTVNVE13TVRReApNamxhTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVM2bXM5NmUyblUyZ3d0b2hZVWxsdUFtZ1JTUk9hdnUxS0F2WlpqNTFQTk5jSjhnKy96ekVFcTBlYWQKc2gyREhweWdwU1p1UDZVSlhkVXZKWElWOThXR28yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGQTRqK2ZWY0szOVhobkF0TmplZWRDUitVTDg2TUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUhWMi9xUmsKM3VMSld2ZG1ldnpMTGhQTmdQTWdZWTZ6TGVyaFozSkwvMHBYQWlFQTRKRXB6a245SjFkL1VsRVRSMXRCR2xSWQpMSENHbUlYS3BESmhpcHZhRVM4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: \"\"\n    # Configures cluster member discovery.\n    discovery:\n        enabled: true # Enable the cluster membership discovery feature.\n        # Configure registries used for cluster member discovery.\n        registries:\n            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information\n            kubernetes:\n                disabled: true # Disable Kubernetes discovery registry.\n            # Service registry is using an external service to push and pull information about cluster members.\n            service: {}\n            # # External service endpoint.\n            # endpoint: https://discovery.talos.dev/\n    \n    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).\n\n    # # Decryption secret example (do not use in production!).\n    # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=\n\n    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).\n\n    # # Decryption secret example (do not use in production!).\n    # secretboxEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=\n\n    # # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.\n\n    # # AggregatorCA example.\n    # aggregatorCA:\n    #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t\n    #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==\n\n    # # The base64 encoded private key for service account token generation.\n\n    # # AggregatorCA example.\n    # serviceAccount:\n    #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==\n\n    # # API server specific configuration options.\n    # apiServer:\n    #     image: registry.k8s.io/kube-apiserver:v1.30.0 # The container image used in the API server manifest.\n    #     # Extra arguments to supply to the API server.\n    #     extraArgs:\n    #         feature-gates: ServerSideApply=true\n    #         http2-max-streams-per-connection: \"32\"\n    #     # Extra certificate subject alternative names for the API server's certificate.\n    #     certSANs:\n    #         - 1.2.3.4\n    #         - 4.5.6.7\n    #     # Configure the API server admission plugins.\n    #     admissionControl:\n    #         - name: PodSecurity # Name is the name of the admission controller.\n    #           # Configuration is an embedded configuration object to be used as the plugin's\n    #           configuration:\n    #             apiVersion: pod-security.admission.config.k8s.io/v1alpha1\n    #             defaults:\n    #                 audit: restricted\n    #                 audit-version: latest\n    #                 enforce: baseline\n    #                 enforce-version: latest\n    #                 warn: restricted\n    #                 warn-version: latest\n    #             exemptions:\n    #                 namespaces:\n    #                     - kube-system\n    #                 runtimeClasses: []\n    #                 usernames: []\n    #             kind: PodSecurityConfiguration\n    #     # Configure the API server audit policy.\n    #     auditPolicy:\n    #         apiVersion: audit.k8s.io/v1\n    #         kind: Policy\n    #         rules:\n    #             - level: Metadata\n\n    # # Controller manager server specific configuration options.\n    # controllerManager:\n    #     image: registry.k8s.io/kube-controller-manager:v1.30.0 # The container image used in the controller manager manifest.\n    #     # Extra arguments to supply to the controller manager.\n    #     extraArgs:\n    #         feature-gates: ServerSideApply=true\n\n    # # Kube-proxy server-specific configuration options\n    # proxy:\n    #     disabled: false # Disable kube-proxy deployment on cluster bootstrap.\n    #     image: registry.k8s.io/kube-proxy:v1.30.0 # The container image used in the kube-proxy manifest.\n    #     mode: ipvs # proxy mode of kube-proxy.\n    #     # Extra arguments to supply to kube-proxy.\n    #     extraArgs:\n    #         proxy-mode: iptables\n\n    # # Scheduler server specific configuration options.\n    # scheduler:\n    #     image: registry.k8s.io/kube-scheduler:v1.30.0 # The container image used in the scheduler manifest.\n    #     # Extra arguments to supply to the scheduler.\n    #     extraArgs:\n    #         feature-gates: AllBeta=true\n\n    # # Etcd specific configuration options.\n    # etcd:\n    #     image: gcr.io/etcd-development/etcd:v3.5.13 # The container image used to create the etcd service.\n    #     # The `ca` is the root certificate authority of the PKI.\n    #     ca:\n    #         crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t\n    #         key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==\n    #     # Extra arguments to supply to etcd.\n    #     extraArgs:\n    #         election-timeout: \"5000\"\n    #     # The `advertisedSubnets` field configures the networks to pick etcd advertised IP from.\n    #     advertisedSubnets:\n    #         - 10.0.0.0/8\n\n    # # Core DNS specific configuration options.\n    # coreDNS:\n    #     image: registry.k8s.io/coredns/coredns:v1.11.1 # The `image` field is an override to the default coredns image.\n\n    # # External cloud provider configuration.\n    # externalCloudProvider:\n    #     enabled: true # Enable external cloud provider.\n    #     # A list of urls that point to additional manifests for an external cloud provider.\n    #     manifests:\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml\n\n    # # A list of urls that point to additional manifests.\n    # extraManifests:\n    #     - https://www.example.com/manifest1.yaml\n    #     - https://www.example.com/manifest2.yaml\n\n    # # A map of key value pairs that will be added while fetching the extraManifests.\n    # extraManifestHeaders:\n    #     Token: \"1234567\"\n    #     X-ExtraInfo: info\n\n    # # A list of inline Kubernetes manifests.\n    # inlineManifests:\n    #     - name: namespace-ci # Name of the manifest.\n    #       contents: |- # Manifest contents as a string.\n    #         apiVersion: v1\n    #         kind: Namespace\n    #         metadata:\n    #         \tname: ci\n\n    # # Settings for admin kubeconfig generation.\n    # adminKubeconfig:\n    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).\n\n    # # Allows running workload on control-plane nodes.\n    # allowSchedulingOnControlPlanes: true\n",
            "machine_configuration_input": "version: v1alpha1 # Indicates the schema used to decode the contents.\ndebug: false # Enable verbose logging to the console.\npersist: true\n# Provides machine specific configuration options.\nmachine:\n    type: worker # Defines the role of the machine within the cluster.\n    token: rpuf27.nts20g6mps3x2vqa # The `token` is used by a machine to join the PKI of the cluster.\n    # The root certificate authority of the PKI.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEJtZXVha3B3aFlIOHNWU1NtVHJJdlpNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5EQTVNVFV3TVRReE1qbGFGdzB6TkRBNU1UTXdNVFF4TWpsYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBVTdHUi83d3k2TWhvUmxCYmF2OUwrNWJ5MkVVTEVSeFBuNVBWCnBaTlFQRUtqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVNUV3K0o4d21XZk1PTkNRZgpib21NdXV6dEtRZ3dCUVlESzJWd0EwRUFkT3FNT3UwdkJSbENHaXo3cVZqL1NnaTFSN1p2T3hLOU9xZFhwQjhlCjkyM1o0SHZ0cGx1a2hMVEcxYUY2cjJHcE5aNDh6WlVkcHVvT213a25YRXBqQ3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: \"\"\n    # Extra certificate subject alternative names for the machine's certificate.\n    certSANs: []\n    #   # Uncomment this to enable SANs.\n    #   - 10.0.0.10\n    #   - 172.16.0.10\n    #   - 192.168.0.10\n\n    # Used to provide additional options to the kubelet.\n    kubelet:\n        image: ghcr.io/siderolabs/kubelet:v1.30.0 # The `image` field is an optional reference to an alternative kubelet image.\n        defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.\n        disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.\n        \n        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.\n        # clusterDNS:\n        #     - 10.96.0.10\n        #     - 169.254.2.53\n\n        # # The `extraArgs` field is used to provide additional flags to the kubelet.\n        # extraArgs:\n        #     key: value\n\n        # # The `extraMounts` field is used to add additional mounts to the kubelet container.\n        # extraMounts:\n        #     - destination: /var/lib/example # Destination is the absolute path where the mount will be placed in the container.\n        #       type: bind # Type specifies the mount kind.\n        #       source: /var/lib/example # Source specifies the source path of the mount.\n        #       # Options are fstab style mount options.\n        #       options:\n        #         - bind\n        #         - rshared\n        #         - rw\n\n        # # The `extraConfig` field is used to provide kubelet configuration overrides.\n        # extraConfig:\n        #     serverTLSBootstrap: true\n\n        # # The `KubeletCredentialProviderConfig` field is used to provide kubelet credential configuration.\n        # credentialProviderConfig:\n        #     apiVersion: kubelet.config.k8s.io/v1\n        #     kind: CredentialProviderConfig\n        #     providers:\n        #         - apiVersion: credentialprovider.kubelet.k8s.io/v1\n        #           defaultCacheDuration: 12h\n        #           matchImages:\n        #             - '*.dkr.ecr.*.amazonaws.com'\n        #             - '*.dkr.ecr.*.amazonaws.com.cn'\n        #             - '*.dkr.ecr-fips.*.amazonaws.com'\n        #             - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'\n        #             - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'\n        #           name: ecr-credential-provider\n\n        # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.\n        # nodeIP:\n        #     # The `validSubnets` field configures the networks to pick kubelet node IP from.\n        #     validSubnets:\n        #         - 10.0.0.0/8\n        #         - '!10.0.0.3/32'\n        #         - fdc7::/16\n    # Provides machine specific network configuration options.\n    network: {}\n    # # `interfaces` is used to define the network interface configuration.\n    # interfaces:\n    #     - interface: enp0s1 # The interface name.\n    #       # Assigns static IP addresses to the interface.\n    #       addresses:\n    #         - 192.168.2.0/24\n    #       # A list of routes associated with the interface.\n    #       routes:\n    #         - network: 0.0.0.0/0 # The route's network (destination).\n    #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).\n    #           metric: 1024 # The optional metric for the route.\n    #       mtu: 1500 # The interface's MTU.\n    #       \n    #       # # Picks a network device using the selector.\n\n    #       # # select a device with bus prefix 00:*.\n    #       # deviceSelector:\n    #       #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n    #       # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.\n    #       # deviceSelector:\n    #       #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.\n    #       #     driver: virtio # Kernel driver, supports matching by wildcard.\n    #       # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.\n    #       # deviceSelector:\n    #       #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n    #       #     - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.\n    #       #       driver: virtio # Kernel driver, supports matching by wildcard.\n\n    #       # # Bond specific options.\n    #       # bond:\n    #       #     # The interfaces that make up the bond.\n    #       #     interfaces:\n    #       #         - enp2s0\n    #       #         - enp2s1\n    #       #     # Picks a network device using the selector.\n    #       #     deviceSelectors:\n    #       #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n    #       #         - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.\n    #       #           driver: virtio # Kernel driver, supports matching by wildcard.\n    #       #     mode: 802.3ad # A bond option.\n    #       #     lacpRate: fast # A bond option.\n\n    #       # # Bridge specific options.\n    #       # bridge:\n    #       #     # The interfaces that make up the bridge.\n    #       #     interfaces:\n    #       #         - enxda4042ca9a51\n    #       #         - enxae2a6774c259\n    #       #     # A bridge option.\n    #       #     stp:\n    #       #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.\n\n    #       # # Indicates if DHCP should be used to configure the interface.\n    #       # dhcp: true\n\n    #       # # DHCP specific options.\n    #       # dhcpOptions:\n    #       #     routeMetric: 1024 # The priority of all routes received via DHCP.\n\n    #       # # Wireguard specific configuration.\n\n    #       # # wireguard server example\n    #       # wireguard:\n    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n    #       #     listenPort: 51111 # Specifies a device's listening port.\n    #       #     # Specifies a list of peer configurations to apply to a device.\n    #       #     peers:\n    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n    #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.\n    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n    #       #           allowedIPs:\n    #       #             - 192.168.1.0/24\n    #       # # wireguard peer example\n    #       # wireguard:\n    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n    #       #     # Specifies a list of peer configurations to apply to a device.\n    #       #     peers:\n    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n    #       #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.\n    #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.\n    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n    #       #           allowedIPs:\n    #       #             - 192.168.1.0/24\n\n    #       # # Virtual (shared) IP address configuration.\n\n    #       # # layer2 vip example\n    #       # vip:\n    #       #     ip: 172.16.199.55 # Specifies the IP address to be used.\n\n    # # Used to statically set the nameservers for the machine.\n    # nameservers:\n    #     - 8.8.8.8\n    #     - 1.1.1.1\n\n    # # Allows for extra entries to be added to the `/etc/hosts` file\n    # extraHostEntries:\n    #     - ip: 192.168.1.100 # The IP of the host.\n    #       # The host alias.\n    #       aliases:\n    #         - example\n    #         - example.domain.tld\n\n    # # Configures KubeSpan feature.\n    # kubespan:\n    #     enabled: true # Enable the KubeSpan feature.\n\n    # Used to provide instructions for installations.\n    install:\n        disk: /dev/sda # The disk used for installations.\n        image: ghcr.io/siderolabs/installer:v1.7.0 # Allows for supplying the image used to perform the installation.\n        wipe: false # Indicates if the installation disk should be wiped at installation time.\n        \n        # # Look up disk using disk attributes like model, size, serial and others.\n        # diskSelector:\n        #     size: 4GB # Disk size.\n        #     model: WDC* # Disk model `/sys/block/\u003cdev\u003e/device/model`.\n        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.\n\n        # # Allows for supplying extra kernel args via the bootloader.\n        # extraKernelArgs:\n        #     - talos.platform=metal\n        #     - reboot=k\n\n        # # Allows for supplying additional system extension images to install on top of base Talos image.\n        # extensions:\n        #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0 # System extension image.\n    # Used to configure the machine's container image registry mirrors.\n    registries: {}\n    # # Specifies mirror configuration for each registry host namespace.\n    # mirrors:\n    #     ghcr.io:\n    #         # List of endpoints (URLs) for registry mirrors to use.\n    #         endpoints:\n    #             - https://registry.insecure\n    #             - https://ghcr.io/v2/\n\n    # # Specifies TLS \u0026 auth configuration for HTTPS image registries.\n    # config:\n    #     registry.insecure:\n    #         # The TLS configuration for the registry.\n    #         tls:\n    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).\n    #             \n    #             # # Enable mutual TLS authentication with the registry.\n    #             # clientIdentity:\n    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t\n    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==\n    #         \n    #         # # The auth configuration for this registry.\n    #         # auth:\n    #         #     username: username # Optional registry authentication.\n    #         #     password: password # Optional registry authentication.\n\n    # Features describe individual Talos features that can be switched on or off.\n    features:\n        rbac: true # Enable role-based access control (RBAC).\n        stableHostname: true # Enable stable default hostname.\n        apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.\n        diskQuotaSupport: true # Enable XFS project quota support for EPHEMERAL partition and user disks.\n        # KubePrism - local proxy/load balancer on defined port that will distribute\n        kubePrism:\n            enabled: true # Enable KubePrism support - will start local load balancing proxy.\n            port: 7445 # KubePrism port.\n        # Configures host DNS caching resolver.\n        hostDNS:\n            enabled: true # Enable host DNS caching resolver.\n        \n        # # Configure Talos API access from Kubernetes pods.\n        # kubernetesTalosAPIAccess:\n        #     enabled: true # Enable Talos API access from Kubernetes pods.\n        #     # The list of Talos API roles which can be granted for access from Kubernetes pods.\n        #     allowedRoles:\n        #         - os:reader\n        #     # The list of Kubernetes namespaces Talos API access is available from.\n        #     allowedKubernetesNamespaces:\n        #         - kube-system\n    \n    # # Provides machine specific control plane configuration options.\n\n    # # ControlPlane definition example.\n    # controlPlane:\n    #     # Controller manager machine specific configuration options.\n    #     controllerManager:\n    #         disabled: false # Disable kube-controller-manager on the node.\n    #     # Scheduler machine specific configuration options.\n    #     scheduler:\n    #         disabled: true # Disable kube-scheduler on the node.\n\n    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.\n\n    # # nginx static pod.\n    # pods:\n    #     - apiVersion: v1\n    #       kind: pod\n    #       metadata:\n    #         name: nginx\n    #       spec:\n    #         containers:\n    #             - image: nginx\n    #               name: nginx\n\n    # # Used to partition, format and mount additional disks.\n\n    # # MachineDisks list example.\n    # disks:\n    #     - device: /dev/sdb # The name of the disk to use.\n    #       # A list of partitions to create on the disk.\n    #       partitions:\n    #         - mountpoint: /var/mnt/extra # Where to mount the partition.\n    #           \n    #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.\n\n    #           # # Human readable representation.\n    #           # size: 100 MB\n    #           # # Precise value in bytes.\n    #           # size: 1073741824\n\n    # # Allows the addition of user specified files.\n\n    # # MachineFiles usage example.\n    # files:\n    #     - content: '...' # The contents of the file.\n    #       permissions: 0o666 # The file's permissions in octal.\n    #       path: /tmp/file.txt # The path of the file.\n    #       op: append # The operation to use\n\n    # # The `env` field allows for the addition of environment variables.\n\n    # # Environment variables definition examples.\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: info\n    #     GRPC_GO_LOG_VERBOSITY_LEVEL: \"99\"\n    #     https_proxy: http://SERVER:PORT/\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: error\n    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/\n    # env:\n    #     https_proxy: http://DOMAIN\\USERNAME:PASSWORD@SERVER:PORT/\n\n    # # Used to configure the machine's time settings.\n\n    # # Example configuration for cloudflare ntp server.\n    # time:\n    #     disabled: false # Indicates if the time service is disabled for the machine.\n    #     # description: |\n    #     servers:\n    #         - time.cloudflare.com\n    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.\n\n    # # Used to configure the machine's sysctls.\n\n    # # MachineSysctls usage example.\n    # sysctls:\n    #     kernel.domainname: talos.dev\n    #     net.ipv4.ip_forward: \"0\"\n    #     net/ipv6/conf/eth0.100/disable_ipv6: \"1\"\n\n    # # Used to configure the machine's sysfs.\n\n    # # MachineSysfs usage example.\n    # sysfs:\n    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance\n\n    # # Machine system disk encryption configuration.\n    # systemDiskEncryption:\n    #     # Ephemeral partition encryption.\n    #     ephemeral:\n    #         provider: luks2 # Encryption provider to use for the encryption.\n    #         # Defines the encryption keys generation and storage method.\n    #         keys:\n    #             - # Deterministically generated key from the node UUID and PartitionLabel.\n    #               nodeID: {}\n    #               slot: 0 # Key slot number for LUKS2 encryption.\n    #               \n    #               # # KMS managed encryption key.\n    #               # kms:\n    #               #     endpoint: https://192.168.88.21:4443 # KMS endpoint to Seal/Unseal the key.\n    #         \n    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.\n    #         # cipher: aes-xts-plain64\n\n    #         # # Defines the encryption sector size.\n    #         # blockSize: 4096\n\n    #         # # Additional --perf parameters for the LUKS2 encryption.\n    #         # options:\n    #         #     - no_read_workqueue\n    #         #     - no_write_workqueue\n\n    # # Configures the udev system.\n    # udev:\n    #     # List of udev rules to apply to the udev system\n    #     rules:\n    #         - SUBSYSTEM==\"drm\", KERNEL==\"renderD*\", GROUP=\"44\", MODE=\"0660\"\n\n    # # Configures the logging system.\n    # logging:\n    #     # Logging destination.\n    #     destinations:\n    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are \"tcp\" and \"udp\".\n    #           format: json_lines # Logs format.\n\n    # # Configures the kernel.\n    # kernel:\n    #     # Kernel modules to load.\n    #     modules:\n    #         - name: brtfs # Module name.\n\n    # # Configures the seccomp profiles for the machine.\n    # seccompProfiles:\n    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.\n    #       # The `value` field is used to provide the seccomp profile.\n    #       value:\n    #         defaultAction: SCMP_ACT_LOG\n\n    # # Configures the node labels for the machine.\n\n    # # node labels example.\n    # nodeLabels:\n    #     exampleLabel: exampleLabelValue\n\n    # # Configures the node taints for the machine. Effect is optional.\n\n    # # node taints example.\n    # nodeTaints:\n    #     exampleTaint: exampleTaintValue:NoSchedule\n# Provides cluster specific configuration options.\ncluster:\n    id: 8slduxY_GAi_6kXZVBT1HimFxw7qI8ZI8rscA9QEsa8= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).\n    secret: jB9mqchMnYCyAOcV0MM6RY+2S3qPgGgqpzd7gg6Br4o= # Shared secret of cluster (base64 encoded random 32 bytes).\n    # Provides control plane specific configuration options.\n    controlPlane:\n        endpoint: https://10.0.0.70:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.\n    # Provides cluster specific network configuration options.\n    network:\n        dnsDomain: cluster.local # The domain used by Kubernetes DNS.\n        # The pod subnet CIDR.\n        podSubnets:\n            - 10.244.0.0/16\n        # The service subnet CIDR.\n        serviceSubnets:\n            - 10.96.0.0/12\n        \n        # # The CNI used.\n        # cni:\n        #     name: custom # Name of CNI to use.\n        #     # URLs containing manifests to apply for the CNI.\n        #     urls:\n        #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml\n    token: uionez.ajblvmwkqhy7fre4 # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.\n    # The base64 encoded root certificate authority used by Kubernetes.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpakNDQVRDZ0F3SUJBZ0lSQUtJa3N3WXE4aFBjUDMwNElqV3RJQ013Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlOREE1TVRVd01UUXhNamxhRncwek5EQTVNVE13TVRReApNamxhTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVM2bXM5NmUyblUyZ3d0b2hZVWxsdUFtZ1JTUk9hdnUxS0F2WlpqNTFQTk5jSjhnKy96ekVFcTBlYWQKc2gyREhweWdwU1p1UDZVSlhkVXZKWElWOThXR28yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGQTRqK2ZWY0szOVhobkF0TmplZWRDUitVTDg2TUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUhWMi9xUmsKM3VMSld2ZG1ldnpMTGhQTmdQTWdZWTZ6TGVyaFozSkwvMHBYQWlFQTRKRXB6a245SjFkL1VsRVRSMXRCR2xSWQpMSENHbUlYS3BESmhpcHZhRVM4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: \"\"\n    # Configures cluster member discovery.\n    discovery:\n        enabled: true # Enable the cluster membership discovery feature.\n        # Configure registries used for cluster member discovery.\n        registries:\n            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information\n            kubernetes:\n                disabled: true # Disable Kubernetes discovery registry.\n            # Service registry is using an external service to push and pull information about cluster members.\n            service: {}\n            # # External service endpoint.\n            # endpoint: https://discovery.talos.dev/\n    \n    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).\n\n    # # Decryption secret example (do not use in production!).\n    # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=\n\n    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).\n\n    # # Decryption secret example (do not use in production!).\n    # secretboxEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=\n\n    # # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.\n\n    # # AggregatorCA example.\n    # aggregatorCA:\n    #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t\n    #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==\n\n    # # The base64 encoded private key for service account token generation.\n\n    # # AggregatorCA example.\n    # serviceAccount:\n    #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==\n\n    # # API server specific configuration options.\n    # apiServer:\n    #     image: registry.k8s.io/kube-apiserver:v1.30.0 # The container image used in the API server manifest.\n    #     # Extra arguments to supply to the API server.\n    #     extraArgs:\n    #         feature-gates: ServerSideApply=true\n    #         http2-max-streams-per-connection: \"32\"\n    #     # Extra certificate subject alternative names for the API server's certificate.\n    #     certSANs:\n    #         - 1.2.3.4\n    #         - 4.5.6.7\n    #     # Configure the API server admission plugins.\n    #     admissionControl:\n    #         - name: PodSecurity # Name is the name of the admission controller.\n    #           # Configuration is an embedded configuration object to be used as the plugin's\n    #           configuration:\n    #             apiVersion: pod-security.admission.config.k8s.io/v1alpha1\n    #             defaults:\n    #                 audit: restricted\n    #                 audit-version: latest\n    #                 enforce: baseline\n    #                 enforce-version: latest\n    #                 warn: restricted\n    #                 warn-version: latest\n    #             exemptions:\n    #                 namespaces:\n    #                     - kube-system\n    #                 runtimeClasses: []\n    #                 usernames: []\n    #             kind: PodSecurityConfiguration\n    #     # Configure the API server audit policy.\n    #     auditPolicy:\n    #         apiVersion: audit.k8s.io/v1\n    #         kind: Policy\n    #         rules:\n    #             - level: Metadata\n\n    # # Controller manager server specific configuration options.\n    # controllerManager:\n    #     image: registry.k8s.io/kube-controller-manager:v1.30.0 # The container image used in the controller manager manifest.\n    #     # Extra arguments to supply to the controller manager.\n    #     extraArgs:\n    #         feature-gates: ServerSideApply=true\n\n    # # Kube-proxy server-specific configuration options\n    # proxy:\n    #     disabled: false # Disable kube-proxy deployment on cluster bootstrap.\n    #     image: registry.k8s.io/kube-proxy:v1.30.0 # The container image used in the kube-proxy manifest.\n    #     mode: ipvs # proxy mode of kube-proxy.\n    #     # Extra arguments to supply to kube-proxy.\n    #     extraArgs:\n    #         proxy-mode: iptables\n\n    # # Scheduler server specific configuration options.\n    # scheduler:\n    #     image: registry.k8s.io/kube-scheduler:v1.30.0 # The container image used in the scheduler manifest.\n    #     # Extra arguments to supply to the scheduler.\n    #     extraArgs:\n    #         feature-gates: AllBeta=true\n\n    # # Etcd specific configuration options.\n    # etcd:\n    #     image: gcr.io/etcd-development/etcd:v3.5.13 # The container image used to create the etcd service.\n    #     # The `ca` is the root certificate authority of the PKI.\n    #     ca:\n    #         crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t\n    #         key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==\n    #     # Extra arguments to supply to etcd.\n    #     extraArgs:\n    #         election-timeout: \"5000\"\n    #     # The `advertisedSubnets` field configures the networks to pick etcd advertised IP from.\n    #     advertisedSubnets:\n    #         - 10.0.0.0/8\n\n    # # Core DNS specific configuration options.\n    # coreDNS:\n    #     image: registry.k8s.io/coredns/coredns:v1.11.1 # The `image` field is an override to the default coredns image.\n\n    # # External cloud provider configuration.\n    # externalCloudProvider:\n    #     enabled: true # Enable external cloud provider.\n    #     # A list of urls that point to additional manifests for an external cloud provider.\n    #     manifests:\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml\n\n    # # A list of urls that point to additional manifests.\n    # extraManifests:\n    #     - https://www.example.com/manifest1.yaml\n    #     - https://www.example.com/manifest2.yaml\n\n    # # A map of key value pairs that will be added while fetching the extraManifests.\n    # extraManifestHeaders:\n    #     Token: \"1234567\"\n    #     X-ExtraInfo: info\n\n    # # A list of inline Kubernetes manifests.\n    # inlineManifests:\n    #     - name: namespace-ci # Name of the manifest.\n    #       contents: |- # Manifest contents as a string.\n    #         apiVersion: v1\n    #         kind: Namespace\n    #         metadata:\n    #         \tname: ci\n\n    # # Settings for admin kubeconfig generation.\n    # adminKubeconfig:\n    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).\n\n    # # Allows running workload on control-plane nodes.\n    # allowSchedulingOnControlPlanes: true\n",
            "node": "10.0.0.73",
            "timeouts": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "client_configuration"
              },
              {
                "type": "get_attr",
                "value": "client_key"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_configuration_input"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_configuration"
              }
            ]
          ],
          "dependencies": [
            "data.talos_machine_configuration.machineconfig_worker",
            "proxmox_virtual_environment_download_file.talos_nocloud_image",
            "proxmox_virtual_environment_vm.talos_cp_01",
            "proxmox_virtual_environment_vm.talos_worker_01",
            "talos_machine_secrets.machine_secrets"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "talos_machine_secrets",
      "name": "machine_secrets",
      "provider": "provider[\"registry.terraform.io/siderolabs/talos\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "client_configuration": {
              "ca_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEJtZXVha3B3aFlIOHNWU1NtVHJJdlpNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5EQTVNVFV3TVRReE1qbGFGdzB6TkRBNU1UTXdNVFF4TWpsYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBVTdHUi83d3k2TWhvUmxCYmF2OUwrNWJ5MkVVTEVSeFBuNVBWCnBaTlFQRUtqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVNUV3K0o4d21XZk1PTkNRZgpib21NdXV6dEtRZ3dCUVlESzJWd0EwRUFkT3FNT3UwdkJSbENHaXo3cVZqL1NnaTFSN1p2T3hLOU9xZFhwQjhlCjkyM1o0SHZ0cGx1a2hMVEcxYUY2cjJHcE5aNDh6WlVkcHVvT213a25YRXBqQ3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
              "client_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJLRENCMjZBREFnRUNBaEFUSW5vM3ErWkR2eTlpcENoeFp3RFhNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5EQTVNVFV3TVRReE1qbGFGdzB5TlRBNU1UVXdNVFF4TWpsYU1CTXhFVEFQQmdOVgpCQW9UQ0c5ek9tRmtiV2x1TUNvd0JRWURLMlZ3QXlFQVFCVlpUVThKT2xrMllESklHSjREQ1NLdmtGZ2o3NXkrCnVXVjJZTHFqWXlTalNEQkdNQTRHQTFVZER3RUIvd1FFQXdJSGdEQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0QKQWpBZkJnTlZIU01FR0RBV2dCVGtURDRuekNaWjh3NDBKQjl1aVl5NjdPMHBDREFGQmdNclpYQURRUURmWjN3OQpsWFRTNE1CczlKeVJFTTRMNGE3dzZtSFNOTzAwL1huWktqclU2T2JHTmIxTzJjTy9Oc2FKOUtzU244OWkySDJ1CjZiTjZkZmE1bkhMUjYrRUQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
              "client_key": "LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJTWp2NDJ3Z1ZPYlFKemhyUG8zUFFkM1ZuQ1IyL0V3VHh4cFVnb3lSR1IyNQotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K"
            },
            "id": "machine_secrets",
            "machine_secrets": {
              "certs": {
                "etcd": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmakNDQVNTZ0F3SUJBZ0lSQUtrNUFQdlB4TzVITDhJT1RaZ25yK013Q2dZSUtvWkl6ajBFQXdJd0R6RU4KTUFzR0ExVUVDaE1FWlhSalpEQWVGdzB5TkRBNU1UVXdNVFF4TWpsYUZ3MHpOREE1TVRNd01UUXhNamxhTUE4eApEVEFMQmdOVkJBb1RCR1YwWTJRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFRV2IxYmxmUnhFCmZpSnZXeiszQnBmTlBhd1poZEFlSnpRVmQrMGgyb3ZtazFuU2wzdGhQNWQ4WnlsZE8yMUk0ZFdiMWtZZnhxSmgKdm5XVDY2VGN6N09XbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSApBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkdnc3NmNi81a2p5CmloaCs0MS80VFYwcFMxNkZNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJRmxWM0lQWHdkY0N6WTJITzdIeldKR04KaUxTcStRNU5kRFFtanM2ZXlya2ZBaUVBeWpkQTNjdWNTZ1o2L2RHdmRPTE9RcHQ0L3ZNWUdCTWtxL1JvQ1lmUApMck09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                  "key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUVKbzZWTFVGU1BwVWtySXg2THVadjdBWjk5U0JvQ2tiOHg4K3JGSDI1UGpvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFRm05VzVYMGNSSDRpYjFzL3R3YVh6VDJzR1lYUUhpYzBGWGZ0SWRxTDVwTlowcGQ3WVQrWApmR2NwWFR0dFNPSFZtOVpHSDhhaVliNTFrK3VrM00remxnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
                },
                "k8s": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpakNDQVRDZ0F3SUJBZ0lSQUtJa3N3WXE4aFBjUDMwNElqV3RJQ013Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlOREE1TVRVd01UUXhNamxhRncwek5EQTVNVE13TVRReApNamxhTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVM2bXM5NmUyblUyZ3d0b2hZVWxsdUFtZ1JTUk9hdnUxS0F2WlpqNTFQTk5jSjhnKy96ekVFcTBlYWQKc2gyREhweWdwU1p1UDZVSlhkVXZKWElWOThXR28yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGQTRqK2ZWY0szOVhobkF0TmplZWRDUitVTDg2TUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUhWMi9xUmsKM3VMSld2ZG1ldnpMTGhQTmdQTWdZWTZ6TGVyaFozSkwvMHBYQWlFQTRKRXB6a245SjFkL1VsRVRSMXRCR2xSWQpMSENHbUlYS3BESmhpcHZhRVM4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                  "key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU42NkxyTlhFaEdRaFdpaWlycEJXQzVqNWJPa1NxSjJnWDVxYnY1MzhOTlZvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFdXByUGVudHAxTm9NTGFJV0ZKWmJnSm9FVWtUbXI3dFNnTDJXWStkVHpUWENmSVB2ODh4QgpLdEhtbmJJZGd4NmNvS1VtYmorbENWM1ZMeVZ5RmZmRmhnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
                },
                "k8s_aggregator": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJYekNDQVFXZ0F3SUJBZ0lRYzBMSkluSkJhVGNuWVhRWjhPUzNXVEFLQmdncWhrak9QUVFEQWpBQU1CNFgKRFRJME1Ea3hOVEF4TkRFeU9Wb1hEVE0wTURreE16QXhOREV5T1Zvd0FEQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5QXdFSEEwSUFCRml6Q0VubXg0N1ZnWTM0U0pKYlIxZloyNkNTWDQybVB5YmVsVVNCb1RuNW1NVWFTeEF3CmJKbTRCMmZmOHl0S2ZJMmEwcnN6a1lLL1BVdTcvYm84bE5HallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZApCZ05WSFE0RUZnUVVPTkZySFk2djFnSGlRdU10aVJzWnVFaTF0U3d3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUlnCktTanpPQkpWQndiVmtXdkErNHE3VzJ1Mjg5NUNDUmpkK0swWG5pcGNwZG9DSVFDc1BXejRmSmEveW0ybDhkcjkKR2RmdG5pNzg2MWRvVUJtQXRxcVRhOHB1cEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                  "key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUZPKzk1Z3dWdVhzUXlWSHBOTU1HazNLdzZjUFNqakxjUW5yVkhad1lnbHNvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFV0xNSVNlYkhqdFdCamZoSWtsdEhWOW5ib0pKZmphWS9KdDZWUklHaE9mbVl4UnBMRURCcwptYmdIWjkvekswcDhqWnJTdXpPUmdyODlTN3Y5dWp5VTBRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
                },
                "k8s_serviceaccount": {
                  "key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBeEY2YXpMNGIyLzJHdU1uNkhOQXZIZ3FablMzeHAvSkQ3ZDNxcXE3b05KeGQyUTMzCjVySlNmcFhJZlIrMklUcVNYSjB2elh6ZzVTSnFneG5tZE9vQkR2VGQrS1B0SVNHdUdHcWZmSXJVaGUzV0t1QWYKdFZxQVBOYklNRlRNUjNqNHdpaExMZTR2TXhhV0xlOExLZ2padkRBaWFRRE1vQmRkYkp2TW4vK21DZ05PbHZsMApzSjNEQklxM3czSTY0dzN1Wm8ycDdjUE11WjNsVk5qakw3NWNxRlM5RXNOdVd0dXgzUGNERVBZNjZtR0sxZmRyCkRKTzNGZDd2TGhLVFlLVEQyM0JEWnRwVVNQdUlneUMvTHg5NlBDR0hFNzF2RFN0WGw5R0lpd2pYMmd5SjZGQysKZGFKdFQ2cHJJVlJRSUVnZ1BYakdxY0w4K2UreXVoY0VoMzJXQjhuVloramllNTA0RkIvNDNGT1V5SlVSRU5rTwpSWXdYSWEzbDlSOGJCcytXNUczN0ZiemVOV1p4akZEbTVoVjJXOHljSElwYnhvZnRvTnBZaUJJRWhmTHdDRmxxCkFyTGpuWTdVUHcwRGI3OTlJTFg0eERHMlZZak55aEVVaDNsTkgzNGRhU2puekxsNzQxTnN0dHBjbDEyVG4xTUgKS1U5TzZSWHFHUXBjcW0zOGhWUHlwVVZoSkF4dXN5Yml2WGxGMEJldGdZTkF3VEtNVjV5NGFoZ1h5STFOM3FHZQpsMHZLUS9POVIvY3QvL3p3ZGZSSExBSDNWWHlGdDJMNnRYZ21yRGlsRHlMek4xTEswZFZTV1pZeVZ2dzZnR2QxCk4yUDR6VkQ2cGlISGkxZ2tjQjZHVGtTSUZYak5VMjV2MFBSMXJEY1drRDRvclZDWS9UWlcrUjloSDZFQ0F3RUEKQVFLQ0FnQTFCRTNMQlhERUhsam5QekRWNHFjMTl5cXVNeDlSZHFrOGFYUFlEVTBJRjBlSE9LdzdqdDJTNjZHcgpsb28zd25hTnBxcW5VaFh1QnpLMm5xR0g0ejNSNmU2Y0dMWUhBZTdkREx4dWhaVUhhOFVzNGtIdFZyZlV0VEJyClRCbXpHa2dmTTMzSXNzdnZnU09lMXpFdWNpRkhHNy9PbGJhcGFtV0EwemVWNHhIVEZqMTdxWElGMVRJMzRiUG4KZ3NtL1Q1MlQ5cDl3WURLLzBvOStMdWgzbFcreXl0NFpXTVpNcFpBSjFtN3ZmMnM4cUlVeGE1RnRYZHhLZlZ3YQpGazNRQSt3VkxPUWx1c0NTeThaNWtMZk5ZelEvVTlZQ1VGelJNMmg4eHNlVXNoaUUrR21yWFZGdXRTSEtKbnF5CkR1OXJKODM4aXNVb1JFckV1Q0NLK1hmeGxNaVNiR0xkWHNXYnlrd2laVnF2VkhDOTUycEVGUUdhUEgwZ2YrNWcKRjNtWmwwWDVRZ0hSYkZhdUlFTFBEUHdoM2RvUGlPcWN1bjNqdHJOa0orczRXTUZRSFptQ0tJc1NtK2tIc0tCaApwZjZwdng3Sm1xSVN0L25zbjRObE9yakVvaEZMK3E4ZGd4R08yOTVtUnB2RWs1R0NPQ0hQczVwQU1zbHNpbXVECmtwMGhNYXdLUzhMT25JVG9qRlpDVUIwZlRWZVZ2UHdKY1hHTU5XdVFkR0hUQVRKSFRiU3pxYTZ6Q0NNbG93dmkKUWtoU3VtS1ZwYmNJYW9pcFJEWFBxekFEb1F5Vm51ekU3d29tZHc3N1ZPRXhCTTVtN2NzQXBiNStHWDNFR3pSZQpyaHd4TzA5YktxOEVNYm4zT2RZVUdrVUJuaGFuTmZwMUNuS0NENTk1N1JqS09jYjlXUUtDQVFFQTBWSS8vb2JqCm9UNXRzdVNNcE5QNjhQdHJwSkxXUUxpSW1YSVQ4ZnErUjQrRERlZ1pNTHUzVnBzSGhGWW9OOExyZ1hSNGtad0YKSDBWNDBSZ0xXOVlOSjhKUHB6L3U0dlU2Tm45ZHpSTnNpRFN6TXlNcjhHR2NWb3dqbDh5eWdGbEtkaTVyU2JRNgpQQ1NZTFdBOG13TDRwekgyR0FyY3FHdkV2STBsUTFiT1BuQUtLRkxCS3RBTVltVmtGM0FYTGZGMVBVYXVhU3gzClZQOXNkUGZJUHpzQkZCK3BLQnZ4Nk5PeE1EY1dnZUYzSXlxSG5qU245aHg3eDd3dUxsTVB0RXhOVnFzV0JiTkwKanR2clJCTHVMVW82SjYxY2lCVXFJWHdvSHBVbWRPTy9vbG4xQVRXOGtEL1I3bWZZd2QwSk10NTYxVHdtWnhTZgp5QU9OS00ydzA5N2c4d0tDQVFFQThDajIvVVNjTG5ENVA5WVBLczFpdUFUdGFXbE5kMnQ5UWJtejVKMjFBRXR1ClZzeUk0dkU4YTZzZnlRU2VsZ2JRTEs3SFNYajVaR01oZWtIbXRMWHdkaFVLMFF6elk2Z1VGK09sM2V6eTlQUDcKSWs2c2dvdFJVcW8zTHN4bUU0UmVYUDJhQ2V6TGdLYUU2NEtGVDQyZkp0UG5leU5keTlERzhkdGdGWnFZaFZzcwpqWjIzSlh1VHlINmk2WnQxVThRZTFMUld4UlF0aGRHV0hMSGF4M1ArVHRpMkNJbWIvOFJKQUk3VGgwS1EyeFhTCjVuUjJwN0RIb3lZLzlBdG9oVFBqMmpkREtraklXOVFEWEc1cDU3YldlN0JTQStmRC9qcGJvR2ZZSUhwY2RQNXgKbUFmNzZ6cnBEemx3WGlQSU5BOFdIWFBSdk0rR01qNk1YNDk4RGN5Q0d3S0NBUUJINmk0NlVEV2NqRW84RC9HUwpINUl6Z08yMm1Rd3JLRHNtSE45bFgzUklPYklZOFFqV2lXZXZ4WXVMbDk0eGFqSm5RNUM0MWhXY2JNM1phSjFlCmErZ1JKTjBnNVFJNXoyNjBrb1d6azF6U1h1akNSTzh2b3htSFVwWlg3T2ZXMk5hUVM5cG9kQmNkMnFTOTBqYUEKTzBFYWtEdXdmdXJZb2szeFNiem5xY2NxQkd3NDlsV1BVL010U3hCY1RSSnBvbTlaSWhPQjV0a0l4c2lJVnlqaApNSEJxYllZOFZYMkRORmZIN09VNnNpK3dVVWhPdm1DR1dicmRJSFh0VEhRMHlaSTRtSWIwWm1rcko3dG9vK2hZCmZ3d0QzYmZRdVJURWRGZUVTbEh3RHQ4ajlDd013bDJLWWFMS2Vic3F2N29OVkFwM2dEYmhhMkNKNDA1NEdsTUsKTjZTcEFvSUJBRUtwTEQyS29NdG5RbGdNdzdMK3hXc011eFZxVEQxY2thei9yY1pFWEN4VHc3SEdIaXpZQnd4Zgp1SGZrbDF4UFVkTkZSRDNKblhmVzZFRDJMK0p6S2VhczJvN0NTSUNkODgzWnUzMkpPcnJ4U2dEdzA0Tjh4anJxCjBseGtFZVZTOVpwY0xqaVpDTGVTQVEwWjhvVHRhNEtzaVBFdUZPZnc4SGZMaTdVVGIwaDgwVFlSMC9kTWdPM0MKOE5kazlrRWxDK1hBbE9FcFE2V0VVbVZ1bktxR01NMlQ2NXNkRHpjRU5iczQ2Yy8ra3hTc3p4aDJ0VVRBbGZsYwpNWjQ4MkdzNHh3TVlHY1dQNUVWUTZRbnIvK3Q0WGJxQmE1SjM3M2dPbk1ZK2JNZy9EcERPMjVyMmhGOTd2NXNoCk4yWjZDaVVoRnVOZjlaU3lDYTdDbTlZZWpyR0oxWWNDZ2dFQkFKcXlPbC9hR2EwbXlteE9pY0pXMkFsWnkzRjkKWWJyNXViOTRFMWVvZ2lrVEprZkZDOHE2ZmUyUjYycnlVSmE4WERqNW9lMmo2SWNQUEU5ZzR6TVg0MFg3VTU2bQp2MzBWWHgwQTUvS2NENG1WekVwb2RUQVR6bm95eVRtY2hIRWs5VVF5TzNXd2w1Nnhyc1AraW0zMVlVVVVKRldpClM5WXpsUFFLY2RzODRscWNjK0I2OHVYaldxOHR5V29oRFcxTUZVamY1SFhzRGJQUkVOQTdMOUNYWVowN25oWU0KS2pTYWxyZHgwaXJocFdJMkdhZzhCZjFtT1hYaGUxSFBMajdqMlQxZHVlZ0ltMzNNU2VUK0M2bkJ0dTZvb2FsUQo4ZE1UK3Axdm9HNmFyRVNpeDdaNGkvWnVJYTFJeXQ0d0RmQmgwM0tEK2xYbDU2Z3krMlhsQThXajlpYz0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K"
                },
                "os": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEJtZXVha3B3aFlIOHNWU1NtVHJJdlpNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5EQTVNVFV3TVRReE1qbGFGdzB6TkRBNU1UTXdNVFF4TWpsYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBVTdHUi83d3k2TWhvUmxCYmF2OUwrNWJ5MkVVTEVSeFBuNVBWCnBaTlFQRUtqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVNUV3K0o4d21XZk1PTkNRZgpib21NdXV6dEtRZ3dCUVlESzJWd0EwRUFkT3FNT3UwdkJSbENHaXo3cVZqL1NnaTFSN1p2T3hLOU9xZFhwQjhlCjkyM1o0SHZ0cGx1a2hMVEcxYUY2cjJHcE5aNDh6WlVkcHVvT213a25YRXBqQ3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                  "key": "LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJQWRmUWxRNnhXRDYzMWhpMm9TZ2FpVU5HSzlmU29sRXI3ZDRKbjJtQXA0NQotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K"
                }
              },
              "cluster": {
                "id": "8slduxY_GAi_6kXZVBT1HimFxw7qI8ZI8rscA9QEsa8=",
                "secret": "jB9mqchMnYCyAOcV0MM6RY+2S3qPgGgqpzd7gg6Br4o="
              },
              "secrets": {
                "aescbc_encryption_secret": null,
                "bootstrap_token": "uionez.ajblvmwkqhy7fre4",
                "secretbox_encryption_secret": "4N5U1/Bhntbei1Sz0lyh3SmYW00G+KamspvrAtyOw5s="
              },
              "trustdinfo": {
                "token": "rpuf27.nts20g6mps3x2vqa"
              }
            },
            "talos_version": "v1.7"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "cluster"
              },
              {
                "type": "get_attr",
                "value": "secret"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "secrets"
              },
              {
                "type": "get_attr",
                "value": "aescbc_encryption_secret"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "secrets"
              },
              {
                "type": "get_attr",
                "value": "bootstrap_token"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "secrets"
              },
              {
                "type": "get_attr",
                "value": "secretbox_encryption_secret"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "trustdinfo"
              },
              {
                "type": "get_attr",
                "value": "token"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "certs"
              },
              {
                "type": "get_attr",
                "value": "k8s_serviceaccount"
              },
              {
                "type": "get_attr",
                "value": "key"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "certs"
              },
              {
                "type": "get_attr",
                "value": "os"
              },
              {
                "type": "get_attr",
                "value": "key"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "certs"
              },
              {
                "type": "get_attr",
                "value": "etcd"
              },
              {
                "type": "get_attr",
                "value": "key"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "certs"
              },
              {
                "type": "get_attr",
                "value": "k8s"
              },
              {
                "type": "get_attr",
                "value": "key"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "certs"
              },
              {
                "type": "get_attr",
                "value": "k8s_aggregator"
              },
              {
                "type": "get_attr",
                "value": "key"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "client_configuration"
              },
              {
                "type": "get_attr",
                "value": "client_key"
              }
            ]
          ]
        }
      ]
    }
  ],
  "check_results": null
}
